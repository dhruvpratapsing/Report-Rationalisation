SELECT   
	A.[ORGANIZATION DIMENSION SURROGATE KEY]       ,
	A.[ORGANIZATION DIMENSION VERSION NUMBER]       ,
	A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]       ,
	A.[ORGANIZATION LEAD DIMENSION VERSION NUMBER]       ,
	A.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY]       ,
	A.[PACE PERFORMANCE TARGET VERSION NUMBER]       ,
	A.[PROCESS DATE]       ,
	CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END AS [TENURE DATA]          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) AS MONTH          --,
	DATEDIFF(MONTH, [TENURE DATA], DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) +1, 0))) AS EOQ_MONTH    ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) AS EOQ_MONTH    --,
	(DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0))) AS CURRENT_QTR    /*,
	CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END AS QUARTER_END*/    --,
	DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)) AS PREVIOUS_QTR          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) AS EOY_MONTH          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS         ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)), -1)) AS EOY_TENURE         ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END), -1)) AS EOQ_TENURE        ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)), -1)) AS EOM_TENURE       ,
	A.[PRODUCTION DATE]       ,
	A.[SNAPSHOT TYPE CODE]       ,
	A.[BUSINESS INTERRUPTION DAY VALUE]          ,
	B.[SOURCE SYSTEM KEY TEXT] AS TSID          ,
	CONCAT(B.[FIRST NAME],' ',B.[LAST NAME]) AS FP_NAME          ,
	B.[JOB TYPE CODE]          ,
	CONCAT((LEFT(SALE_HIER_DIM.[ORZN_ZONE_CDE],4)),'-',SALE_HIER_DIM.ORZN_DEPT_DSCR) AS TAG       ,
	SALE_HIER_DIM.ORZN_ZONE_CDE [MARKET]          ,
	C.[SOURCE SYSTEM KEY TEXT] AS LEADER_TSID          ,
	CONCAT(C.[FIRST NAME],' ',C.[LAST NAME]) AS LEADER_NAME       ,
	A.[LIFE AND HEALTH GRID CREDIT AMOUNT]       ,
	A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] AS LH_PACE_TARGET       ,
	A.[GRID CREDIT AMOUNT]       ,
	[PRORATED GRID CREDIT AMOUNT] AS PACE_TARGET          ,
	D.[GRID CREDIT AMOUNT] AS EOY_TARGET          ,
	D.[GRID CREDIT RANGE AMOUNT] AS EOY_RANGE_AMT          ,
	E.[GRID CREDIT AMOUNT] AS EOQ_TARGET          ,
	E.[GRID CREDIT RANGE AMOUNT] AS EOQ_RANGE_AMT          ,
	F.[GRID CREDIT AMOUNT] AS EOM_TARGET          ,
	F.[GRID CREDIT RANGE AMOUNT] AS EOM_RANGE_AMT          ,
	CASE WHEN [PRIOR ADVISOR EXPERIENCE INDICATOR] = 'Y' OR B.[JOB TYPE CODE] = '002010' THEN ''          WHEN A.[GRID CREDIT AMOUNT] > A.[PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          WHEN A.[GRID CREDIT AMOUNT] < A.[PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'    ELSE ''          END AS ABOVE_BELOW          ,
	CASE WHEN [PRIOR ADVISOR EXPERIENCE INDICATOR] = 'Y' OR B.[JOB TYPE CODE] = '002010' THEN ''          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] > A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] < A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'    ELSE ''          END AS ABOVE_BELOW_LH      ,
	[PRIOR ADVISOR EXPERIENCE INDICATOR]        ,
	CASE WHEN A.[PROCESS DATE] = MAX_PROCESS_DATE.[MAX PROCESS DATE]THEN 'Y'          ELSE 'N'          END AS CURR_WK_IND   
FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A   INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B    ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND        A.[PROCESS DATE]>=B.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=B.[EFFECTIVE END DATE])   INNER JOIN (SELECT MAX([PROCESS DATE]) [MAX PROCESS DATE] FROM [DM_01].[PACE PERFORMANCE SNAPSHOT FACT]) AS MAX_PROCESS_DATE ON 'A' = 'A'   INNER JOIN [DM_01].[DATE DIMENSION] DD ON (A.[PROCESS DATE]=DD.[CALENDAR DATE DATE])    LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SALE_HIER_DIM     ON ((     (SALE_HIER_DIM.EFF_BEG_DT<=A.[PROCESS DATE])         OR         (         (A.[PROCESS DATE]<(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y'))         AND         SALE_HIER_DIM.EFF_BEG_DT=(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y')         ))         AND          (A.[PROCESS DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))         AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'         AND B.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])             INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] C    ON (A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]=C.[ORGANIZATION DIMENSION SURROGATE KEY] AND     A.[PROCESS DATE]>=C.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=C.[EFFECTIVE END DATE])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] D    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))=D.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] E    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)=E.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] F    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))=F.[CALENDAR YEAR MONTH NUMBER])']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ABOVE/BELOW', EACH IF [TENURE_MONTHS] <= 2.25 THEN '' ELSE [ABOVE_BELOW]),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ABOVE_BELOW'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS',{'ORGANIZATION DIMENSION SURROGATE KEY', 'ORGANIZATION DIMENSION VERSION NUMBER', 'ORGANIZATION LEAD DIMENSION SURROGATE KEY', 'ORGANIZATION LEAD DIMENSION VERSION NUMBER', 'PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY', 'PACE PERFORMANCE TARGET VERSION NUMBER', 'PROCESS DATE', 'TENURE DATA', 'MONTH', 'EOQ_MONTH', 'EOY_MONTH', 'TENURE_MONTHS', 'EOY_TENURE', 'EOQ_TENURE', 'EOM_TENURE', 'PRODUCTION DATE', 'SNAPSHOT TYPE CODE', 'BUSINESS INTERRUPTION DAY VALUE', 'TSID', 'FP_NAME', 'JOB TYPE CODE', 'TAG', 'MARKET', 'LEADER_TSID', 'LEADER_NAME', 'LIFE AND HEALTH GRID CREDIT AMOUNT', 'LH_PACE_TARGET', 'GRID CREDIT AMOUNT', 'PACE_TARGET', 'EOY_TARGET', 'EOY_RANGE_AMT', 'EOQ_TARGET', 'EOQ_RANGE_AMT', 'EOM_TARGET', 'EOM_RANGE_AMT', 'ABOVE/BELOW', 'ABOVE_BELOW_LH', 'PRIOR ADVISOR EXPERIENCE INDICATOR', 'CURR_WK_IND'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'ABOVE/BELOW', 'ABOVE_BELOW'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE_MONTHS] >= 0),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'FILTERED ROWS', {'TSID'}, #'12_31 PACE EXPORT', {'TSID'}, '12_31 PACE EXPORT', JOINKIND.LEFTOUTER),    #'EXPANDED 12_31 PACE EXPORT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', '12_31 PACE EXPORT', {'EOY PACE TARGET', 'ABOVE/BELOW EOY'}, {'EOY PACE TARGET', 'ABOVE/BELOW EOY'})IN    #'EXPANDED 12_31 PACE EXPORT

SELECT 
	A.CUST_SK,        
	A.CUST_ID_NBR,        
	CASE WHEN XX.HOH_NAMEXX <> '' THEN XX.HOH_NAMEXX        ELSE A.CUST_LGAL_LST_NM||', '||A.CUST_LGAL_FRST_NM       END AS HOH_NAME,       A.CUST_LGAL_LST_NM||', '||A.CUST_LGAL_FRST_NM AS CLIENT_NAME,       
	A.CUST_LGAL_FMT_NM,        
	A.CUST_LGAL_FRST_NM,        
	A.CUST_LGAL_LST_NM,        
	A.CUST_GRLN_TYP_CDE,        
	A.CUST_GRP_ID_NBR,        
	B.STP_STS_CDE,        
	CASE WHEN B.FUT_VLU_INDX_CDE = 'GOLD' THEN 'GOLD'             WHEN B.FUT_VLU_INDX_CDE = 'SILVR' THEN 'SILVER'             WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' THEN 'BRONZE'             WHEN B.FUT_VLU_INDX_CDE IN ('NA','UNK',' ' ) THEN 'UNKNOWN'        END AS FUTUREVALUE,        CASE WHEN A.MBR_TYP_CDE = 'BEN' THEN 'BENEFIT'             WHEN A.MBR_TYP_CDE = 'ASSOC' THEN 'ASSOCIATE'             WHEN A.MBR_TYP_CDE = 'JUV' THEN 'JUVENILE'             WHEN A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE <> 'NA' THEN 'NON-MEMBER'             WHEN A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE = 'NA' THEN 'PROSPECT'        END AS MBRTYPE,        CASE WHEN A.CUST_AGE < 0 THEN 'UKWN'            WHEN A.CUST_AGE < 18 THEN '<18'            WHEN A.CUST_AGE < 25 THEN '18-24'            WHEN A.CUST_AGE < 35 THEN '25-34'            WHEN A.CUST_AGE < 45 THEN '35-44'            WHEN A.CUST_AGE < 55 THEN '45-54'            WHEN A.CUST_AGE < 65 THEN '55-64'            WHEN A.CUST_AGE < 75 THEN '65-74'            WHEN A.CUST_AGE < 85 THEN '75-84'            WHEN A.CUST_AGE >= 85 THEN '85+'         ELSE ' '         END AS CUST_AGE_GRP,        
	CASE WHEN A.CUST_AGE < 18 THEN '<18'             WHEN A.CUST_AGE >= 18 THEN '18+'         ELSE ' '        END AS CLNT_AGE_TYP,        CASE WHEN B.FUT_VLU_INDX_CDE = 'GOLD' AND B.STP_STS_CDE = 'YES' THEN 'A'            WHEN B.FUT_VLU_INDX_CDE = 'SILVR' AND B.STP_STS_CDE = 'YES' THEN 'B'          WHEN B.FUT_VLU_INDX_CDE = 'GOLD' AND B.STP_STS_CDE <> 'YES' THEN 'B'          WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' AND B.STP_STS_CDE = 'YES' THEN 'C'          WHEN B.FUT_VLU_INDX_CDE = 'SILVR' AND B.STP_STS_CDE <> 'YES' THEN 'C'          WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' AND B.STP_STS_CDE <> 'YES' THEN 'D'          ELSE ' '        END AS CLIENT_SERVICE_MODEL,        
	C.EMP_ORZN_ID   
FROM MEMBER.ITGR_IDVL_ALL_CURR_CFDL A LEFT JOIN        MEMBER.CNF_CUST_RESID_MAIL_GRP_DIM_CFDL B     ON A.CUST_GRP_SK=B.CUST_GRP_SK INNER JOIN         CLNT_ASMT_DM.CUST_REPR_ASGN_CURR_CFDL C       /* CLNT_ASMT_DM.CUST_SREP_RLTN_CURR_CFDL C */       /* CLNT_ASMT_DM.CUST_REPR_COMP_RLTN_CURR_CFDL C */     ON A.CUST_SK = C.ACRT_CUST_SK AND        A.MBR_TYP_CDE IN ('BEN','NON','ASSOC','JUV') AND        C.EMP_ORZN_ID LIKE 'TS%' LEFT JOIN      (SELECT X.CUST_GRP_ID_NBR,               X.CUST_LGAL_LST_NM||', '||X.CUST_LGAL_FRST_NM AS HOH_NAMEXX        FROM MEMBER.ITGR_IDVL_ALL_CURR_CFDL X       WHERE X.CUST_GRLN_TYP_CDE IN ('PRIM','PRIMD')) AS XX    ON A.CUST_GRP_ID_NBR=XX.CUST_GRP_ID_NBR    WHERE (A.MBR_TYP_CDE IN ('BEN','ASSOC','JUV') OR         A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE <> 'NA') ']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH TRUE),    #'REPLACED VALUE' = TABLE.REPLACEVALUE(#'FILTERED ROWS','','UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'REPLACED VALUE1' = TABLE.REPLACEVALUE(#'REPLACED VALUE',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'APPENDED QUERY' = TABLE.COMBINE({#'REPLACED VALUE1', CLIENT_HHLD_NON_MGP}),    #'REMOVED DUPLICATES' = TABLE.DISTINCT(#'APPENDED QUERY', {'CUST_ID_NBR'}),    #'REPLACED VALUE2' = TABLE.REPLACEVALUE(#'REMOVED DUPLICATES','JUVENILE','YOUTH',REPLACER.REPLACETEXT,{'MBRTYPE'}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'REPLACED VALUE2', 'YEAR-TSID', EACH 'CY'&[EMP_ORZN_ID]),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM', {'CUST_ID_NBR'}, MGP_CLIENTS, {'CUST_ID_NBR'}, 'MGP_CLIENTS', JOINKIND.LEFTOUTER),    #'EXPANDED MGP_CLIENTS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'MGP_CLIENTS', {'ASOFDT', 'TSID_MGP', 'GOALS DOCUMENTED', 'GOALS DOCUMENTED TOTAL', 'GOAL INDICATOR'}, {'MGP_CLIENTS.ASOFDT', 'MGP_CLIENTS.TSID_MGP', 'MGP_CLIENTS.GOALS DOCUMENTED', 'MGP_CLIENTS.GOALS DOCUMENTED TOTAL', 'MGP_CLIENTS.GOAL INDICATOR'}),    #'REPLACED VALUE3' = TABLE.REPLACEVALUE(#'EXPANDED MGP_CLIENTS',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'MGP_CLIENTS.TSID_MGP'}),    #'REPLACED VALUE4' = TABLE.REPLACEVALUE(#'REPLACED VALUE3',NULL,0,REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOALS DOCUMENTED'}),    #'REPLACED VALUE5' = TABLE.REPLACEVALUE(#'REPLACED VALUE4',NULL,0,REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOALS DOCUMENTED TOTAL'}),    #'REPLACED VALUE6' = TABLE.REPLACEVALUE(#'REPLACED VALUE5',NULL,'N',REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOAL INDICATOR'})IN    #'REPLACED VALUE6
SELECT 
	PERS_DIM.[SOURCE SYSTEM KEY TEXT] AS THRIVENTID,    
	-- APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],       
	APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],       
	APPT_FCT.[PERSON DIMENSION SURROGATE KEY],    
	-- APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION KEY],    
	-- APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY],       
	SUM(APPT_FCT.[APPOINTMENT OCCURS]) [APPT_OCCURS],       
	MAX(APPT_FCT.[PERSON OCCURS]) [PERSON OCCURS],       
	MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],       
	APPT_DIM.[APPOINTMENT DATE],       
	APPT_DIM.[APPOINTMENT TYPE DESCRIPTION] [APPOINTMENT TYPE CODE],       
	DATE_DIM.[CALENDAR YEAR NAME],       
	ORG_DIM.[SOURCE SYSTEM KEY TEXT] [EMP_ID],     
	--SALE_HIER_DIM.ORZN_DEPT_CDE [RFO ZONE NAME],     
	--SALE_HIER_DIM.ORZN_ZONE_CDE [RFO ZONE IDENTIFIER],       
	ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],       (SELECT MAX(A.[LIFE SEGMENT VALUE DESCRIPTION])          FROM ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] A         WHERE APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=A.[PERSON DIMENSION SURROGATE KEY]         AND A.[CURRENT ROW INDICATOR] = 'Y') AS [LIFE SEGMENT VALUE DESCRIPTION]     FROM ENTERPRISEDATAMART.DM_01.[APPOINTMENT COMBINE FACT] APPT_FCT LEFT JOIN         ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] AS PERS_DIM     ON (APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=PERS_DIM.[PERSON DIMENSION SURROGATE KEY] AND         APPT_FCT.[PERSON DIMENSION VERSION NUMBER] = PERS_DIM.[PERSON DIMENSION VERSION NUMBER]) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[MEMBERSHIP TYPE DIMENSION] MBR_DIM     ON (APPT_FCT.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]=MBR_DIM.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[APPOINTMENT DIMENSION] APPT_DIM     ON (APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY]=APPT_DIM.[APPOINTMENT DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM     ON (APPT_DIM.[APPOINTMENT DATE]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM     ON ((APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND         ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= APPT_DIM.[APPOINTMENT DATE]) AND (APPT_DIM.[APPOINTMENT DATE] <= ORG_DIM.[EFFECTIVE END DATE]))) LEFT JOIN           ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM     ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND  (SALE_HIER_DIM.EFF_BEG_DT<=APPT_DIM.[APPOINTMENT DATE]) AND  (APPT_DIM.[APPOINTMENT DATE]<= SALE_HIER_DIM.EFF_END_DT) AND    SALE_HIER_DIM.CURR_ROW_IND = 'Y'))  WHERE APPT_DIM.[CURRENT ROW INDICATOR] = 'Y'   AND APPT_DIM.[APPOINTMENT CREATE DATE OVER 14 DAYS] = 'N'   AND APPT_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0   AND APPT_FCT.[APPOINTMENT STATUS NAME] <> 'DECLINED'   AND APPT_DIM.[APPOINTMENT TYPE CODE] <> 'UNK'   AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0165','0190','0240','0283','0291','0361','0365', '0383','0384','0410','0435','0475','0496','0525','0529','0810')  AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '002030', '002031', '002032', '003100', '003500')   OR  ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))    AND APPT_DIM.[EVENT RESULT DESCRIPTION] NOT IN ('NO SHOW','CANCELLED')   AND DATE_DIM.[CALENDAR YEAR NAME] IN ('2022','2023','2024') GROUP BY --APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],   APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],   APPT_FCT.[PERSON DIMENSION SURROGATE KEY],   MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],   APPT_DIM.[APPOINTMENT DATE],   APPT_DIM.[APPOINTMENT TYPE DESCRIPTION],   DATE_DIM.[CALENDAR YEAR NAME], --SALE_HIER_DIM.ORZN_DEPT_CDE, --SALE_HIER_DIM.ORZN_ZONE_CDE,   ORG_DIM.[SOURCE SYSTEM KEY TEXT],   ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],   PERS_DIM.[SOURCE SYSTEM KEY TEXT]  --APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION KEY], --APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]    HAVING  SUM(APPT_FCT.[APPOINTMENT OCCURS])>0']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'APPOINTMENT DATE', TYPE DATE}})IN    #'CHANGED TYPE
	
SELECT 
	EMP_ID AS TSID, 
	EMP_NM AS EMPLOYEE_NAME, 
	JOB_TYP_CDE AS JOB_CODE, 
	JOB_TYP_DSCR AS JOB_DESCRIPTION, 
	RZN_DIV_CDE AS DIVISION_CODE, 
	ORZN_DIV_DSCR AS DIVISION_DESCRIPTION, 
	ORZN_DEPT_CDE AS DEPARTMENT_CODE, 
	ORZN_DEPT_DSCR AS DEPARTMENT_DESCRIPTION, 
	EMP_STS_TYP_DSCR AS EMP_STATUS, 
	ORIG_HIRE_DT AS ORIG_HIRE_DATE, 
	HIRE_DT AS HIRE_DATE, 
	RHIR_DT AS REHIRE_DATE, 
	TRMN_DT AS TERMINATION_DATE, 
	EMP_SVC_DT AS SERVICE_DATE, 
	ADJ_SVC_DT AS ADJUSTED_SERVICE_DATE, 
	/* TENURE */  (DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT) ) / 365.25 AS TENURE, 
	/* TENURE_GROUP */  (CASE WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 1 THEN 'NFA1'              WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 1 AND              ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 2 THEN 'NFA2'             WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 2 AND           ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 3 THEN 'NFA3'           WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 3 AND              ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 4 THEN 'NFA4'           WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 4 AND               ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 5 THEN 'VET5'           WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 5 AND               ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 6 THEN 'VET6'            WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 6 AND                 ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) <= 7 THEN 'VET7'            WHEN ((DAYS(CURRENT_DATE)-DAYS(ADJ_SVC_DT))/365.25 ) > 7 AND                ADJ_SVC_DT IS NOT NULL THEN 'VET8+' ELSE 'OTHER'       END) AS TENURE_GROUP 
FROM ''HUMAN_RESOURCES''.''CNF_EMP_DIM_DTL_CURR_CFDL'' WHERE CURR_ROW_IND = 'Y'']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH [DIVISION_DESCRIPTION] <> 'NA'),    #'TAKE OUT 'ADVISOR GROUP'' = TABLE.REPLACEVALUE(#'FILTERED ROWS',' ADVISOR GROUP','',REPLACER.REPLACETEXT,{'DEPARTMENT_DESCRIPTION'}),    #'TRIM DEPT FOR TRAILING SPACES' = TABLE.ADDCOLUMN(#'TAKE OUT 'ADVISOR GROUP'', 'TRIM', EACH TEXT.TRIM([DEPARTMENT_CODE]), TYPE TEXT),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'TRIM DEPT FOR TRAILING SPACES',{{'TRIM', 'DEPT TRIMMED'}}),    #'VIRTUAL ADVICE DEPTS TO 0383' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS', 'DEPT CODE_VA', EACH IF LIST.CONTAINS({'5405','5407','5408','5409'},[DEPT TRIMMED]) THEN '0383' ELSE [DEPT TRIMMED]),    #'DEPT - DESCRIPTION' = TABLE.ADDCOLUMN(#'VIRTUAL ADVICE DEPTS TO 0383', 'DEPARTMENT', EACH IF[DEPT CODE_VA] = '0383' THEN[DEPT CODE_VA]&' - '&[DIVISION_DESCRIPTION]ELSE [DEPT CODE_VA]&' - '&[DEPARTMENT_DESCRIPTION]),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'DEPT - DESCRIPTION',{'TSID', 'EMPLOYEE_NAME', 'JOB_CODE', 'JOB_DESCRIPTION', 'DIVISION_CODE', 'DIVISION_DESCRIPTION', 'DEPARTMENT_CODE', 'DEPARTMENT_DESCRIPTION', 'DEPARTMENT', 'DEPT TRIMMED', 'EMP_STATUS', 'ORIG_HIRE_DATE', 'HIRE_DATE', 'REHIRE_DATE', 'TERMINATION_DATE', 'SERVICE_DATE', 'ADJUSTED_SERVICE_DATE', 'TENURE', 'TENURE_GROUP'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'JOB_CODE', 'JOB CODE'}, {'JOB_DESCRIPTION', 'JOB DESCRIPTION'}, {'EMPLOYEE_NAME', 'NAME'}})IN    #'RENAMED COLUMNS1

SELECT 
	TASK_FCT.[TASK DIMENSION SURROGATE KEY],        
	TASK_FCT.[PERSON DIMENSION SURROGATE KEY],        
	TASK_DIM.[TASK DATE],        
	SUM(TASK_FCT.[TASK OCCURS]) [TASK_OCCURS],        
	TASK_FCT.[PERSON OCCURS],         
	TASK_DIM.[TASK TYPE NAME],        
	TASK_DIM.[TASK STATUS NAME],        
	DATE_DIM.[CALENDAR YEAR NAME] AS ''PERFORMANCE YEAR NAME'',        
	DATE_DIM.[CALENDAR YEAR WEEK NUMBER] AS ''PERFORMANCE YEAR WEEK NUMBER'',        
	ORG_DIM.[SOURCE SYSTEM KEY TEXT] AS TSID,        
	--SALE_HIER_DIM.ORZN_DEPT_CDE,        
	--SALE_HIER_DIM.ORZN_ZONE_CDE,        
	ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME] AS NAME         --ORG_DIM.[JOB TYPE CODE] AS JOB_TYP_CDE,        
	--ORG_DIM.[ADJUSTED SERVICE DATE] AS ADJ_SVC_DT,        
	--ORG_DIM.[EMPLOYEE STATUS TYPE CODE] AS EMP_STS_TYP_CDE   
FROM ENTERPRISEDATAMART.[DM_01].[TASK FACT] TASK_FCT LEFT JOIN        ENTERPRISEDATAMART.[DM_01].[TASK DIMENSION] TASK_DIM     ON TASK_FCT.[TASK DIMENSION SURROGATE KEY] = TASK_DIM.[TASK DIMENSION SURROGATE KEY] LEFT JOIN        ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM     ON TASK_DIM.[TASK DATE]=DATE_DIM.[CALENDAR DATE DATE] LEFT JOIN         ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM     ON ((TASK_FCT.[TASK ORGANIZATION DIMENSION SURROGATE KEY] = ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND     (TASK_DIM.[TASK DATE] BETWEEN ORG_DIM.[EFFECTIVE BEGIN DATE] AND ORG_DIM.[EFFECTIVE END DATE])) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM    ON ((SALE_HIER_DIM.EFF_BEG_DT <= TASK_DIM.[TASK DATE]) AND        (TASK_DIM.[TASK DATE] <= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT)) AND          SALE_HIER_DIM.CURR_ROW_IND = 'Y' AND          ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])   WHERE TASK_DIM.[TASK TYPE NAME] IN ('APPROACH  CALL','APPROACH CALL')    AND TASK_DIM.[TASK STATUS NAME] IN ('COMPLETED', 'AUTO COMPLETED', 'IN PROGRESS')     AND TASK_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0    AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0165','0190','0240','0283','0291','0361','0365','0384','0410','0435','0475','0496','0525','0529','0810')    AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002025', '002026', '002027', '002030', '002032', '003100', '003500')     OR ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))       AND DATE_DIM.[PERFORMANCE YEAR NAME] IN ('2022','2023')      GROUP BY    TASK_FCT.[TASK DIMENSION SURROGATE KEY],    TASK_FCT.[PERSON DIMENSION SURROGATE KEY],    TASK_DIM.[TASK DATE],    DATE_DIM.[CALENDAR YEAR NAME],    DATE_DIM.[CALENDAR YEAR WEEK NUMBER],    TASK_FCT.[PERSON OCCURS],     TASK_DIM.[TASK TYPE NAME],    TASK_DIM.[TASK STATUS NAME],    DATE_DIM.[CALENDAR YEAR NAME],    DATE_DIM.[CALENDAR YEAR WEEK NUMBER],    DATE_DIM.[CALENDAR WEEK END DATE],    ORG_DIM.[SOURCE SYSTEM KEY TEXT],    --SALE_HIER_DIM.ORZN_DEPT_CDE,    --SALE_HIER_DIM.ORZN_ZONE_CDE,    ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME]     --ORG_DIM.[JOB TYPE CODE],    --ORG_DIM.[ADJUSTED SERVICE DATE],    --ORG_DIM.[EMPLOYEE STATUS TYPE CODE]   HAVING     SUM(TASK_FCT.[TASK OCCURS]) > 0    

SELECT PACE_QUERY.[ORGANIZATION DIMENSION SURROGATE KEY], PACE_QUERY.[ORGANIZATION DIMENSION VERSION NUMBER], PACE_QUERY.[ORGANIZATION LEAD DIMENSION SURROGATE KEY], PACE_QUERY.[ORGANIZATION LEAD DIMENSION VERSION NUMBER], PACE_QUERY.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY], PACE_QUERY.[PACE PERFORMANCE TARGET VERSION NUMBER], PACE_QUERY.[PROCESS DATE], PACE_QUERY.[TENURE DATA], PACE_QUERY.[MONTH], PACE_QUERY.[EOQ_MONTH], PACE_QUERY.[EOY_MONTH], PACE_QUERY.[TENURE_MONTHS], PACE_QUERY.[EOY_TENURE], PACE_QUERY.[EOQ_TENURE], PACE_QUERY.[EOM_TENURE], PACE_QUERY.[PRODUCTION DATE], PACE_QUERY.[SNAPSHOT TYPE CODE], PACE_QUERY.[BUSINESS INTERRUPTION DAY VALUE], PACE_QUERY.[TSID], PACE_QUERY.[FP_NAME], PACE_QUERY.[JOB TYPE CODE], PACE_QUERY.[TAG], PACE_QUERY.[MARKET], PACE_QUERY.[LEADER_TSID], PACE_QUERY.[LEADER_NAME], PACE_QUERY.[LIFE AND HEALTH GRID CREDIT AMOUNT], PACE_QUERY.[LH_PACE_TARGET], PACE_QUERY.[GRID CREDIT AMOUNT], PACE_QUERY.[PACE_TARGET], PACE_QUERY.[EOY_TARGET], PACE_QUERY.[EOY_RANGE_AMT], PACE_QUERY.[EOQ_TARGET], PACE_QUERY.[EOQ_RANGE_AMT], PACE_QUERY.[EOM_TARGET], PACE_QUERY.[EOM_RANGE_AMT], (CASE WHEN CBU_QUERY.[TSID] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN CBU_QUERY.[NEW_ABOVE_BELOW] ELSE PACE_QUERY.[ABOVE_BELOW] END) AS ABOVE_BELOW, PACE_QUERY.[ABOVE_BELOW_LH], PACE_QUERY.[PRIOR ADVISOR EXPERIENCE INDICATOR], PACE_QUERY.[CURR_WK_IND] FROM ( SELECT   A.[ORGANIZATION DIMENSION SURROGATE KEY]       ,A.[ORGANIZATION DIMENSION VERSION NUMBER]       ,A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]       ,A.[ORGANIZATION LEAD DIMENSION VERSION NUMBER]       ,A.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY]       ,A.[PACE PERFORMANCE TARGET VERSION NUMBER]       ,A.[PROCESS DATE]       ,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END AS [TENURE DATA]          ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) AS MONTH          --,DATEDIFF(MONTH, [TENURE DATA], DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) +1, 0))) AS EOQ_MONTH    ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) AS EOQ_MONTH    --,(DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0))) AS CURRENT_QTR    /*,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END AS QUARTER_END*/    --,DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)) AS PREVIOUS_QTR          ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) AS EOY_MONTH          ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)), -1)) AS EOY_TENURE         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END), -1)) AS EOQ_TENURE        ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)), -1)) AS EOM_TENURE       ,A.[PRODUCTION DATE]       ,A.[SNAPSHOT TYPE CODE]       ,A.[BUSINESS INTERRUPTION DAY VALUE]          ,B.[SOURCE SYSTEM KEY TEXT] AS TSID          ,CONCAT(B.[FIRST NAME],' ',B.[LAST NAME]) AS FP_NAME          ,B.[JOB TYPE CODE]          ,CONCAT(SALE_HIER_DIM.[ORZN_DEPT_CDE],'-',SALE_HIER_DIM.[ORZN_DEPT_DSCR]) AS TAG          ,SALE_HIER_DIM.[ORZN_ZONE_CDE] AS MARKET          ,C.[SOURCE SYSTEM KEY TEXT] AS LEADER_TSID          ,CONCAT(C.[FIRST NAME],' ',C.[LAST NAME]) AS LEADER_NAME       ,A.[LIFE AND HEALTH GRID CREDIT AMOUNT]       ,A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] AS LH_PACE_TARGET       ,A.[NEW MONEY SALES CREDIT AMOUNT] AS [GRID CREDIT AMOUNT]       ,A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] AS PACE_TARGET          ,D.[GRID CREDIT AMOUNT] AS EOY_TARGET          ,D.[GRID CREDIT RANGE AMOUNT] AS EOY_RANGE_AMT          ,E.[GRID CREDIT AMOUNT] AS EOQ_TARGET          ,E.[GRID CREDIT RANGE AMOUNT] AS EOQ_RANGE_AMT          ,F.[GRID CREDIT AMOUNT] AS EOM_TARGET          ,F.[GRID CREDIT RANGE AMOUNT] AS EOM_RANGE_AMT          ,CASE    WHEN (CASE              WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'              ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR]            END) = 'Y'           OR B.[JOB TYPE CODE] = '002010' THEN ''   WHEN A.[NEW MONEY SALES CREDIT AMOUNT] > A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'ABOVE'   WHEN A.[NEW MONEY SALES CREDIT AMOUNT] < A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'BELOW'   ELSE ''     END AS ABOVE_BELOW          ,CASE WHEN [PRIOR ADVISOR EXPERIENCE INDICATOR] = 'Y' OR [LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] = 0 THEN ''          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] > A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          ELSE 'BELOW'          END AS ABOVE_BELOW_LH      ,[PRIOR ADVISOR EXPERIENCE INDICATOR]        ,CASE WHEN A.[PROCESS DATE] = MAX_PROCESS_DATE.[MAX PROCESS DATE]THEN 'Y'          ELSE 'N'          END AS CURR_WK_IND   FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A   INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B    ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND        (A.[PROCESS DATE]<=B.[EFFECTIVE END DATE] AND  A.[PROCESS DATE]>=B.[EFFECTIVE BEGIN DATE])     )   INNER JOIN (SELECT MAX([PROCESS DATE]) [MAX PROCESS DATE] FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT]) AS MAX_PROCESS_DATE ON 'A' = 'A'   INNER JOIN [ENTERPRISEDATAMART].[DM_01].[DATE DIMENSION] DD ON (A.[PROCESS DATE]=DD.[CALENDAR DATE DATE])          LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SALE_HIER_DIM     ON ((     (SALE_HIER_DIM.EFF_BEG_DT<=A.[PROCESS DATE])         OR         (         (A.[PROCESS DATE]<(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y'))         AND         SALE_HIER_DIM.EFF_BEG_DT=(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y')         ))         AND          (A.[PROCESS DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))         AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'         AND B.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])            INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] C    ON (A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]=C.[ORGANIZATION DIMENSION SURROGATE KEY] AND     (A.[PROCESS DATE]<=C.[EFFECTIVE END DATE] AND  A.[PROCESS DATE]>=C.[EFFECTIVE BEGIN DATE]))   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] D    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))=D.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] E    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)=E.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] F    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))=F.[CALENDAR YEAR MONTH NUMBER])    ) PACE_QUERY    LEFT JOIN    ( SELECT  A.[PROCESS DATE], B.[SOURCE SYSTEM KEY TEXT] AS TSID, ROUND(DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])),0,1) AS TENURE_TRUNC, DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS, PTD_BEF.[GRID CREDIT AMOUNT], ((PTD_BEF.[GRID CREDIT RANGE AMOUNT]-PTD_BEF.[GRID CREDIT AMOUNT])* (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE]))-ROUND(DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])),0,1))+PTD_BEF.[GRID CREDIT AMOUNT]) AS PACE_TARGET, CASE WHEN [PRIOR ADVISOR EXPERIENCE INDICATOR] = 'Y' THEN '' WHEN ( DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) )<4 THEN '' WHEN  ((PTD_BEF.[GRID CREDIT RANGE AMOUNT]-PTD_BEF.[GRID CREDIT AMOUNT])* (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE]))-ROUND(DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])),0,1))+PTD_BEF.[GRID CREDIT AMOUNT])    <=A.[GRID CREDIT AMOUNT] THEN 'ABOVE' ELSE 'BELOW' END AS NEW_ABOVE_BELOW FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A   INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B    ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND        B.[CURRENT ROW INDICATOR] = 'Y') LEFT JOIN (SELECT * FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION]) PTD_BEF ON ROUND(DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])),0,1)=PTD_BEF.[CALENDAR YEAR MONTH NUMBER] LEFT JOIN (SELECT * FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION]) PTD_AFT ON (ROUND(DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])),0,1)+1)=PTD_AFT.[CALENDAR YEAR MONTH NUMBER]    WHERE B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194')    ) CBU_QUERY    ON (PACE_QUERY.[PROCESS DATE]=CBU_QUERY.[PROCESS DATE] AND PACE_QUERY.[TSID]=CBU_QUERY.[TSID])    ']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ABOVE/BELOW', EACH IF [JOB TYPE CODE] = '002010' THEN '' ELSE [ABOVE_BELOW]),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ABOVE_BELOW'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS',{'ORGANIZATION DIMENSION SURROGATE KEY', 'ORGANIZATION DIMENSION VERSION NUMBER', 'ORGANIZATION LEAD DIMENSION SURROGATE KEY', 'ORGANIZATION LEAD DIMENSION VERSION NUMBER', 'PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY', 'PACE PERFORMANCE TARGET VERSION NUMBER', 'PROCESS DATE', 'TENURE DATA', 'MONTH', 'EOQ_MONTH', 'EOY_MONTH', 'TENURE_MONTHS', 'EOY_TENURE', 'EOQ_TENURE', 'EOM_TENURE', 'PRODUCTION DATE', 'SNAPSHOT TYPE CODE', 'BUSINESS INTERRUPTION DAY VALUE', 'TSID', 'FP_NAME', 'JOB TYPE CODE', 'TAG', 'MARKET', 'LEADER_TSID', 'LEADER_NAME', 'LIFE AND HEALTH GRID CREDIT AMOUNT', 'LH_PACE_TARGET', 'GRID CREDIT AMOUNT', 'PACE_TARGET', 'EOY_TARGET', 'EOY_RANGE_AMT', 'EOQ_TARGET', 'EOQ_RANGE_AMT', 'EOM_TARGET', 'EOM_RANGE_AMT', 'ABOVE/BELOW', 'ABOVE_BELOW_LH', 'PRIOR ADVISOR EXPERIENCE INDICATOR', 'CURR_WK_IND'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'ABOVE/BELOW', 'ABOVE_BELOW'}}),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS', {'PROCESS DATE'}, #'WEEK START', {'WEEK_START_DATE'}, 'WEEK START', JOINKIND.LEFTOUTER),    #'EXPANDED WEEK START' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'WEEK START', {'WEEK_START_DATE'}, {'WEEK START.WEEK_START_DATE'}),    #'FILTERED ROWS3' = TABLE.SELECTROWS(#'EXPANDED WEEK START', EACH ([WEEK START.WEEK_START_DATE] <> NULL)),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'FILTERED ROWS3', EACH [TENURE_MONTHS] >= 0),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'FILTERED ROWS', 'JOINVALUE', EACH DATETIME.TOTEXT ([WEEK START.WEEK_START_DATE], 'MM/DD/YY') & [TSID]),    #'MERGED QUERIES1' = TABLE.NESTEDJOIN(#'ADDED CUSTOM1', {'JOINVALUE'}, OVERRIDES, {'JOIN VALUE'}, 'OVERRIDES', JOINKIND.LEFTOUTER),    #'EXPANDED OVERRIDES' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES1', 'OVERRIDES', {'MARKET'}, {'OVERRIDES.MARKET'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'EXPANDED OVERRIDES',{{'MARKET', 'ORIGINAL MARKET'}}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS1', 'MARKET', EACH IF [OVERRIDES.MARKET] IS NULL THEN [ORIGINAL MARKET] ELSE [OVERRIDES.MARKET]),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'ADDED CUSTOM2', EACH ([JOB TYPE CODE] <> '002003' AND [JOB TYPE CODE] <> '002009' AND [JOB TYPE CODE] <> '002022') AND ([PACE_TARGET] <> 0))IN    #'FILTERED ROWS1

SELECT   
	A.[ORGANIZATION DIMENSION SURROGATE KEY]       ,
	A.[ORGANIZATION DIMENSION VERSION NUMBER]       ,
	A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]       ,
	A.[ORGANIZATION LEAD DIMENSION VERSION NUMBER]       ,
	A.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY]       ,
	A.[PACE PERFORMANCE TARGET VERSION NUMBER]       ,
	A.[PROCESS DATE]    ,
	B.[SOURCE SYSTEM KEY TEXT] AS TSID       ,
	CONCAT(B.[FIRST NAME],' ',B.[LAST NAME]) AS FP_NAME       ,
	B.[JOB TYPE CODE]       ,
	CONCAT((LEFT(SALE_HIER_DIM.[ORZN_ZONE_CDE],4)),'-',SALE_HIER_DIM.ORZN_DEPT_DSCR) AS TAG    ,
	SALE_HIER_DIM.ORZN_ZONE_CDE [MARKET]       ,
	C.[SOURCE SYSTEM KEY TEXT] AS LEADER_TSID       ,
	CONCAT(C.[FIRST NAME],' ',C.[LAST NAME]) AS LEADER_NAME       ,
	CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END AS [TENURE DATA]          ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) AS MONTH          --,
	DATEDIFF(MONTH, [TENURE DATA], DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) +1, 0))) AS EOQ_MONTH    ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) AS EOQ_MONTH    --,
	(DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0))) AS CURRENT_QTR    /*,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END AS QUARTER_END*/    --,DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)) AS PREVIOUS_QTR          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) AS EOY_MONTH          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS         ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)), -1)) AS EOY_TENURE         ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END), -1)) AS EOQ_TENURE        ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)), -1)) AS EOM_TENURE       ,
	A.[PRODUCTION DATE]       ,
	A.[SNAPSHOT TYPE CODE]       ,
	A.[BUSINESS INTERRUPTION DAY VALUE]       ,
	A.[LIFE AND HEALTH GRID CREDIT AMOUNT]       ,
	A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] AS LH_PACE_TARGET       ,
	A.[GRID CREDIT AMOUNT]       ,
	A.[PRORATED GRID CREDIT AMOUNT] AS TGR_PACE_TARGET    ,
	A.[NEW MONEY SALES CREDIT AMOUNT]    ,
	A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] AS PACE_TARGET          ,
	D.[NEW MONEY SALES CREDIT AMOUNT] AS EOY_TARGET          ,
	D.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOY_RANGE_AMT          ,
	E.[NEW MONEY SALES CREDIT AMOUNT] AS EOQ_TARGET          ,
	E.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOQ_RANGE_AMT          ,
	F.[NEW MONEY SALES CREDIT AMOUNT] AS EOM_TARGET          ,
	F.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOM_RANGE_AMT    ,
	CASE    WHEN (CASE              WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'              ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR]            END) = 'Y'           OR B.[JOB TYPE CODE] = '002010' THEN ''   WHEN A.[NEW MONEY SALES CREDIT AMOUNT] > A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'ABOVE'   WHEN A.[NEW MONEY SALES CREDIT AMOUNT] < A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'BELOW'   ELSE ''     END AS ABOVE_BELOW       ,
	CASE WHEN (CASE              WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'              ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR]            END) = 'Y'           OR B.[JOB TYPE CODE] = '002010' THEN ''          WHEN A.[GRID CREDIT AMOUNT] > A.[PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          WHEN A.[GRID CREDIT AMOUNT] < A.[PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'    ELSE ''          END AS ABOVE_BELOW_TGR       ,
	CASE WHEN (CASE              WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'              ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR]            END) = 'Y'           OR B.[JOB TYPE CODE] = '002010' THEN ''          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] > A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] < A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'    ELSE ''          END AS ABOVE_BELOW_LH      ,
	CASE WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'       ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR]     END AS [PRIOR ADVISOR EXPERIENCE INDICATOR]      ,
	CASE WHEN A.[PROCESS DATE] = MAX_PROCESS_DATE.[MAX PROCESS DATE]THEN 'Y'          ELSE 'N'          END AS CURR_WK_IND   
FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A   INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B    ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND        A.[PROCESS DATE]>=B.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=B.[EFFECTIVE END DATE])   INNER JOIN (SELECT MAX([PROCESS DATE]) [MAX PROCESS DATE] FROM [DM_01].[PACE PERFORMANCE SNAPSHOT FACT]) AS MAX_PROCESS_DATE ON 'A' = 'A'   INNER JOIN [DM_01].[DATE DIMENSION] DD ON (A.[PROCESS DATE]=DD.[CALENDAR DATE DATE])    LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SALE_HIER_DIM     ON ((     (SALE_HIER_DIM.EFF_BEG_DT<=A.[PROCESS DATE])         OR         (         (A.[PROCESS DATE]<(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y'))         AND         SALE_HIER_DIM.EFF_BEG_DT=(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y')         ))         AND          (A.[PROCESS DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))         AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'         AND B.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])             INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] C    ON (A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]=C.[ORGANIZATION DIMENSION SURROGATE KEY] AND     A.[PROCESS DATE]>=C.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=C.[EFFECTIVE END DATE])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] D    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))=D.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] E    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)=E.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] F    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))=F.[CALENDAR YEAR MONTH NUMBER])']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ABOVE/BELOW', EACH IF [JOB TYPE CODE] = '002010' THEN '' ELSE [ABOVE_BELOW]),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ABOVE_BELOW'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS',{'ORGANIZATION DIMENSION SURROGATE KEY', 'ORGANIZATION DIMENSION VERSION NUMBER', 'ORGANIZATION LEAD DIMENSION SURROGATE KEY', 'ORGANIZATION LEAD DIMENSION VERSION NUMBER', 'PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY', 'PACE PERFORMANCE TARGET VERSION NUMBER', 'PROCESS DATE', 'TENURE DATA', 'MONTH', 'EOQ_MONTH', 'EOY_MONTH', 'TENURE_MONTHS', 'EOY_TENURE', 'EOQ_TENURE', 'EOM_TENURE', 'PRODUCTION DATE', 'SNAPSHOT TYPE CODE', 'BUSINESS INTERRUPTION DAY VALUE', 'TSID', 'FP_NAME', 'JOB TYPE CODE', 'TAG', 'MARKET', 'LEADER_TSID', 'LEADER_NAME', 'LIFE AND HEALTH GRID CREDIT AMOUNT', 'LH_PACE_TARGET', 'GRID CREDIT AMOUNT', 'PACE_TARGET', 'EOY_TARGET', 'EOY_RANGE_AMT', 'EOQ_TARGET', 'EOQ_RANGE_AMT', 'EOM_TARGET', 'EOM_RANGE_AMT', 'ABOVE/BELOW', 'ABOVE_BELOW_LH', 'PRIOR ADVISOR EXPERIENCE INDICATOR', 'CURR_WK_IND'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'ABOVE/BELOW', 'ABOVE_BELOW'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE_MONTHS] >= 0),    #'ADDED CONDITIONAL COLUMN' = TABLE.ADDCOLUMN(#'FILTERED ROWS', 'TSL/ASSOC REP', EACH IF [JOB TYPE CODE] = '002022' THEN '002022 - TSL' ELSE IF [JOB TYPE CODE] = '002010' THEN '002010 - ASSOCIATE REP' ELSE NULL),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'ADDED CONDITIONAL COLUMN', 'MVP', EACH TEXT.START([MARKET],7)),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM1', {'TSID'}, #'12_31 PACE EXPORT', {'TSID'}, 'EXPORT', JOINKIND.LEFTOUTER),    #'EXPANDED EXPORT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'EXPORT', {'EOY TARGET', 'ABOVE/BELOW EOY'}, {'EXPORT.EOY TARGET', 'EXPORT.ABOVE/BELOW EOY'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'EXPANDED EXPORT',{{'EXPORT.EOY TARGET', 'EOY PACE TARGET'}, {'EXPORT.ABOVE/BELOW EOY', 'ABOVE/BELOW EOY'}}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS1', 'JOINVALUE', EACH DATETIME.TOTEXT ([PROCESS DATE], 'MM/DD/YY') & [TSID]),    #'MERGED QUERIES2' = TABLE.NESTEDJOIN(#'ADDED CUSTOM2', {'JOINVALUE'}, OVERRIDES, {'JOIN VALUE'}, 'OVERRIDES', JOINKIND.LEFTOUTER),    #'EXPANDED OVERRIDES' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES2', 'OVERRIDES', {'MARKET'}, {'OVERRIDES.MARKET'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'EXPANDED OVERRIDES',{{'MARKET', 'ORIGINAL MARKET'}}),    #'ADDED CUSTOM3' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS2', 'MARKET', EACH IF [OVERRIDES.MARKET] IS NULL THEN [ORIGINAL MARKET] ELSE [OVERRIDES.MARKET]),    #'MERGED QUERIES3' = TABLE.NESTEDJOIN(#'ADDED CUSTOM3', {'MARKET'}, #'DIRECTOR LIST', {'WORKER_STS_FCT_MKT'}, 'DIRECTOR LIST', JOINKIND.LEFTOUTER),    #'EXPANDED DIRECTOR LIST' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES3', 'DIRECTOR LIST', {'SRC_SYS_KEY_TXT', 'EMP_NM', 'EFF_BEG_DT'}, {'DIRECTOR LIST.SRC_SYS_KEY_TXT', 'DIRECTOR LIST.EMP_NM', 'DIRECTOR LIST.EFF_BEG_DT'}),    #'RENAMED COLUMNS3' = TABLE.RENAMECOLUMNS(#'EXPANDED DIRECTOR LIST',{{'DIRECTOR LIST.EMP_NM', 'MARKET DIRECTOR'}, {'DIRECTOR LIST.SRC_SYS_KEY_TXT', 'DIRECTOR TSID'},{'DIRECTOR LIST.EFF_BEG_DT', 'MARKET DIRECTOR START DATE'}}),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'RENAMED COLUMNS3',{{'PROCESS DATE', TYPE DATE}}),    #'ADDED CUSTOM7' = TABLE.ADDCOLUMN(#'CHANGED TYPE', 'JOINVALUE2', EACH [TSID]&'-'&TEXT.UPPER(DATE.TOTEXT([PROCESS DATE],'DDMMMYYYY'))),    #'MERGED QUERIES4' = TABLE.NESTEDJOIN(#'ADDED CUSTOM7', {'JOINVALUE2'}, #'MARKET DEVELOPERS (2)', {'JOINVALUE'}, 'MARKET DEVELOPERS', JOINKIND.LEFTOUTER),    #'EXPANDED MARKET DEVELOPERS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES4', 'MARKET DEVELOPERS', {'MARKET DEVELOPER START DATE', 'RDL NAME'}, {'MARKET DEVELOPERS.MARKET DEVELOPER START DATE', 'MARKET DEVELOPERS.RDL NAME'}),    #'ADDED CUSTOM4' = TABLE.ADDCOLUMN(#'EXPANDED MARKET DEVELOPERS', 'MARKET DIRECTOR CONDITIONAL', EACH IF [MARKET DIRECTOR START DATE] IS NULL THEN [MARKET DIRECTOR]ELSE IF [PROCESS DATE] < [MARKET DIRECTOR START DATE] THEN NULL ELSE [MARKET DIRECTOR]),    #'ADDED CUSTOM5' = TABLE.ADDCOLUMN(#'ADDED CUSTOM4', 'DIRECTOR TSID CONDITIONAL', EACH IF [MARKET DIRECTOR START DATE] IS NULL THEN [DIRECTOR TSID]ELSE IF [PROCESS DATE] < [MARKET DIRECTOR START DATE] THEN NULL ELSE [DIRECTOR TSID]),    #'REMOVED COLUMNS1' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM5',{'DIRECTOR TSID', 'MARKET DIRECTOR'}),    #'RENAMED COLUMNS4' = TABLE.RENAMECOLUMNS(#'REMOVED COLUMNS1',{{'MARKET DIRECTOR CONDITIONAL', 'MARKET DIRECTOR'}, {'DIRECTOR TSID CONDITIONAL', 'DIRECTOR TSID'}, {'MARKET DEVELOPERS.MARKET DEVELOPER START DATE', 'DEVELOPER BEGIN DATE'}}),    #'ADDED CUSTOM6' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS4', 'MARKET DEVELOPERS.RDL NAME CONDITIONAL', EACH IF [DEVELOPER BEGIN DATE] IS NULL THEN [MARKET DEVELOPERS.RDL NAME]ELSE IF [PROCESS DATE] < [DEVELOPER BEGIN DATE] THEN NULL ELSE [MARKET DEVELOPERS.RDL NAME]),    #'REMOVED COLUMNS2' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM6',{'MARKET DEVELOPERS.RDL NAME'}),    #'RENAMED COLUMNS5' = TABLE.RENAMECOLUMNS(#'REMOVED COLUMNS2',{{'MARKET DEVELOPERS.RDL NAME CONDITIONAL', 'MARKET DEVELOPERS.RDL NAME'}})IN    #'RENAMED COLUMNS5

SELECT *,         LAG(SVC_AGMT_STS_CDE) OVER (PARTITION BY BEN_CTRC_NBR         ORDER BY BEG_TMSP, BEN_CTRC_NBR) AS ''LAST STATUS'',         LAG(BEG_TMSP) OVER (PARTITION BY BEN_CTRC_NBR         ORDER BY BEG_TMSP, BEN_CTRC_NBR) AS ''LAG_TIME''  FROM (  SELECT  BEN_CTRC_NBR  , BEG_TMSP  , SVC_AGMT_PLAN_YR  , CASE   WHEN SVC_AGMT_TYP_CDE = 'PTAGM' THEN 'ONE TIME'   WHEN SVC_AGMT_TYP_CDE = 'OGAGM' THEN 'ONGOING'   ELSE SVC_AGMT_TYP_CDE   END AS SVC_AGMT_TYP_CDE  , CTRC_STS_EFF_DT  , CASE   WHEN SVC_AGMT_STS_CDE = 'A ' THEN 'THRIVENT CANCEL'   WHEN SVC_AGMT_STS_CDE = 'B ' THEN 'AMENDMENT REJECTED'   WHEN SVC_AGMT_STS_CDE = 'C ' THEN 'AMENDMENT APPROVED'   WHEN SVC_AGMT_STS_CDE = 'D ' THEN 'CANCEL PENDING'   WHEN SVC_AGMT_STS_CDE = 'E ' THEN 'DEATH'   WHEN SVC_AGMT_STS_CDE = 'F ' THEN 'DRAFT'   WHEN SVC_AGMT_STS_CDE = 'P ' THEN 'PENDING RENEWAL'   WHEN SVC_AGMT_STS_CDE = 'R ' THEN 'REJECTED'   WHEN SVC_AGMT_STS_CDE = 'X ' THEN 'PENDING CANCEL'   WHEN SVC_AGMT_STS_CDE = '1 ' THEN 'PENDING'   WHEN SVC_AGMT_STS_CDE = '2 ' THEN 'APPROVED'   WHEN SVC_AGMT_STS_CDE = '3 ' THEN 'DECLINED'   WHEN SVC_AGMT_STS_CDE = '5 ' THEN 'FULFILLED'   WHEN SVC_AGMT_STS_CDE = '6 ' THEN 'NIGO'   WHEN SVC_AGMT_STS_CDE = '7 ' THEN 'AMENDMENT PENDING'   WHEN SVC_AGMT_STS_CDE = '8 ' THEN 'NSF PENDING'   WHEN SVC_AGMT_STS_CDE = '9 ' THEN 'CLIENT CANCEL'   ELSE SVC_AGMT_STS_CDE   END AS SVC_AGMT_STS_CDE  , CASE   WHEN SVC_AGMT_GRP_CDE = 'BUSN' THEN 'BUSINESS'   WHEN SVC_AGMT_GRP_CDE = 'MRRY' THEN 'MARRIED'   WHEN SVC_AGMT_GRP_CDE = 'INDIV' THEN 'INDIVIDUAL'   WHEN SVC_AGMT_GRP_CDE = 'TRUST' THEN 'TRUST'   WHEN SVC_AGMT_GRP_CDE = 'DUAL' THEN 'DUAL'   ELSE SVC_AGMT_GRP_CDE   END AS SVC_AGMT_GRP_CDE  , SVC_AGMT_ISS_CDE  , SVC_AGMT_TRMN_DT  , SVAG_TRMN_RSN_CDE  , ACL_DLIV_DT  , APP_DT  , CTRC_FLMT_EXT_IND  FROM CONTRACT.SVC_AGMT_HST   UNION ALL   SELECT    BEN_CTRC_NBR  , BEG_TMSP  , SVC_AGMT_PLAN_YR  , CASE   WHEN SVC_AGMT_TYP_CDE = 'PTAGM' THEN 'ONE TIME'   WHEN SVC_AGMT_TYP_CDE = 'OGAGM' THEN 'ONGOING'   ELSE SVC_AGMT_TYP_CDE   END AS SVC_AGMT_TYP_CDE  , CTRC_STS_EFF_DT  , CASE   WHEN SVC_AGMT_STS_CDE = 'A ' THEN 'THRIVENT CANCEL'   WHEN SVC_AGMT_STS_CDE = 'B ' THEN 'AMENDMENT REJECTED'   WHEN SVC_AGMT_STS_CDE = 'C ' THEN 'AMENDMENT APPROVED'   WHEN SVC_AGMT_STS_CDE = 'D ' THEN 'CANCEL PENDING'   WHEN SVC_AGMT_STS_CDE = 'E ' THEN 'DEATH'   WHEN SVC_AGMT_STS_CDE = 'F ' THEN 'DRAFT'   WHEN SVC_AGMT_STS_CDE = 'P ' THEN 'PENDING RENEWAL'   WHEN SVC_AGMT_STS_CDE = 'R ' THEN 'REJECTED'   WHEN SVC_AGMT_STS_CDE = 'X ' THEN 'PENDING CANCEL'   WHEN SVC_AGMT_STS_CDE = '1 ' THEN 'PENDING'   WHEN SVC_AGMT_STS_CDE = '2 ' THEN 'APPROVED'   WHEN SVC_AGMT_STS_CDE = '3 ' THEN 'DECLINED'   WHEN SVC_AGMT_STS_CDE = '5 ' THEN 'FULFILLED'   WHEN SVC_AGMT_STS_CDE = '6 ' THEN 'NIGO'   WHEN SVC_AGMT_STS_CDE = '7 ' THEN 'AMENDMENT PENDING'   WHEN SVC_AGMT_STS_CDE = '8 ' THEN 'NSF PENDING'   WHEN SVC_AGMT_STS_CDE = '9 ' THEN 'CLIENT CANCEL'   ELSE SVC_AGMT_STS_CDE   END AS SVC_AGMT_STS_CDE  , CASE   WHEN SVC_AGMT_GRP_CDE = 'BUSN' THEN 'BUSINESS'   WHEN SVC_AGMT_GRP_CDE = 'MRRY' THEN 'MARRIED'   WHEN SVC_AGMT_GRP_CDE = 'INDIV' THEN 'INDIVIDUAL'   WHEN SVC_AGMT_GRP_CDE = 'TRUST' THEN 'TRUST'   WHEN SVC_AGMT_GRP_CDE = 'DUAL' THEN 'DUAL'   ELSE SVC_AGMT_GRP_CDE   END AS SVC_AGMT_GRP_CDE  , SVC_AGMT_ISS_CDE  , SVC_AGMT_TRMN_DT  , SVAG_TRMN_RSN_CDE  , ACL_DLIV_DT  , APP_DT  , CTRC_FLMT_EXT_IND  FROM CONTRACT.SVC_AGMT)  WHERE YEAR(BEG_TMSP) >= YEAR(CURRENT DATE) - 3  ORDER BY BEN_CTRC_NBR, BEG_TMSP

