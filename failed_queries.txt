SELECT   
	A.[ORGANIZATION DIMENSION SURROGATE KEY]       ,
	A.[ORGANIZATION DIMENSION VERSION NUMBER]       ,
	A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]       ,
	A.[ORGANIZATION LEAD DIMENSION VERSION NUMBER]       ,
	A.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY]       ,
	A.[PACE PERFORMANCE TARGET VERSION NUMBER]       ,
	A.[PROCESS DATE]       ,
	CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END AS [TENURE DATA]          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) AS MONTH          --,
	DATEDIFF(MONTH, [TENURE DATA], DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) +1, 0))) AS EOQ_MONTH    ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) AS EOQ_MONTH    --,
	(DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0))) AS CURRENT_QTR    /*,
	CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END AS QUARTER_END*/    --,
	DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)) AS PREVIOUS_QTR          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) AS EOY_MONTH          ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) -           (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) +           (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS         ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)), -1)) AS EOY_TENURE         ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END), -1)) AS EOQ_TENURE        ,
	DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) - 1 +   1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))   + 1.0*(DAY(DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)), -1)) AS EOM_TENURE       ,
	A.[PRODUCTION DATE]       ,
	A.[SNAPSHOT TYPE CODE]       ,
	A.[BUSINESS INTERRUPTION DAY VALUE]          ,
	B.[SOURCE SYSTEM KEY TEXT] AS TSID          ,
	CONCAT(B.[FIRST NAME],' ',B.[LAST NAME]) AS FP_NAME          ,
	B.[JOB TYPE CODE]          ,
	CONCAT((LEFT(SALE_HIER_DIM.[ORZN_ZONE_CDE],4)),'-',SALE_HIER_DIM.ORZN_DEPT_DSCR) AS TAG       ,
	SALE_HIER_DIM.ORZN_ZONE_CDE [MARKET]          ,
	C.[SOURCE SYSTEM KEY TEXT] AS LEADER_TSID          ,
	CONCAT(C.[FIRST NAME],' ',C.[LAST NAME]) AS LEADER_NAME       ,
	A.[LIFE AND HEALTH GRID CREDIT AMOUNT]       ,
	A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] AS LH_PACE_TARGET       ,
	A.[GRID CREDIT AMOUNT]       ,
	[PRORATED GRID CREDIT AMOUNT] AS PACE_TARGET          ,
	D.[GRID CREDIT AMOUNT] AS EOY_TARGET          ,
	D.[GRID CREDIT RANGE AMOUNT] AS EOY_RANGE_AMT          ,
	E.[GRID CREDIT AMOUNT] AS EOQ_TARGET          ,
	E.[GRID CREDIT RANGE AMOUNT] AS EOQ_RANGE_AMT          ,
	F.[GRID CREDIT AMOUNT] AS EOM_TARGET          ,
	F.[GRID CREDIT RANGE AMOUNT] AS EOM_RANGE_AMT          ,
	CASE WHEN [PRIOR ADVISOR EXPERIENCE INDICATOR] = 'Y' OR B.[JOB TYPE CODE] = '002010' THEN ''          WHEN A.[GRID CREDIT AMOUNT] > A.[PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          WHEN A.[GRID CREDIT AMOUNT] < A.[PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'    ELSE ''          END AS ABOVE_BELOW          ,
	CASE WHEN [PRIOR ADVISOR EXPERIENCE INDICATOR] = 'Y' OR B.[JOB TYPE CODE] = '002010' THEN ''          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] > A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'          WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] < A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'    ELSE ''          END AS ABOVE_BELOW_LH      ,
	[PRIOR ADVISOR EXPERIENCE INDICATOR]        ,
	CASE WHEN A.[PROCESS DATE] = MAX_PROCESS_DATE.[MAX PROCESS DATE]THEN 'Y'          ELSE 'N'          END AS CURR_WK_IND   
FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A   INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B    ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND        A.[PROCESS DATE]>=B.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=B.[EFFECTIVE END DATE])   INNER JOIN (SELECT MAX([PROCESS DATE]) [MAX PROCESS DATE] FROM [DM_01].[PACE PERFORMANCE SNAPSHOT FACT]) AS MAX_PROCESS_DATE ON 'A' = 'A'   INNER JOIN [DM_01].[DATE DIMENSION] DD ON (A.[PROCESS DATE]=DD.[CALENDAR DATE DATE])    LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SALE_HIER_DIM     ON ((     (SALE_HIER_DIM.EFF_BEG_DT<=A.[PROCESS DATE])         OR         (         (A.[PROCESS DATE]<(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y'))         AND         SALE_HIER_DIM.EFF_BEG_DT=(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y')         ))         AND          (A.[PROCESS DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))         AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'         AND B.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])             INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] C    ON (A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]=C.[ORGANIZATION DIMENSION SURROGATE KEY] AND     A.[PROCESS DATE]>=C.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=C.[EFFECTIVE END DATE])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] D    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))=D.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] E    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))    ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))    END)=E.[CALENDAR YEAR MONTH NUMBER])   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] F    ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS77919','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))=F.[CALENDAR YEAR MONTH NUMBER])']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ABOVE/BELOW', EACH IF [TENURE_MONTHS] <= 2.25 THEN '' ELSE [ABOVE_BELOW]),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ABOVE_BELOW'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS',{'ORGANIZATION DIMENSION SURROGATE KEY', 'ORGANIZATION DIMENSION VERSION NUMBER', 'ORGANIZATION LEAD DIMENSION SURROGATE KEY', 'ORGANIZATION LEAD DIMENSION VERSION NUMBER', 'PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY', 'PACE PERFORMANCE TARGET VERSION NUMBER', 'PROCESS DATE', 'TENURE DATA', 'MONTH', 'EOQ_MONTH', 'EOY_MONTH', 'TENURE_MONTHS', 'EOY_TENURE', 'EOQ_TENURE', 'EOM_TENURE', 'PRODUCTION DATE', 'SNAPSHOT TYPE CODE', 'BUSINESS INTERRUPTION DAY VALUE', 'TSID', 'FP_NAME', 'JOB TYPE CODE', 'TAG', 'MARKET', 'LEADER_TSID', 'LEADER_NAME', 'LIFE AND HEALTH GRID CREDIT AMOUNT', 'LH_PACE_TARGET', 'GRID CREDIT AMOUNT', 'PACE_TARGET', 'EOY_TARGET', 'EOY_RANGE_AMT', 'EOQ_TARGET', 'EOQ_RANGE_AMT', 'EOM_TARGET', 'EOM_RANGE_AMT', 'ABOVE/BELOW', 'ABOVE_BELOW_LH', 'PRIOR ADVISOR EXPERIENCE INDICATOR', 'CURR_WK_IND'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'ABOVE/BELOW', 'ABOVE_BELOW'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE_MONTHS] >= 0),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'FILTERED ROWS', {'TSID'}, #'12_31 PACE EXPORT', {'TSID'}, '12_31 PACE EXPORT', JOINKIND.LEFTOUTER),    #'EXPANDED 12_31 PACE EXPORT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', '12_31 PACE EXPORT', {'EOY PACE TARGET', 'ABOVE/BELOW EOY'}, {'EOY PACE TARGET', 'ABOVE/BELOW EOY'})IN    #'EXPANDED 12_31 PACE EXPORT

SELECT 
	A.CUST_SK,        
	A.CUST_ID_NBR,        
	CASE WHEN XX.HOH_NAMEXX <> '' THEN XX.HOH_NAMEXX        ELSE A.CUST_LGAL_LST_NM||', '||A.CUST_LGAL_FRST_NM       END AS HOH_NAME,       A.CUST_LGAL_LST_NM||', '||A.CUST_LGAL_FRST_NM AS CLIENT_NAME,       
	A.CUST_LGAL_FMT_NM,        
	A.CUST_LGAL_FRST_NM,        
	A.CUST_LGAL_LST_NM,        
	A.CUST_GRLN_TYP_CDE,        
	A.CUST_GRP_ID_NBR,        
	B.STP_STS_CDE,        
	CASE WHEN B.FUT_VLU_INDX_CDE = 'GOLD' THEN 'GOLD'             WHEN B.FUT_VLU_INDX_CDE = 'SILVR' THEN 'SILVER'             WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' THEN 'BRONZE'             WHEN B.FUT_VLU_INDX_CDE IN ('NA','UNK',' ' ) THEN 'UNKNOWN'        END AS FUTUREVALUE,        CASE WHEN A.MBR_TYP_CDE = 'BEN' THEN 'BENEFIT'             WHEN A.MBR_TYP_CDE = 'ASSOC' THEN 'ASSOCIATE'             WHEN A.MBR_TYP_CDE = 'JUV' THEN 'JUVENILE'             WHEN A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE <> 'NA' THEN 'NON-MEMBER'             WHEN A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE = 'NA' THEN 'PROSPECT'        END AS MBRTYPE,        CASE WHEN A.CUST_AGE < 0 THEN 'UKWN'            WHEN A.CUST_AGE < 18 THEN '<18'            WHEN A.CUST_AGE < 25 THEN '18-24'            WHEN A.CUST_AGE < 35 THEN '25-34'            WHEN A.CUST_AGE < 45 THEN '35-44'            WHEN A.CUST_AGE < 55 THEN '45-54'            WHEN A.CUST_AGE < 65 THEN '55-64'            WHEN A.CUST_AGE < 75 THEN '65-74'            WHEN A.CUST_AGE < 85 THEN '75-84'            WHEN A.CUST_AGE >= 85 THEN '85+'         ELSE ' '         END AS CUST_AGE_GRP,        
	CASE WHEN A.CUST_AGE < 18 THEN '<18'             WHEN A.CUST_AGE >= 18 THEN '18+'         ELSE ' '        END AS CLNT_AGE_TYP,        CASE WHEN B.FUT_VLU_INDX_CDE = 'GOLD' AND B.STP_STS_CDE = 'YES' THEN 'A'            WHEN B.FUT_VLU_INDX_CDE = 'SILVR' AND B.STP_STS_CDE = 'YES' THEN 'B'          WHEN B.FUT_VLU_INDX_CDE = 'GOLD' AND B.STP_STS_CDE <> 'YES' THEN 'B'          WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' AND B.STP_STS_CDE = 'YES' THEN 'C'          WHEN B.FUT_VLU_INDX_CDE = 'SILVR' AND B.STP_STS_CDE <> 'YES' THEN 'C'          WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' AND B.STP_STS_CDE <> 'YES' THEN 'D'          ELSE ' '        END AS CLIENT_SERVICE_MODEL,        
	C.EMP_ORZN_ID   
FROM MEMBER.ITGR_IDVL_ALL_CURR_CFDL A LEFT JOIN        MEMBER.CNF_CUST_RESID_MAIL_GRP_DIM_CFDL B     ON A.CUST_GRP_SK=B.CUST_GRP_SK INNER JOIN         CLNT_ASMT_DM.CUST_REPR_ASGN_CURR_CFDL C       /* CLNT_ASMT_DM.CUST_SREP_RLTN_CURR_CFDL C */       /* CLNT_ASMT_DM.CUST_REPR_COMP_RLTN_CURR_CFDL C */     ON A.CUST_SK = C.ACRT_CUST_SK AND        A.MBR_TYP_CDE IN ('BEN','NON','ASSOC','JUV') AND        C.EMP_ORZN_ID LIKE 'TS%' LEFT JOIN      (SELECT X.CUST_GRP_ID_NBR,               X.CUST_LGAL_LST_NM||', '||X.CUST_LGAL_FRST_NM AS HOH_NAMEXX        FROM MEMBER.ITGR_IDVL_ALL_CURR_CFDL X       WHERE X.CUST_GRLN_TYP_CDE IN ('PRIM','PRIMD')) AS XX    ON A.CUST_GRP_ID_NBR=XX.CUST_GRP_ID_NBR    WHERE (A.MBR_TYP_CDE IN ('BEN','ASSOC','JUV') OR         A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE <> 'NA') ']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH TRUE),    #'REPLACED VALUE' = TABLE.REPLACEVALUE(#'FILTERED ROWS','','UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'REPLACED VALUE1' = TABLE.REPLACEVALUE(#'REPLACED VALUE',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'APPENDED QUERY' = TABLE.COMBINE({#'REPLACED VALUE1', CLIENT_HHLD_NON_MGP}),    #'REMOVED DUPLICATES' = TABLE.DISTINCT(#'APPENDED QUERY', {'CUST_ID_NBR'}),    #'REPLACED VALUE2' = TABLE.REPLACEVALUE(#'REMOVED DUPLICATES','JUVENILE','YOUTH',REPLACER.REPLACETEXT,{'MBRTYPE'}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'REPLACED VALUE2', 'YEAR-TSID', EACH 'CY'&[EMP_ORZN_ID]),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM', {'CUST_ID_NBR'}, MGP_CLIENTS, {'CUST_ID_NBR'}, 'MGP_CLIENTS', JOINKIND.LEFTOUTER),    #'EXPANDED MGP_CLIENTS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'MGP_CLIENTS', {'ASOFDT', 'TSID_MGP', 'GOALS DOCUMENTED', 'GOALS DOCUMENTED TOTAL', 'GOAL INDICATOR'}, {'MGP_CLIENTS.ASOFDT', 'MGP_CLIENTS.TSID_MGP', 'MGP_CLIENTS.GOALS DOCUMENTED', 'MGP_CLIENTS.GOALS DOCUMENTED TOTAL', 'MGP_CLIENTS.GOAL INDICATOR'}),    #'REPLACED VALUE3' = TABLE.REPLACEVALUE(#'EXPANDED MGP_CLIENTS',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'MGP_CLIENTS.TSID_MGP'}),    #'REPLACED VALUE4' = TABLE.REPLACEVALUE(#'REPLACED VALUE3',NULL,0,REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOALS DOCUMENTED'}),    #'REPLACED VALUE5' = TABLE.REPLACEVALUE(#'REPLACED VALUE4',NULL,0,REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOALS DOCUMENTED TOTAL'}),    #'REPLACED VALUE6' = TABLE.REPLACEVALUE(#'REPLACED VALUE5',NULL,'N',REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOAL INDICATOR'})IN    #'REPLACED VALUE6
SELECT 
	PERS_DIM.[SOURCE SYSTEM KEY TEXT] AS THRIVENTID,    
	-- APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],       
	APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],       
	APPT_FCT.[PERSON DIMENSION SURROGATE KEY],    
	-- APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION KEY],    
	-- APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY],       
	SUM(APPT_FCT.[APPOINTMENT OCCURS]) [APPT_OCCURS],       
	MAX(APPT_FCT.[PERSON OCCURS]) [PERSON OCCURS],       
	MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],       
	APPT_DIM.[APPOINTMENT DATE],       
	APPT_DIM.[APPOINTMENT TYPE DESCRIPTION] [APPOINTMENT TYPE CODE],       
	DATE_DIM.[CALENDAR YEAR NAME],       
	ORG_DIM.[SOURCE SYSTEM KEY TEXT] [EMP_ID],     
	--SALE_HIER_DIM.ORZN_DEPT_CDE [RFO ZONE NAME],     
	--SALE_HIER_DIM.ORZN_ZONE_CDE [RFO ZONE IDENTIFIER],       
	ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],       (SELECT MAX(A.[LIFE SEGMENT VALUE DESCRIPTION])          FROM ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] A         WHERE APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=A.[PERSON DIMENSION SURROGATE KEY]         AND A.[CURRENT ROW INDICATOR] = 'Y') AS [LIFE SEGMENT VALUE DESCRIPTION]     FROM ENTERPRISEDATAMART.DM_01.[APPOINTMENT COMBINE FACT] APPT_FCT LEFT JOIN         ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] AS PERS_DIM     ON (APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=PERS_DIM.[PERSON DIMENSION SURROGATE KEY] AND         APPT_FCT.[PERSON DIMENSION VERSION NUMBER] = PERS_DIM.[PERSON DIMENSION VERSION NUMBER]) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[MEMBERSHIP TYPE DIMENSION] MBR_DIM     ON (APPT_FCT.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]=MBR_DIM.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[APPOINTMENT DIMENSION] APPT_DIM     ON (APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY]=APPT_DIM.[APPOINTMENT DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM     ON (APPT_DIM.[APPOINTMENT DATE]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM     ON ((APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND         ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= APPT_DIM.[APPOINTMENT DATE]) AND (APPT_DIM.[APPOINTMENT DATE] <= ORG_DIM.[EFFECTIVE END DATE]))) LEFT JOIN           ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM     ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND  (SALE_HIER_DIM.EFF_BEG_DT<=APPT_DIM.[APPOINTMENT DATE]) AND  (APPT_DIM.[APPOINTMENT DATE]<= SALE_HIER_DIM.EFF_END_DT) AND    SALE_HIER_DIM.CURR_ROW_IND = 'Y'))  WHERE APPT_DIM.[CURRENT ROW INDICATOR] = 'Y'   AND APPT_DIM.[APPOINTMENT CREATE DATE OVER 14 DAYS] = 'N'   AND APPT_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0   AND APPT_FCT.[APPOINTMENT STATUS NAME] <> 'DECLINED'   AND APPT_DIM.[APPOINTMENT TYPE CODE] <> 'UNK'   AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0165','0190','0240','0283','0291','0361','0365', '0383','0384','0410','0435','0475','0496','0525','0529','0810')  AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '002030', '002031', '002032', '003100', '003500')   OR  ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))    AND APPT_DIM.[EVENT RESULT DESCRIPTION] NOT IN ('NO SHOW','CANCELLED')   AND DATE_DIM.[CALENDAR YEAR NAME] IN ('2022','2023','2024') GROUP BY --APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],   APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],   APPT_FCT.[PERSON DIMENSION SURROGATE KEY],   MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],   APPT_DIM.[APPOINTMENT DATE],   APPT_DIM.[APPOINTMENT TYPE DESCRIPTION],   DATE_DIM.[CALENDAR YEAR NAME], --SALE_HIER_DIM.ORZN_DEPT_CDE, --SALE_HIER_DIM.ORZN_ZONE_CDE,   ORG_DIM.[SOURCE SYSTEM KEY TEXT],   ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],   PERS_DIM.[SOURCE SYSTEM KEY TEXT]  --APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION KEY], --APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]    HAVING  SUM(APPT_FCT.[APPOINTMENT OCCURS])>0']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'APPOINTMENT DATE', TYPE DATE}})IN    #'CHANGED TYPE
	
