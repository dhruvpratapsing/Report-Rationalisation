 SELECT DISTINCT        [DEPARTMENT IDENTIFIER] RFO_CODE       ,
[DEPARTMENT NAME] RFO_NM       ,CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',[DEPARTMENT NAME]) AS NM       
FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    
WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0365', '0435', '0496', '0810','0115', '0165', '0190', '0240',                  
'0361', '0384','0291', '0410', '0475', '0525', '0529','0001','0383')         
AND [CURRENT ROW INDICATOR] = 'Y'         
AND [EFFECTIVE BEGIN DATE] > '1/1/2019'']),    
#'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'RFO_CODE', TYPE TEXT}, {'RFO_NM', TYPE TEXT}, 
# {'NM', TYPE TEXT}}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'CHANGED TYPE',{{'NM', 'TAG'}}),    
# #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH ([RFO_CODE] = '0115' OR [RFO_CODE] = '0190' 
# OR [RFO_CODE] = '0283' OR [RFO_CODE] = '0291' OR [RFO_CODE] = '0361' OR [RFO_CODE] = '0384'
#  OR [RFO_CODE] = '0435' OR [RFO_CODE] = '0525')),    #'FILTERED ROWS1' = 
# TABLE.SELECTROWS(#'FILTERED ROWS', EACH NOT TEXT.CONTAINS([RFO_NM], 'REGION')),  
#   #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'FILTERED ROWS1',{{'TAG', 'ADVISOR GROUP'}}),    
# #'SPLIT COLUMN BY POSITION' = TABLE.SPLITCOLUMN(#'RENAMED COLUMNS1', 'ADVISOR GROUP',
#  SPLITTER.SPLITTEXTBYPOSITIONS({0, 14}, TRUE), {'ADVISOR GROUP.1', 'ADVISOR GROUP.2'}),  
#   #'CHANGED TYPE1' = TABLE.TRANSFORMCOLUMNTYPES(#'SPLIT COLUMN BY POSITION',{{'ADVISOR GROUP.1', TYPE TEXT}, 
# {'ADVISOR GROUP.2', TYPE TEXT}}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'CHANGED TYPE1',
# {{'ADVISOR GROUP.1', 'ADVISOR GROUP'}})IN    #'RENAMED COLUMNS2


SELECT DISTINCT 
	T1.ORZN_DEPT_CDE AS RFO_CDE, 
	--T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, 
	T1.ORZN_SUB_DEPT_CDE AS MVP_ID, 
	--(SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, 
	T3.ORZN_DEPT_DSCR, 
	T3.EMP_ID, 
	T3.EMP_STS_TYP_CDE, 
	T3.TRMN_DT, 
	T3.JOB_TYP_CDE, 
	T3.JOB_TYP_DSCR, 
	T3.EMP_NM, 
	CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END AS MARKET_LEADERS 
FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T1.ORZN_SUB_DEPT_CDE, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001001') ) T3 ON T1.ORZN_SUB_DEPT_CDE = T3.ORZN_SUB_DEPT_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') --AND T3.EMP_STS_TYP_CDE = 'A' --AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' AND T1.ORZN_ZONE_CDE <> 'UKWN' ORDER BY T1.ORZN_SUB_DEPT_CDE; ']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH ([RFO_CDE] = '0001      ' OR [RFO_CDE] = '0115      ' OR [RFO_CDE] = '0190      ' OR [RFO_CDE] = '0283      ' OR [RFO_CDE] = '0291      ' OR [RFO_CDE] = '0361      ' OR [RFO_CDE] = '0383      ' OR [RFO_CDE] = '0384      ' OR [RFO_CDE] = '0435      ' OR [RFO_CDE] = '0525      ' OR [RFO_CDE] = '0716      ') AND ([MVP_ID] <> '          ' AND [MVP_ID] <> '0529-00   '))IN    #'FILTERED ROWS


SELECT 
	EMP_ID AS TSID, 
	EMP_NM AS EMPLOYEE_NAME, 
	EMP_STS_TYP_DSCR AS EMP_STATUS 
FROM ''HUMAN_RESOURCES''.''CNF_EMP_DIM_DTL_CURR_CFDL'' 
WHERE CURR_ROW_IND = 'Y'']),    #'TRIMMED TEXT' = TABLE.TRANSFORMCOLUMNS(SOURCE,{{'TSID', TEXT.TRIM, TYPE TEXT}})IN    #'TRIMMED TEXT

SELECT DT_SK,         CAL_DAY_DT,         DTRB_PERF_RPT_WK_END_DT,         DTRB_PERF_RPT_WK_NBR,        DTRB_PERF_RPT_YR_NBR,        DTRB_PERF_RPT_YR_WK_NBR,        SRC_SYS_ID,         CRET_TMSP,         LST_UPDT_TMSP,         CRET_USER_ID,         LST_UPDT_USER_ID,         DTRB_PERF_RPT_DAY_TXT,         DTRB_PERF_RPT_MTH_TXT,         DTRB_PERF_RPT_QTR_TXT,         DTRB_PERF_RPT_WK_TXT,        DTRB_PERF_RPT_YR_TXT       FROM COMMON.DTRB_PERF_DATES       WHERE DTRB_PERF_RPT_YR_NBR IN (2023, 2024)']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'CAL_DAY_DT', TYPE DATE}, {'DTRB_PERF_RPT_WK_END_DT', TYPE DATE}})IN    #'CHANGED TYPE


SELECT DISTINCT        
	[DEPARTMENT IDENTIFIER] RFO_CODE       ,
	[DEPARTMENT NAME] RFO_NM       ,
	CASE        WHEN [DEPARTMENT IDENTIFIER]='0383' THEN '0383-VIRTUAL ADVICE'        ELSE CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',LEFT([DEPARTMENT NAME],LEN([DEPARTMENT NAME])-13))         END AS NM       
FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0435','0115', '0190',                  '0361', '0384','0291', '0525','0001','0383')         AND [CURRENT ROW INDICATOR] = 'Y'         AND [EFFECTIVE BEGIN DATE] > '1/1/2019'         AND [EFFECTIVE END DATE] = '12/31/9999'

SELECT 
	B.SRC_SYS_KEY_TXT, 
	B.FRST_NM+' '+B.LST_NM AS EMP_NM, 
	C.ORZN_ZONE_CDE, 
	C.ORZN_DEPT_CDE, 
	A.JOB_TYP_CDE, 
	CAST(A.EFF_BEG_DT AS DATE) AS EFF_BEG_DT, 
	ADJ_SVC_DT 
FROM [DM_01].[WORKER_STATUS_FCT] A LEFT JOIN [DM_01].[ORGANIZATION_DIM] B ON A.ORZN_DIM_SK=B.ORZN_DIM_SK LEFT JOIN [DM_01].[SALE_HIER_DIM] C ON (B.SRC_SYS_KEY_TXT=C.SALE_HIER_ID AND C.EFF_END_DT='9999-12-31 00:00:00' AND C.CURR_ROW_IND='Y') WHERE ( --A.JOB_TYP_CDE='001004' OR A.JOB_TYP_CDE='001005' OR A.JOB_TYP_CDE='001011' OR A.JOB_TYP_CDE='001007' ) AND  B.CURR_ROW_IND='Y' AND A.EFF_END_DT='9999-12-31 00:00:00' AND EMP_STS_TYP_CDE='A'']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_DT', TYPE DATE}, {'ADJ_SVC_DT', TYPE DATE}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'CHANGED TYPE', EACH [JOB_TYP_CDE] <> '001004'),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'FILTERED ROWS',{'ADJ_SVC_DT'}),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'REMOVED COLUMNS', {'SRC_SYS_KEY_TXT'}, #'WORKDAY LEADER DIRECTORY', {'EMPLOYEE ID'}, 'WORKDAY LEADER DIRECTORY', JOINKIND.LEFTOUTER),    #'EXPANDED WORKDAY LEADER DIRECTORY' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'WORKDAY LEADER DIRECTORY', {'COST CENTER', 'START DATE IN CURRENT JOB OR HIRE DATE', 'WORKER'}, {'WORKDAY LEADER DIRECTORY.COST CENTER', 'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE', 'WORKDAY LEADER DIRECTORY.WORKER'}),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'EXPANDED WORKDAY LEADER DIRECTORY', 'FINAL NAME', EACH IF [WORKDAY LEADER DIRECTORY.WORKER] IS NULL THEN [EMP_NM] ELSE [WORKDAY LEADER DIRECTORY.WORKER]),    #'REMOVED COLUMNS2' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM1',{'EMP_NM', 'WORKDAY LEADER DIRECTORY.WORKER'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS2',{'SRC_SYS_KEY_TXT', 'FINAL NAME', 'ORZN_ZONE_CDE', 'ORZN_DEPT_CDE', 'JOB_TYP_CDE', 'EFF_BEG_DT', 'WORKDAY LEADER DIRECTORY.COST CENTER', 'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'FINAL NAME', 'EMP_NM'}}),    #'MERGED QUERIES1' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS2', {'SRC_SYS_KEY_TXT'}, #'MARKET MAPPING', {'ZONE_LEADER_TSID'}, 'MARKET MAPPING', JOINKIND.LEFTOUTER),    #'EXPANDED MARKET MAPPING' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES1', 'MARKET MAPPING', {'HIER_ID'}, {'MARKET MAPPING.HIER_ID'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'EXPANDED MARKET MAPPING',{{'ORZN_ZONE_CDE', 'WORKER_STS_FCT_MKT'}, {'MARKET MAPPING.HIER_ID', 'ORZN_ZONE_CDE'}, {'EFF_BEG_DT', 'WORKER_STS_FCT_DT'}, {'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE', 'EFF_BEG_DT'}}),    #'MERGED QUERIES2' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS', {'SRC_SYS_KEY_TXT'}, #'0630 LEADER BACKUP', {'EMPLOYEE ID'}, '0630 LEADER BACKUP', JOINKIND.LEFTOUTER),    #'EXPANDED 0630 LEADER BACKUP' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES2', '0630 LEADER BACKUP', {'EMPLOYEE ID', 'START DATE IN CURRENT JOB OR HIRE DATE'}, {'0630 LEADER BACKUP.EMPLOYEE ID', '0630 LEADER BACKUP.START DATE IN CURRENT JOB OR HIRE DATE'}),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'EXPANDED 0630 LEADER BACKUP', EACH ([0630 LEADER BACKUP.EMPLOYEE ID] <> NULL)),    #'DATE FILTER' = TABLE.SELECTROWS(#'FILTERED ROWS1', EACH [EFF_BEG_DT] >= #DATE(2023, 1, 1)),    #'JOB CODE FILTER' = TABLE.SELECTROWS(#'DATE FILTER', EACH ([JOB_TYP_CDE] = '001007')),    #'APPEND EXCEPTIONS' = TABLE.COMBINE({#'JOB CODE FILTER', #'DIR EXCEPTIONS'}),    CUSTOM1 = TABLE.ADDCOLUMN(#'APPEND EXCEPTIONS', 'PICTURE', EACH 'HTTPS://MYFIELD.THRIVENT.COM/CONTENT/FAIMAGES/' & [SRC_SYS_KEY_TXT] & '.JPG


SELECT 
	(DTRB_PERF_RPT_WK_END_DT+1) AS ''WEEK_START_DATE'', 
	SUM(1) AS ROW_CT 
FROM COMMON.DTRB_PERF_DATES WHERE DTRB_PERF_RPT_YR_TXT='CURRENT' AND DTRB_PERF_RPT_WK_END_DT+1<=CURRENT_DATE GROUP BY (DTRB_PERF_RPT_WK_END_DT+1)']),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(SOURCE,{'ROW_CT'}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS', 'JOIN', EACH 1),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM', {'JOIN'}, #'PROCESS DATES', {'JOIN'}, 'PROCESS DATES', JOINKIND.LEFTOUTER),    #'REMOVED COLUMNS1' = TABLE.REMOVECOLUMNS(#'MERGED QUERIES',{'JOIN'}),    #'ALL DATES' = TABLE.EXPANDTABLECOLUMN(#'REMOVED COLUMNS1', 'PROCESS DATES', {'PROCESS DATE'}, {'PROCESS DATES.PROCESS DATE'}),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'ALL DATES', 'NEW_PROCESS_DT', EACH IF DURATION.DAYS([PROCESS DATES.PROCESS DATE]-[WEEK_START_DATE])>0 THEN NULL ELSE [PROCESS DATES.PROCESS DATE]),    #'GROUP BY PROC DATE' = TABLE.GROUP(#'ADDED CUSTOM1', {'WEEK_START_DATE'}, {{'COUNT', EACH _, TYPE TABLE [WEEK_START_DATE=DATETIME, PROCESS DATES.PROCESS DATE=NULLABLE DATETIME, NEW_PROCESS_DT=NULLABLE DATETIME]}}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'GROUP BY PROC DATE', 'WEEKLY PROC DT', EACH LETDATEMAX=LIST.MAX([COUNT] [NEW_PROCESS_DT])INDATEMAX),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'ADDED CUSTOM2', EACH ([WEEKLY PROC DT] <> NULL))IN    #'FILTERED ROWS

SELECT 
	A.[APPOINTMENT COUNT],        
	A.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY],        
	A.[APPOINTMENT ORGANIZATION VERSION NUMBER],        
	A.[CONTRACT COUNT],        
	A.[GROSS DEALER CONCESSION AMOUNT],        
	A.[GROSS DEALER CONCESSION CONTRACT COUNT],        
	A.[NEW SALES CREDIT AMOUNT],        
	A.[NEW SALES CREDIT CONTRACT COUNT],     
	A.[PERSON APPOINTMENT COUNT],     
	A.[PERSON CONTRACT COUNT],     
	A.[PERSON CONTRACT GROSS DEALER CONCESSION COUNT],     
	A.[PERSON CONTRACT NEW SALES CREDIT COUNT],     
	A.[PERSON COUNT],     
	A.[REFERRAL COUNT],    
	A.[VITAL STATS CALCULATION DATE],     
	B.[SOURCE SYSTEM KEY TEXT] [EMP_ID]  
FROM ENTERPRISEDATAMART.DM_01.[VITAL STATS SUMMARY FACT] AS A LEFT JOIN       ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] B   ON A.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND B.[CURRENT ROW INDICATOR] = 'Y'   ']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'APPOINTMENTS_PER_CUSTOMER', EACH [PERSON COUNT]/[PERSON APPOINTMENT COUNT]),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'ADDED CUSTOM',{{'APPOINTMENTS_PER_CUSTOMER', TYPE NUMBER}}),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'CHANGED TYPE', 'TOTAL CLOSE RATE', EACH [PERSON CONTRACT COUNT] / [PERSON COUNT]),    #'CHANGED TYPE1' = TABLE.TRANSFORMCOLUMNTYPES(#'ADDED CUSTOM1',{{'TOTAL CLOSE RATE', TYPE NUMBER}})IN    #'CHANGED TYPE1

SELECT DISTINCT        [DEPARTMENT IDENTIFIER] RFO_CODE       ,[DEPARTMENT NAME] RFO_NM       ,CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',[DEPARTMENT NAME]) AS NM       ,[EFFECTIVE END DATE]       ,[CURRENT ROW INDICATOR]      FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0435','0115', '0190',                  '0361', '0384','0291', '0525','0001','0383','0714','0716')                 AND [CURRENT ROW INDICATOR] = 'Y'                 AND [EFFECTIVE END DATE] = '12/31/9999'                   ']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'RFO_CODE', TYPE TEXT}, {'RFO_NM', TYPE TEXT}, {'NM', TYPE TEXT}})IN    #'CHANGED TYPE

SELECT 
	PERS_DIM.[SOURCE SYSTEM KEY TEXT] AS THRIVENTID,        
	PERS_DIM.[FIRST NAME] + ' ' + PERS_DIM.[LAST NAME] AS CLIENTNAME,        
	APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],        
	APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],        
	APPT_FCT.[PERSON DIMENSION SURROGATE KEY],        
	SUM(APPT_FCT.[APPOINTMENT OCCURS]) [APPT_OCCURS],       
	MAX(APPT_FCT.[PERSON OCCURS]) [PERSON OCCURS],        
	MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],     
	CASE WHEN APPT_DIM.[FIELD USER COUNT] <> 0 AND APPT_DIM.[APPOINTMENT TYPE CODE] IN ('CONNECT','GATHER DATA','TAKE ACTION','STRATEGY CALL/MEETING','REVIEW','SERVICE','DISCOVER','DELIVER')    THEN 1    ELSE 0     END [JFW_IND],        
	APPT_DIM.[APPOINTMENT DATE],        
	CASE WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('GATHER DATA') THEN 'DISCOVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('TAKE ACTION') THEN 'DELIVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] NOT IN ('GATHER DATA','TAKE ACTION') THEN APPT_DIM.[APPOINTMENT TYPE DESCRIPTION]        END AS [APPOINTMENT TYPE CODE],        
	DATE_DIM.[CALENDAR YEAR NAME] AS [PERFORMANCE YEAR NAME],        
	ORG_DIM.[SOURCE SYSTEM KEY TEXT] [EMP_ID],        
	ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME] [EMP_NM]    
FROM ENTERPRISEDATAMART.DM_01.[APPOINTMENT COMBINE FACT] APPT_FCT LEFT JOIN         ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] AS PERS_DIM     ON (APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=PERS_DIM.[PERSON DIMENSION SURROGATE KEY] AND         APPT_FCT.[PERSON DIMENSION VERSION NUMBER] = PERS_DIM.[PERSON DIMENSION VERSION NUMBER]) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[MEMBERSHIP TYPE DIMENSION] MBR_DIM     ON (APPT_FCT.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]=MBR_DIM.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[APPOINTMENT DIMENSION] APPT_DIM     ON (APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY]=APPT_DIM.[APPOINTMENT DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM     ON (APPT_DIM.[APPOINTMENT DATE]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM     ON ((APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND         ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= APPT_DIM.[APPOINTMENT DATE]) AND (APPT_DIM.[APPOINTMENT DATE] <= ORG_DIM.[EFFECTIVE END DATE]))) LEFT JOIN           ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM     ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND  (SALE_HIER_DIM.EFF_BEG_DT<=APPT_DIM.[APPOINTMENT DATE]) AND  (APPT_DIM.[APPOINTMENT DATE]<= SALE_HIER_DIM.EFF_END_DT) AND    SALE_HIER_DIM.CURR_ROW_IND = 'Y'))  WHERE APPT_DIM.[CURRENT ROW INDICATOR] = 'Y'   AND APPT_DIM.[APPOINTMENT CREATE DATE OVER 14 DAYS] = 'N'   AND APPT_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0   AND APPT_FCT.[APPOINTMENT STATUS NAME] <> 'DECLINED'   AND APPT_DIM.[APPOINTMENT TYPE CODE] <> 'UNK'   AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0165','0190','0240','0283','0291','0361','0365', '0383','0384','0410','0435','0475','0496','0525','0529','0810')  AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '003100', '003500')   OR  ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))    AND APPT_DIM.[EVENT RESULT DESCRIPTION] NOT IN ('NO SHOW','CANCELLED')   AND DATE_DIM.[CALENDAR YEAR NAME] IN ('2024')   GROUP BY   APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],   APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],   APPT_FCT.[PERSON DIMENSION SURROGATE KEY],   MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],   APPT_DIM.[FIELD USER COUNT],   APPT_DIM.[APPOINTMENT DATE],   APPT_DIM.[APPOINTMENT TYPE CODE],   APPT_DIM.[APPOINTMENT TYPE DESCRIPTION],   DATE_DIM.[CALENDAR YEAR NAME],   ORG_DIM.[SOURCE SYSTEM KEY TEXT],   ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],   PERS_DIM.[SOURCE SYSTEM KEY TEXT],   PERS_DIM.[FIRST NAME] + ' ' + PERS_DIM.[LAST NAME]   HAVING  SUM(APPT_FCT.[APPOINTMENT OCCURS]) > 0 ']),    #'FILTERED ROWS1' = TABLE.SELECTROWS(SOURCE, EACH ([WORKER APPOINTMENT ASSOCIATION] = 'OWNER')),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'FILTERED ROWS1', EACH ([APPOINTMENT TYPE CODE] = 'CONNECT') AND ([MEMBERSHIP TYPE DESCRIPTION] <> 'BENEFIT')),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'FILTERED ROWS',{{'APPOINTMENT DATE', TYPE DATE}, {'THRIVENTID', INT64.TYPE}})IN    #'CHANGED TYPE

SELECT DISTINCT        
	[DEPARTMENT IDENTIFIER] RFO_CODE       ,
	[DEPARTMENT NAME] RFO_NM       ,
	CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',[DEPARTMENT NAME]) AS NM       
FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0435','0115', '0190',                  '0361', '0384','0291', '0525','0001','0383','0716','0708')         AND [CURRENT ROW INDICATOR] = 'Y'         AND [EFFECTIVE BEGIN DATE] > '1/1/2019'         AND [EFFECTIVE END DATE] = '12/31/9999'']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'RFO_CODE', INT64.TYPE}})IN    #'CHANGED TYPE

SELECT DISTINCT 
	T1.ORZN_DEPT_CDE AS RFO_CDE, 
	--T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, 
	T1.ORZN_SUB_DEPT_CDE AS MVP_ID, 
	--(SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, 
	T3.ORZN_DEPT_DSCR, 
	T3.EMP_ID, 
	T3.EMP_STS_TYP_CDE, 
	T3.TRMN_DT, 
	T3.JOB_TYP_CDE, 
	T3.JOB_TYP_DSCR, 
	T3.EMP_NM, 
	T3.PEFR_FULL_NM, 
	CASE WHEN T3.PEFR_FULL_NM IS NULL THEN 'VACANT' ELSE T3.PEFR_FULL_NM END AS MARKET_LEADERS 
FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T1.ORZN_SUB_DEPT_CDE, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM, T2.PEFR_FULL_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y'  AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T1.ORZN_DEPT_CDE IN ('0001','0714', '0716','0361', '0435','0283', '0291', '0525', '0115', '0190', '0384','0383') AND T2.JOB_TYP_CDE IN ('001001','1658','3503')  ) T3 ON T1.ORZN_SUB_DEPT_CDE = T3.ORZN_SUB_DEPT_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') --AND T3.EMP_STS_TYP_CDE = 'A' --AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' AND T1.ORZN_ZONE_CDE <> 'UKWN' AND T1.ORZN_DEPT_CDE IN ('0001','0714', '0716','0361', '0435','0283', '0291', '0525', '0115', '0190', '0384','0383')  ORDER BY T1.ORZN_SUB_DEPT_CDE;']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH ([MVP_ID] <> '          '))IN    #'FILTERED ROWS

SELECT DISTINCT 
	T1.ORZN_DEPT_CDE AS RFO_CDE, 
	--T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, 
	T1.ORZN_SUB_DEPT_CDE AS MVP_ID, 
	--(SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, 
	T3.ORZN_DEPT_DSCR, T3.EMP_ID, 
	T3.EMP_STS_TYP_CDE, 
	T3.TRMN_DT, 
	T3.JOB_TYP_CDE, 
	T3.JOB_TYP_DSCR, 
	T3.EMP_NM, 
	CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END AS MARKET_LEADERS 
FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T1.ORZN_SUB_DEPT_CDE, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001001') ) T3 ON T1.ORZN_SUB_DEPT_CDE = T3.ORZN_SUB_DEPT_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') --AND T3.EMP_STS_TYP_CDE = 'A' --AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' AND T1.ORZN_ZONE_CDE <> 'UKWN' ORDER BY T1.ORZN_SUB_DEPT_CDE;']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH ([RFO_CDE] <> '0386      ' AND [RFO_CDE] <> '0710      ' AND [RFO_CDE] <> '0714      ' AND [RFO_CDE] <> '0715      ' AND [RFO_CDE] <> '0718      ' AND [RFO_CDE] <> '0997      ' AND [RFO_CDE] <> 'UKWN      ') AND ([MVP_ID] <> '          ' AND [MVP_ID] <> '0410-00   ' AND [MVP_ID] <> '0529-00   '))IN    #'FILTERED ROWS

SELECT 
	A.DT_SK,         
	A.CAL_DAY_DT,         
	A.DTRB_PERF_RPT_WK_END_DT,         
	A.DTRB_PERF_RPT_WK_NBR,        
	A.DTRB_PERF_RPT_YR_NBR,        
	A.DTRB_PERF_RPT_YR_WK_NBR,        
	A.SRC_SYS_ID,         
	A.CRET_TMSP,         
	A.LST_UPDT_TMSP,         
	A.CRET_USER_ID,         
	A.LST_UPDT_USER_ID,         
	A.DTRB_PERF_RPT_DAY_TXT,         
	A.DTRB_PERF_RPT_MTH_TXT,         
	A.DTRB_PERF_RPT_QTR_TXT,         
	A.DTRB_PERF_RPT_WK_TXT,        
	A.DTRB_PERF_RPT_YR_TXT,        
	B.CAL_WK_STRT_DT,        
	B.CAL_WK_END_DT,        
	B.CAL_MTH_STRT_DT,        
	B.CAL_MTH_END_DT,        
	B.HDAY_IND,        
	B.WKDY_IND   
FROM COMMON.DTRB_PERF_DATES  AS A INNER JOIN        COMMON.IA_DATES_ITRL AS B     ON A.DT_SK=B.DT_SK  WHERE A.DTRB_PERF_RPT_YR_NBR IN (2021, 2022, 2023, 2024)      ']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'CAL_DAY_DT', TYPE DATE}, {'DTRB_PERF_RPT_WK_END_DT', TYPE DATE}, {'CAL_WK_STRT_DT', TYPE DATE}, {'CAL_WK_END_DT', TYPE DATE}}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'CHANGED TYPE', 'WEEK START DATE', EACH DATE.ADDDAYS([CAL_WK_STRT_DT],1)),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'ADDED CUSTOM', 'WEEK END DATE', EACH DATE.ADDDAYS([CAL_WK_END_DT],1)),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM1',{'CAL_WK_STRT_DT', 'CAL_WK_END_DT'}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS', 'CURRENT YEAR', EACH IF DATE.YEAR(DATETIME.LOCALNOW()) = [DTRB_PERF_RPT_YR_NBR] THEN 'CURRENT YEAR' ELSE [DTRB_PERF_RPT_YR_NBR]),    #'REMOVED COLUMNS1' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM2',{'SRC_SYS_ID', 'CRET_TMSP', 'LST_UPDT_TMSP', 'CRET_USER_ID', 'LST_UPDT_USER_ID'}),    #'ADDED CONDITIONAL COLUMN' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS1', 'BUSINESS DAY IND', EACH IF [HDAY_IND] = 'Y' THEN 0 ELSE IF [WKDY_IND] = 'Y' THEN 1 ELSE 0),    #'CHANGED TYPE1' = TABLE.TRANSFORMCOLUMNTYPES(#'ADDED CONDITIONAL COLUMN',{{'BUSINESS DAY IND', INT64.TYPE}})IN    #'CHANGED TYPE1

SELECT 
	A.PREV_JOB_TYP_CDE, 
	A.JOB_TYP_CDE, 
	A.EFF_BEG_DT, 
	A.EFF_END_DT, 
	B.SRC_SYS_KEY_TXT, 
	CONCAT(B.FRST_NM,' ',B.LST_NM) AS NAME, 
	C.ORZN_ZONE_CDE, 
	C.ORZN_DEPT_CDE 
FROM [ENTERPRISEDATAMART].[DM_01].[WORKER_STATUS_FCT] A LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION_DIM] B ON A.ORZN_DIM_SK=B.ORZN_DIM_SK LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] C ON (B.SRC_SYS_KEY_TXT=C.SALE_HIER_ID AND C.CURR_ROW_IND='Y')  WHERE ( A.PREV_JOB_TYP_CDE = '002003' OR A.PREV_JOB_TYP_CDE = '002011' OR A.PREV_JOB_TYP_CDE = '002012' OR A.PREV_JOB_TYP_CDE = '002030' OR A.PREV_JOB_TYP_CDE = '002031' OR A.PREV_JOB_TYP_CDE = '002032' ) AND A.JOB_TYP_CDE = '002022' GROUP BY A.PREV_JOB_TYP_CDE, A.JOB_TYP_CDE, A.EFF_BEG_DT, A.EFF_END_DT, B.SRC_SYS_KEY_TXT, C.ORZN_ZONE_CDE, C.ORZN_DEPT_CDE, CONCAT(B.FRST_NM,' ',B.LST_NM)']),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(SOURCE,{{'EFF_BEG_DT', 'TENURE DATE'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE DATE] > #DATETIME(2023, 12, 31, 0, 0, 0)),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'FILTERED ROWS', EACH ([EFF_END_DT] = #DATETIME(9999, 12, 31, 0, 0, 0))),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'FILTERED ROWS1',{{'SRC_SYS_KEY_TXT', 'TSID'}}),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS1', {'TSID'}, RR_IN_AND_OUT, {'TSID'}, 'RR_IN_AND_OUT', JOINKIND.LEFTOUTER),    #'EXPANDED RR_IN_AND_OUT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'RR_IN_AND_OUT', {'TSID'}, {'RR_IN_AND_OUT.TSID'}),    #'FILTERED ROWS2' = TABLE.SELECTROWS(#'EXPANDED RR_IN_AND_OUT', EACH ([RR_IN_AND_OUT.TSID] = NULL))IN    #'FILTERED ROWS2

SELECT A.BEN_CTRC_NBR,           A.EMP_ID,           A.SVC_AGMT_PLAN_YR,     A.SPLIT_CR_AGT_INDIC,    A.AGT_SPLT_PCT,    A.SVAG_ADVR_RLTN_BEG_DT,    A.SVAG_ADVR_RLTN_END_DT,    A.RCD_STS_CDE,    A.END_TMSP,    A.CRET_TMSP,    A.LST_UPDT_TMSP     FROM CONTRACT.SVAG_ADVR_RLTN A    ']),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(SOURCE,{'CRET_TMSP', 'LST_UPDT_TMSP'}),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'REMOVED COLUMNS',{{'SVAG_ADVR_RLTN_BEG_DT', TYPE DATE}, {'SVAG_ADVR_RLTN_END_DT', TYPE DATE}, {'END_TMSP', TYPE DATE}})IN    #'CHANGED TYPE

SELECT 
	B.SRC_SYS_KEY_TXT, 
	B.FRST_NM+' '+B.LST_NM AS EMP_NM, 
	C.ORZN_ZONE_CDE, 
	C.ORZN_DEPT_CDE, 
	A.JOB_TYP_CDE, 
	CAST(A.EFF_BEG_DT AS DATE) AS EFF_BEG_DT, 
	ADJ_SVC_DT 
FROM [DM_01].[WORKER_STATUS_FCT] A LEFT JOIN [DM_01].[ORGANIZATION_DIM] B ON A.ORZN_DIM_SK=B.ORZN_DIM_SK LEFT JOIN [DM_01].[SALE_HIER_DIM] C ON (B.SRC_SYS_KEY_TXT=C.SALE_HIER_ID AND C.EFF_END_DT='9999-12-31 00:00:00' AND C.CURR_ROW_IND='Y') WHERE ( --A.JOB_TYP_CDE='001004' OR A.JOB_TYP_CDE='001005' OR A.JOB_TYP_CDE='001011' OR A.JOB_TYP_CDE='001007' ) AND  B.CURR_ROW_IND='Y' AND A.EFF_END_DT='9999-12-31 00:00:00' AND EMP_STS_TYP_CDE='A'']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_DT', TYPE DATE}, {'ADJ_SVC_DT', TYPE DATE}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'CHANGED TYPE', EACH [JOB_TYP_CDE] <> '001004'),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'FILTERED ROWS',{'ADJ_SVC_DT'}),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'REMOVED COLUMNS', {'SRC_SYS_KEY_TXT'}, #'WORKDAY LEADER DIRECTORY', {'EMPLOYEE ID'}, 'WORKDAY LEADER DIRECTORY', JOINKIND.LEFTOUTER),    #'EXPANDED WORKDAY LEADER DIRECTORY' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'WORKDAY LEADER DIRECTORY', {'COST CENTER', 'START DATE IN CURRENT JOB OR HIRE DATE', 'WORKER'}, {'WORKDAY LEADER DIRECTORY.COST CENTER', 'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE', 'WORKDAY LEADER DIRECTORY.WORKER'}),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'EXPANDED WORKDAY LEADER DIRECTORY', 'FINAL NAME', EACH IF [WORKDAY LEADER DIRECTORY.WORKER] IS NULL THEN [EMP_NM] ELSE [WORKDAY LEADER DIRECTORY.WORKER]),    #'REMOVED COLUMNS2' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM1',{'EMP_NM', 'WORKDAY LEADER DIRECTORY.WORKER'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS2',{'SRC_SYS_KEY_TXT', 'FINAL NAME', 'ORZN_ZONE_CDE', 'ORZN_DEPT_CDE', 'JOB_TYP_CDE', 'EFF_BEG_DT', 'WORKDAY LEADER DIRECTORY.COST CENTER', 'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'FINAL NAME', 'EMP_NM'}}),    #'MERGED QUERIES1' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS2', {'SRC_SYS_KEY_TXT'}, #'MARKET MAPPING', {'ZONE_LEADER_TSID'}, 'MARKET MAPPING', JOINKIND.LEFTOUTER),    #'EXPANDED MARKET MAPPING' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES1', 'MARKET MAPPING', {'HIER_ID'}, {'MARKET MAPPING.HIER_ID'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'EXPANDED MARKET MAPPING',{{'ORZN_ZONE_CDE', 'WORKER_STS_FCT_MKT'}, {'MARKET MAPPING.HIER_ID', 'ORZN_ZONE_CDE'}, {'EFF_BEG_DT', 'WORKER_STS_FCT_DT'}, {'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE', 'EFF_BEG_DT'}}),    #'MERGED QUERIES2' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS', {'SRC_SYS_KEY_TXT'}, #'0630 LEADER BACKUP', {'EMPLOYEE ID'}, '0630 LEADER BACKUP', JOINKIND.LEFTOUTER),    #'EXPANDED 0630 LEADER BACKUP' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES2', '0630 LEADER BACKUP', {'EMPLOYEE ID', 'START DATE IN CURRENT JOB OR HIRE DATE'}, {'0630 LEADER BACKUP.EMPLOYEE ID', '0630 LEADER BACKUP.START DATE IN CURRENT JOB OR HIRE DATE'}),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'EXPANDED 0630 LEADER BACKUP', EACH ([0630 LEADER BACKUP.EMPLOYEE ID] <> NULL))IN    #'FILTERED ROWS1

SELECT COMP_PYEE_ID,        CONF_YR,        NEW_MONY_CONF_CR_AMT,        NEW_MONY_AFA_CONF_CR_AMT,        NEW_MONY_TOT_CONF_CR_AMT,        ON_TRGT_CONF_IDVL_CDE,        CONF_QUAL_IDVL_TYP_CDE,        EXTR_DAY_IDVL_IND    FROM COMP.CONF_QUAL_DTL  WHERE PROC_DT = (SELECT MAX(PROC_DT)                     FROM COMP.CONF_QUAL_DTL)']),    #'DUPLICATED COLUMN' = TABLE.DUPLICATECOLUMN(SOURCE, 'ON_TRGT_CONF_IDVL_CDE', 'ON_TRGT_CONF_IDVL_CDE - COPY'),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'DUPLICATED COLUMN',{{'ON_TRGT_CONF_IDVL_CDE - COPY', 'TARGETCONFERENCE'}}),    #'REPLACED VALUE' = TABLE.REPLACEVALUE(#'RENAMED COLUMNS','NOT QUALIFIED','NOT ON TARGET',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE1' = TABLE.REPLACEVALUE(#'REPLACED VALUE','PINNACLE A','PINNACLE A',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE2' = TABLE.REPLACEVALUE(#'REPLACED VALUE1','PINNACLE B','PINNACLE B',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE3' = TABLE.REPLACEVALUE(#'REPLACED VALUE2','PINNACLE C','PINNACLE C',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE4' = TABLE.REPLACEVALUE(#'REPLACED VALUE3','SIERRA A','SIERRA A',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE5' = TABLE.REPLACEVALUE(#'REPLACED VALUE4','SIERRA B','SIERRA B',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE6' = TABLE.REPLACEVALUE(#'REPLACED VALUE5','SUMMIT A','SUMMIT A',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE7' = TABLE.REPLACEVALUE(#'REPLACED VALUE6','SUMMIT B','SUMMIT B',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE8' = TABLE.REPLACEVALUE(#'REPLACED VALUE7','SUMMIT C','SUMMIT C',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'REPLACED VALUE8', EACH TRUE)IN    #'FILTERED ROWS


SELECT DT_SK,         CAL_DAY_DT,         DTRB_PERF_RPT_WK_END_DT,         DTRB_PERF_RPT_WK_NBR,        DTRB_PERF_RPT_YR_NBR,        DTRB_PERF_RPT_YR_WK_NBR,        SRC_SYS_ID,         CRET_TMSP,         LST_UPDT_TMSP,         CRET_USER_ID,         LST_UPDT_USER_ID,         DTRB_PERF_RPT_DAY_TXT,         DTRB_PERF_RPT_MTH_TXT,         DTRB_PERF_RPT_QTR_TXT,         DTRB_PERF_RPT_WK_TXT,        DTRB_PERF_RPT_YR_TXT       FROM COMMON.DTRB_PERF_DATES       WHERE DTRB_PERF_RPT_YR_NBR IN (2020,2021, 2022, 2023, 2024)

SELECT DISTINCT 
	T1.ORZN_DEPT_CDE AS RFO_CDE, 
	T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, 
	(SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, 
	T3.ORZN_DEPT_DSCR, 
	T3.EMP_ID, 
	T3.EMP_STS_TYP_CDE, 
	T3.TRMN_DT, 
	T3.JOB_TYP_CDE, 
	T3.JOB_TYP_DSCR, 
	T3.EMP_NM, 
	CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END AS MARKET_LEADERS 
FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001002', '001003',/* '001004', '001005',*/ '001007') AND T2.EMP_ID NOT IN('TS62904','TS67022') ) T3 ON T1.ORZN_ZONE_CDE = T3.ORZN_ZONE_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' AND T1.ORZN_DEPT_CDE <> 'UKWN' ORDER BY T1.ORZN_ZONE_CDE; ']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH ([EMP_ID] <> 'TS18670    ' AND [EMP_ID] <> 'TS73067    ' AND [EMP_ID] <> 'TS73124    ' AND [EMP_ID] <> 'TS74827    ' AND [EMP_ID] <> 'TS77319    '))IN    #'FILTERED ROWS

SELECT 
	A.CUST_SK,        
	A.CUST_ID_NBR,        
	CASE WHEN XX.HOH_NAMEXX <> '' THEN XX.HOH_NAMEXX        ELSE A.CUST_LGAL_LST_NM||', '||A.CUST_LGAL_FRST_NM       END AS HOH_NAME,
	A.CUST_LGAL_LST_NM||', '||A.CUST_LGAL_FRST_NM AS CLIENT_NAME,       
	A.CUST_LGAL_FMT_NM,        
	A.CUST_LGAL_FRST_NM,        
	A.CUST_LGAL_LST_NM,        
	A.CUST_GRLN_TYP_CDE,        
	A.CUST_GRP_ID_NBR,        
	B.STP_STS_CDE,        
	CASE WHEN B.FUT_VLU_INDX_CDE = 'GOLD' THEN 'GOLD'             WHEN B.FUT_VLU_INDX_CDE = 'SILVR' THEN 'SILVER'             WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' THEN 'BRONZE'             WHEN B.FUT_VLU_INDX_CDE IN ('NA','UNK',' ' ) THEN 'UNKNOWN'        END AS FUTUREVALUE,        
	CASE WHEN A.MBR_TYP_CDE = 'BEN' THEN 'BENEFIT'             WHEN A.MBR_TYP_CDE = 'ASSOC' THEN 'ASSOCIATE'             WHEN A.MBR_TYP_CDE = 'JUV' THEN 'JUVENILE'             WHEN A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE <> 'NA' THEN 'NON-MEMBER'             WHEN A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE = 'NA' THEN 'PROSPECT'        END AS MBRTYPE,        CASE WHEN A.CUST_AGE < 0 THEN 'UKWN'            WHEN A.CUST_AGE < 18 THEN '<18'            WHEN A.CUST_AGE < 25 THEN '18-24'            WHEN A.CUST_AGE < 35 THEN '25-34'            WHEN A.CUST_AGE < 45 THEN '35-44'            WHEN A.CUST_AGE < 55 THEN '45-54'            WHEN A.CUST_AGE < 65 THEN '55-64'            WHEN A.CUST_AGE < 75 THEN '65-74'            WHEN A.CUST_AGE < 85 THEN '75-84'            WHEN A.CUST_AGE >= 85 THEN '85+'         ELSE ' '         END AS CUST_AGE_GRP,        CASE WHEN A.CUST_AGE < 18 THEN '<18'             WHEN A.CUST_AGE >= 18 THEN '18+'         ELSE ' '        END AS CLNT_AGE_TYP,        
	CASE WHEN B.FUT_VLU_INDX_CDE = 'GOLD' AND B.STP_STS_CDE = 'YES' THEN 'A'            WHEN B.FUT_VLU_INDX_CDE = 'SILVR' AND B.STP_STS_CDE = 'YES' THEN 'B'          WHEN B.FUT_VLU_INDX_CDE = 'GOLD' AND B.STP_STS_CDE <> 'YES' THEN 'B'          WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' AND B.STP_STS_CDE = 'YES' THEN 'C'          WHEN B.FUT_VLU_INDX_CDE = 'SILVR' AND B.STP_STS_CDE <> 'YES' THEN 'C'          WHEN B.FUT_VLU_INDX_CDE = 'BRNZE' AND B.STP_STS_CDE <> 'YES' THEN 'D'          ELSE ' '        END AS CLIENT_SERVICE_MODEL,        
	C.EMP_ORZN_ID   
FROM MEMBER.ITGR_IDVL_ALL_CURR_CFDL A LEFT JOIN        MEMBER.CNF_CUST_RESID_MAIL_GRP_DIM_CFDL B     ON A.CUST_GRP_SK=B.CUST_GRP_SK INNER JOIN         CLNT_ASMT_DM.CUST_REPR_ASGN_CURR_CFDL C       /* CLNT_ASMT_DM.CUST_SREP_RLTN_CURR_CFDL C */       /* CLNT_ASMT_DM.CUST_REPR_COMP_RLTN_CURR_CFDL C */     ON A.CUST_SK = C.ACRT_CUST_SK AND        A.MBR_TYP_CDE IN ('BEN','NON','ASSOC','JUV') AND        C.EMP_ORZN_ID LIKE 'TS%' LEFT JOIN      (SELECT X.CUST_GRP_ID_NBR,               X.CUST_LGAL_LST_NM||', '||X.CUST_LGAL_FRST_NM AS HOH_NAMEXX        
FROM MEMBER.ITGR_IDVL_ALL_CURR_CFDL X       WHERE X.CUST_GRLN_TYP_CDE IN ('PRIM','PRIMD')) AS XX    ON A.CUST_GRP_ID_NBR=XX.CUST_GRP_ID_NBR    WHERE (A.MBR_TYP_CDE IN ('BEN','ASSOC','JUV') OR         A.MBR_TYP_CDE = 'NON' AND A.CLAS_CTRC_RLTN_CDE <> 'NA') ']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH TRUE),    #'REPLACED VALUE' = TABLE.REPLACEVALUE(#'FILTERED ROWS','','UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'REPLACED VALUE1' = TABLE.REPLACEVALUE(#'REPLACED VALUE',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'APPENDED QUERY' = TABLE.COMBINE({#'REPLACED VALUE1', CLIENT_HHLD_NON_MGP}),    #'REMOVED DUPLICATES' = TABLE.DISTINCT(#'APPENDED QUERY', {'CUST_ID_NBR'}),    #'REPLACED VALUE2' = TABLE.REPLACEVALUE(#'REMOVED DUPLICATES','JUVENILE','YOUTH',REPLACER.REPLACETEXT,{'MBRTYPE'}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'REPLACED VALUE2', 'YEAR-TSID', EACH 'CY'&[EMP_ORZN_ID]),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM', {'CUST_ID_NBR'}, MGP_CLIENTS, {'CUST_ID_NBR'}, 'MGP_CLIENTS', JOINKIND.LEFTOUTER),    #'EXPANDED MGP_CLIENTS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'MGP_CLIENTS', {'ASOFDT', 'TSID_MGP', 'GOALS DOCUMENTED', 'GOALS DOCUMENTED TOTAL', 'GOAL INDICATOR'}, {'MGP_CLIENTS.ASOFDT', 'MGP_CLIENTS.TSID_MGP', 'MGP_CLIENTS.GOALS DOCUMENTED', 'MGP_CLIENTS.GOALS DOCUMENTED TOTAL', 'MGP_CLIENTS.GOAL INDICATOR'}),    #'REPLACED VALUE3' = TABLE.REPLACEVALUE(#'EXPANDED MGP_CLIENTS',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'MGP_CLIENTS.TSID_MGP'}),    #'REPLACED VALUE4' = TABLE.REPLACEVALUE(#'REPLACED VALUE3',NULL,0,REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOALS DOCUMENTED'}),    #'REPLACED VALUE5' = TABLE.REPLACEVALUE(#'REPLACED VALUE4',NULL,0,REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOALS DOCUMENTED TOTAL'}),    #'REPLACED VALUE6' = TABLE.REPLACEVALUE(#'REPLACED VALUE5',NULL,'N',REPLACER.REPLACEVALUE,{'MGP_CLIENTS.GOAL INDICATOR'})IN    #'REPLACED VALUE6

SELECT A.DT_SK,         A.CAL_DAY_DT,         A.DTRB_PERF_RPT_WK_END_DT,         A.DTRB_PERF_RPT_WK_NBR,        A.DTRB_PERF_RPT_YR_NBR,        A.DTRB_PERF_RPT_YR_WK_NBR,        A.SRC_SYS_ID,         A.CRET_TMSP,         A.LST_UPDT_TMSP,         A.CRET_USER_ID,         A.LST_UPDT_USER_ID,         A.DTRB_PERF_RPT_DAY_TXT,         A.DTRB_PERF_RPT_MTH_TXT,         A.DTRB_PERF_RPT_QTR_TXT,         A.DTRB_PERF_RPT_WK_TXT,        A.DTRB_PERF_RPT_YR_TXT,        B.CAL_WK_STRT_DT,        B.CAL_WK_END_DT,        B.CAL_MTH_STRT_DT,        B.CAL_MTH_END_DT,        B.HDAY_IND,        B.WKDY_IND   FROM COMMON.DTRB_PERF_DATES  AS A INNER JOIN        COMMON.IA_DATES_ITRL AS B     ON A.DT_SK=B.DT_SK  WHERE A.DTRB_PERF_RPT_YR_NBR IN (2021, 2022, 2023, 2024)      ']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'CAL_DAY_DT', TYPE DATE}, {'DTRB_PERF_RPT_WK_END_DT', TYPE DATE}, {'CAL_WK_STRT_DT', TYPE DATE}, {'CAL_WK_END_DT', TYPE DATE}}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'CHANGED TYPE', 'WEEK START DATE', EACH DATE.ADDDAYS([CAL_WK_STRT_DT],1)),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'ADDED CUSTOM', 'WEEK END DATE', EACH DATE.ADDDAYS([CAL_WK_END_DT],1)),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM1',{'CAL_WK_STRT_DT', 'CAL_WK_END_DT'}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS', 'CURRENT YEAR', EACH IF DATE.YEAR(DATETIME.LOCALNOW()) = [DTRB_PERF_RPT_YR_NBR] THEN 'CURRENT YEAR' ELSE [DTRB_PERF_RPT_YR_NBR]),    #'REMOVED COLUMNS1' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM2',{'SRC_SYS_ID', 'CRET_TMSP', 'LST_UPDT_TMSP', 'CRET_USER_ID', 'LST_UPDT_USER_ID'}),    #'ADDED CONDITIONAL COLUMN' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS1', 'BUSINESS DAY IND', EACH IF [HDAY_IND] = 'Y' THEN 0 ELSE IF [WKDY_IND] = 'Y' THEN 1 ELSE 0),    #'CHANGED TYPE1' = TABLE.TRANSFORMCOLUMNTYPES(#'ADDED CONDITIONAL COLUMN',{{'BUSINESS DAY IND', INT64.TYPE}})IN    #'CHANGED TYPE1

SELECT A.PREV_JOB_TYP_CDE, A.JOB_TYP_CDE, A.EFF_BEG_DT, A.EFF_END_DT, B.SRC_SYS_KEY_TXT, CONCAT(B.FRST_NM,' ',B.LST_NM) AS NAME, C.ORZN_ZONE_CDE, C.ORZN_DEPT_CDE FROM [ENTERPRISEDATAMART].[DM_01].[WORKER_STATUS_FCT] A LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION_DIM] B ON A.ORZN_DIM_SK=B.ORZN_DIM_SK LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] C ON (B.SRC_SYS_KEY_TXT=C.SALE_HIER_ID AND C.CURR_ROW_IND='Y')  WHERE ( A.PREV_JOB_TYP_CDE = '002003' OR A.PREV_JOB_TYP_CDE = '002011' OR A.PREV_JOB_TYP_CDE = '002012' OR A.PREV_JOB_TYP_CDE = '002030' OR A.PREV_JOB_TYP_CDE = '002031' OR A.PREV_JOB_TYP_CDE = '002032' ) AND A.JOB_TYP_CDE = '002022' GROUP BY A.PREV_JOB_TYP_CDE, A.JOB_TYP_CDE, A.EFF_BEG_DT, A.EFF_END_DT, B.SRC_SYS_KEY_TXT, C.ORZN_ZONE_CDE, C.ORZN_DEPT_CDE, CONCAT(B.FRST_NM,' ',B.LST_NM)']),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(SOURCE,{{'EFF_BEG_DT', 'TENURE DATE'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE DATE] > #DATETIME(2023, 12, 31, 0, 0, 0)),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'FILTERED ROWS', EACH ([EFF_END_DT] = #DATETIME(9999, 12, 31, 0, 0, 0))),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'FILTERED ROWS1',{{'SRC_SYS_KEY_TXT', 'TSID'}}),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS1', {'TSID'}, RR_IN_AND_OUT, {'TSID'}, 'RR_IN_AND_OUT', JOINKIND.LEFTOUTER),    #'EXPANDED RR_IN_AND_OUT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'RR_IN_AND_OUT', {'TSID'}, {'RR_IN_AND_OUT.TSID'}),    #'FILTERED ROWS2' = TABLE.SELECTROWS(#'EXPANDED RR_IN_AND_OUT', EACH ([RR_IN_AND_OUT.TSID] = NULL))IN    #'FILTERED ROWS2

SELECT A.BEN_CTRC_NBR,           A.EMP_ID,           A.SVC_AGMT_PLAN_YR,     A.SPLIT_CR_AGT_INDIC,    A.AGT_SPLT_PCT,    A.SVAG_ADVR_RLTN_BEG_DT,    A.SVAG_ADVR_RLTN_END_DT,    A.RCD_STS_CDE,    A.END_TMSP,    A.CRET_TMSP,    A.LST_UPDT_TMSP     FROM CONTRACT.SVAG_ADVR_RLTN A    ']),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(SOURCE,{'CRET_TMSP', 'LST_UPDT_TMSP'}),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'REMOVED COLUMNS',{{'SVAG_ADVR_RLTN_BEG_DT', TYPE DATE}, {'SVAG_ADVR_RLTN_END_DT', TYPE DATE}, {'END_TMSP', TYPE DATE}})IN    #'CHANGED TYPE

SELECT 
	B.SRC_SYS_KEY_TXT, 
	B.FRST_NM+' '+B.LST_NM AS EMP_NM, 
	C.ORZN_ZONE_CDE, 
	C.ORZN_DEPT_CDE, 
	A.JOB_TYP_CDE, 
	CAST(A.EFF_BEG_DT AS DATE) AS EFF_BEG_DT, 
	ADJ_SVC_DT 
FROM [DM_01].[WORKER_STATUS_FCT] A LEFT JOIN [DM_01].[ORGANIZATION_DIM] B ON A.ORZN_DIM_SK=B.ORZN_DIM_SK LEFT JOIN [DM_01].[SALE_HIER_DIM] C ON (B.SRC_SYS_KEY_TXT=C.SALE_HIER_ID AND C.EFF_END_DT='9999-12-31 00:00:00' AND C.CURR_ROW_IND='Y') WHERE ( --A.JOB_TYP_CDE='001004' OR A.JOB_TYP_CDE='001005' OR A.JOB_TYP_CDE='001011' OR A.JOB_TYP_CDE='001007' ) AND  B.CURR_ROW_IND='Y' AND A.EFF_END_DT='9999-12-31 00:00:00' AND EMP_STS_TYP_CDE='A'']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_DT', TYPE DATE}, {'ADJ_SVC_DT', TYPE DATE}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'CHANGED TYPE', EACH [JOB_TYP_CDE] <> '001004'),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'FILTERED ROWS',{'ADJ_SVC_DT'}),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'REMOVED COLUMNS', {'SRC_SYS_KEY_TXT'}, #'WORKDAY LEADER DIRECTORY', {'EMPLOYEE ID'}, 'WORKDAY LEADER DIRECTORY', JOINKIND.LEFTOUTER),    #'EXPANDED WORKDAY LEADER DIRECTORY' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'WORKDAY LEADER DIRECTORY', {'COST CENTER', 'START DATE IN CURRENT JOB OR HIRE DATE', 'WORKER'}, {'WORKDAY LEADER DIRECTORY.COST CENTER', 'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE', 'WORKDAY LEADER DIRECTORY.WORKER'}),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'EXPANDED WORKDAY LEADER DIRECTORY', 'FINAL NAME', EACH IF [WORKDAY LEADER DIRECTORY.WORKER] IS NULL THEN [EMP_NM] ELSE [WORKDAY LEADER DIRECTORY.WORKER]),    #'REMOVED COLUMNS2' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM1',{'EMP_NM', 'WORKDAY LEADER DIRECTORY.WORKER'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS2',{'SRC_SYS_KEY_TXT', 'FINAL NAME', 'ORZN_ZONE_CDE', 'ORZN_DEPT_CDE', 'JOB_TYP_CDE', 'EFF_BEG_DT', 'WORKDAY LEADER DIRECTORY.COST CENTER', 'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'FINAL NAME', 'EMP_NM'}}),    #'MERGED QUERIES1' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS2', {'SRC_SYS_KEY_TXT'}, #'MARKET MAPPING', {'ZONE_LEADER_TSID'}, 'MARKET MAPPING', JOINKIND.LEFTOUTER),    #'EXPANDED MARKET MAPPING' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES1', 'MARKET MAPPING', {'HIER_ID'}, {'MARKET MAPPING.HIER_ID'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'EXPANDED MARKET MAPPING',{{'ORZN_ZONE_CDE', 'WORKER_STS_FCT_MKT'}, {'MARKET MAPPING.HIER_ID', 'ORZN_ZONE_CDE'}, {'EFF_BEG_DT', 'WORKER_STS_FCT_DT'}, {'WORKDAY LEADER DIRECTORY.START DATE IN CURRENT JOB OR HIRE DATE', 'EFF_BEG_DT'}}),    #'MERGED QUERIES2' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS', {'SRC_SYS_KEY_TXT'}, #'0630 LEADER BACKUP', {'EMPLOYEE ID'}, '0630 LEADER BACKUP', JOINKIND.LEFTOUTER),    #'EXPANDED 0630 LEADER BACKUP' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES2', '0630 LEADER BACKUP', {'EMPLOYEE ID', 'START DATE IN CURRENT JOB OR HIRE DATE'}, {'0630 LEADER BACKUP.EMPLOYEE ID', '0630 LEADER BACKUP.START DATE IN CURRENT JOB OR HIRE DATE'}),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'EXPANDED 0630 LEADER BACKUP', EACH ([0630 LEADER BACKUP.EMPLOYEE ID] <> NULL))IN    #'FILTERED ROWS1

SELECT PERS_DIM.[SOURCE SYSTEM KEY TEXT] AS THRIVENTID,    -- APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],       APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],       APPT_FCT.[PERSON DIMENSION SURROGATE KEY],    -- APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION KEY],    -- APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY],       SUM(APPT_FCT.[APPOINTMENT OCCURS]) [APPT_OCCURS],       MAX(APPT_FCT.[PERSON OCCURS]) [PERSON OCCURS],       MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],       APPT_DIM.[APPOINTMENT DATE],       APPT_DIM.[APPOINTMENT TYPE DESCRIPTION] [APPOINTMENT TYPE CODE],       DATE_DIM.[CALENDAR YEAR NAME],       ORG_DIM.[SOURCE SYSTEM KEY TEXT] [EMP_ID],     --SALE_HIER_DIM.ORZN_DEPT_CDE [RFO ZONE NAME],     --SALE_HIER_DIM.ORZN_ZONE_CDE [RFO ZONE IDENTIFIER],       ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],       (SELECT MAX(A.[LIFE SEGMENT VALUE DESCRIPTION])          FROM ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] A         WHERE APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=A.[PERSON DIMENSION SURROGATE KEY]         AND A.[CURRENT ROW INDICATOR] = 'Y') AS [LIFE SEGMENT VALUE DESCRIPTION]     FROM ENTERPRISEDATAMART.DM_01.[APPOINTMENT COMBINE FACT] APPT_FCT LEFT JOIN         ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] AS PERS_DIM     ON (APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=PERS_DIM.[PERSON DIMENSION SURROGATE KEY] AND         APPT_FCT.[PERSON DIMENSION VERSION NUMBER] = PERS_DIM.[PERSON DIMENSION VERSION NUMBER]) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[MEMBERSHIP TYPE DIMENSION] MBR_DIM     ON (APPT_FCT.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]=MBR_DIM.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[APPOINTMENT DIMENSION] APPT_DIM     ON (APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY]=APPT_DIM.[APPOINTMENT DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM     ON (APPT_DIM.[APPOINTMENT DATE]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM     ON ((APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND         ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= APPT_DIM.[APPOINTMENT DATE]) AND (APPT_DIM.[APPOINTMENT DATE] <= ORG_DIM.[EFFECTIVE END DATE]))) LEFT JOIN           ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM     ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND  (SALE_HIER_DIM.EFF_BEG_DT<=APPT_DIM.[APPOINTMENT DATE]) AND  (APPT_DIM.[APPOINTMENT DATE]<= SALE_HIER_DIM.EFF_END_DT) AND    SALE_HIER_DIM.CURR_ROW_IND = 'Y'))  WHERE APPT_DIM.[CURRENT ROW INDICATOR] = 'Y'   AND APPT_DIM.[APPOINTMENT CREATE DATE OVER 14 DAYS] = 'N'   AND APPT_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0   AND APPT_FCT.[APPOINTMENT STATUS NAME] <> 'DECLINED'   AND APPT_DIM.[APPOINTMENT TYPE CODE] <> 'UNK'   AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0165','0190','0240','0283','0291','0361','0365', '0383','0384','0410','0435','0475','0496','0525','0529','0810')  AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '002030', '002031', '002032', '003100', '003500')   OR  ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))    AND APPT_DIM.[EVENT RESULT DESCRIPTION] NOT IN ('NO SHOW','CANCELLED')   AND DATE_DIM.[CALENDAR YEAR NAME] IN ('2022','2023','2024') GROUP BY --APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],   APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],   APPT_FCT.[PERSON DIMENSION SURROGATE KEY],   MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],   APPT_DIM.[APPOINTMENT DATE],   APPT_DIM.[APPOINTMENT TYPE DESCRIPTION],   DATE_DIM.[CALENDAR YEAR NAME], --SALE_HIER_DIM.ORZN_DEPT_CDE, --SALE_HIER_DIM.ORZN_ZONE_CDE,   ORG_DIM.[SOURCE SYSTEM KEY TEXT],   ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],   PERS_DIM.[SOURCE SYSTEM KEY TEXT]  --APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION KEY], --APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]    HAVING  SUM(APPT_FCT.[APPOINTMENT OCCURS])>0']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'APPOINTMENT DATE', TYPE DATE}})IN    #'CHANGED TYPE

SELECT COMP_PYEE_ID,        CONF_YR,        NEW_MONY_CONF_CR_AMT,        NEW_MONY_AFA_CONF_CR_AMT,        NEW_MONY_TOT_CONF_CR_AMT,        ON_TRGT_CONF_IDVL_CDE,        CONF_QUAL_IDVL_TYP_CDE,        EXTR_DAY_IDVL_IND    FROM COMP.CONF_QUAL_DTL  WHERE PROC_DT = (SELECT MAX(PROC_DT)                     FROM COMP.CONF_QUAL_DTL)']),    #'DUPLICATED COLUMN' = TABLE.DUPLICATECOLUMN(SOURCE, 'ON_TRGT_CONF_IDVL_CDE', 'ON_TRGT_CONF_IDVL_CDE - COPY'),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'DUPLICATED COLUMN',{{'ON_TRGT_CONF_IDVL_CDE - COPY', 'TARGETCONFERENCE'}}),    #'REPLACED VALUE' = TABLE.REPLACEVALUE(#'RENAMED COLUMNS','NOT QUALIFIED','NOT ON TARGET',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE1' = TABLE.REPLACEVALUE(#'REPLACED VALUE','PINNACLE A','PINNACLE A',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE2' = TABLE.REPLACEVALUE(#'REPLACED VALUE1','PINNACLE B','PINNACLE B',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE3' = TABLE.REPLACEVALUE(#'REPLACED VALUE2','PINNACLE C','PINNACLE C',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE4' = TABLE.REPLACEVALUE(#'REPLACED VALUE3','SIERRA A','SIERRA A',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE5' = TABLE.REPLACEVALUE(#'REPLACED VALUE4','SIERRA B','SIERRA B',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE6' = TABLE.REPLACEVALUE(#'REPLACED VALUE5','SUMMIT A','SUMMIT A',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE7' = TABLE.REPLACEVALUE(#'REPLACED VALUE6','SUMMIT B','SUMMIT B',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'REPLACED VALUE8' = TABLE.REPLACEVALUE(#'REPLACED VALUE7','SUMMIT C','SUMMIT C',REPLACER.REPLACETEXT,{'TARGETCONFERENCE'}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'REPLACED VALUE8', EACH TRUE)IN    #'FILTERED ROWS

SELECT DT_SK,         CAL_DAY_DT,         DTRB_PERF_RPT_WK_END_DT,         DTRB_PERF_RPT_WK_NBR,        DTRB_PERF_RPT_YR_NBR,        DTRB_PERF_RPT_YR_WK_NBR,        SRC_SYS_ID,         CRET_TMSP,         LST_UPDT_TMSP,         CRET_USER_ID,         LST_UPDT_USER_ID,         DTRB_PERF_RPT_DAY_TXT,         DTRB_PERF_RPT_MTH_TXT,         DTRB_PERF_RPT_QTR_TXT,         DTRB_PERF_RPT_WK_TXT,        DTRB_PERF_RPT_YR_TXT       FROM COMMON.DTRB_PERF_DATES       WHERE DTRB_PERF_RPT_YR_NBR IN (2020,2021, 2022, 2023, 2024)

SELECT DISTINCT T1.ORZN_DEPT_CDE AS RFO_CDE, T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, (SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, T3.ORZN_DEPT_DSCR, T3.EMP_ID, T3.EMP_STS_TYP_CDE, T3.TRMN_DT, T3.JOB_TYP_CDE, T3.JOB_TYP_DSCR, T3.EMP_NM, CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END AS MARKET_LEADERS FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001002', '001003',/* '001004', '001005',*/ '001007') AND T2.EMP_ID NOT IN('TS62904','TS67022') ) T3 ON T1.ORZN_ZONE_CDE = T3.ORZN_ZONE_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' AND T1.ORZN_DEPT_CDE <> 'UKWN' ORDER BY T1.ORZN_ZONE_CDE; ']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH ([EMP_ID] <> 'TS18670    ' AND [EMP_ID] <> 'TS73067    ' AND [EMP_ID] <> 'TS73124    ' AND [EMP_ID] <> 'TS74827    ' AND [EMP_ID] <> 'TS77319    '))IN    #'FILTERED ROWS

SELECT DISTINCT        [DEPARTMENT IDENTIFIER] RFO_CODE       ,[DEPARTMENT NAME] RFO_NM       ,CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',[DEPARTMENT NAME]) AS NM       FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0435','0115', '0190',                  '0361', '0384','0291', '0525','0001','0383','0716','0714')         AND [CURRENT ROW INDICATOR] = 'Y'         AND [EFFECTIVE BEGIN DATE] > '1/1/2019'         AND [EFFECTIVE END DATE] = '12/31/9999'

SELECT DISTINCT        [DEPARTMENT IDENTIFIER] RFO_CODE       ,[DEPARTMENT NAME] RFO_NM       ,CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',[DEPARTMENT NAME]) AS NM       FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0365', '0435', '0496', '0810','0115', '0165', '0190', '0240',                  '0361', '0384','0291', '0410', '0475', '0525', '0529','0001','0383')         AND [CURRENT ROW INDICATOR] = 'Y'         AND [EFFECTIVE BEGIN DATE] > '1/1/2019'']),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(SOURCE,{{'NM', 'ADVISOR GROUP'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH ([RFO_CODE] = '0115' OR [RFO_CODE] = '0190' OR [RFO_CODE] = '0283' OR [RFO_CODE] = '0291' OR [RFO_CODE] = '0361' OR [RFO_CODE] = '0383' OR [RFO_CODE] = '0384' OR [RFO_CODE] = '0435' OR [RFO_CODE] = '0525')),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'FILTERED ROWS', EACH NOT TEXT.CONTAINS([RFO_NM], 'REGION'))IN    #'FILTERED ROWS1

SELECT DISTINCT   SHD.[ORGANIZATION ZONE CODE],  SHD.[ORGANIZATION SUB DEPARTMENT CODE] AS MVP,  (LEFT(SHD.[ORGANIZATION ZONE CODE],4)) AS RFO,  (SUBSTRING(SHD.[ORGANIZATION ZONE CODE],6,2)) AS ZONE FROM ENTERPRISEDATAMART.[DM_01].[SALE HIERARCHY DIMENSION] SHD WHERE SHD.[ORGANIZATION DEPARTMENT CODE] IN ('0001','0115','0190','0283','0291','0361','0383','0384','0435','0525','0716','0714') ORDER BY SHD.[ORGANIZATION ZONE CODE]']),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(SOURCE,{{'ZONE', 'MARKET'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH ([MVP] <> '0410-00' AND [MVP] <> '0529-00' AND [MVP] <> 'UKWN'))IN    #'FILTERED ROWS

SELECT B.SRC_SYS_KEY_TXT, CONCAT(B.FRST_NM,' ',B.LST_NM) AS NAME, B.JOB_TYP_CDE FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION_DIM] B WHERE ( B.JOB_TYP_CDE = '001004' OR B.JOB_TYP_CDE = '001005' OR B.JOB_TYP_CDE = '001007' ) AND ( EFF_BEG_DT>=DATEFROMPARTS(2023,10,1) OR EFF_END_DT>=DATEFROMPARTS(2023,10,1) ) GROUP BY B.SRC_SYS_KEY_TXT, CONCAT(B.FRST_NM,' ',B.LST_NM), B.JOB_TYP_CDE']),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(SOURCE, {'SRC_SYS_KEY_TXT'}, #'WORKDAY DIR - SR MKT DIR', {'EMPLOYEE ID'}, 'WORKDAY DIR - SR MKT DIR', JOINKIND.LEFTOUTER),    #'EXPANDED WORKDAY DIR - SR MKT DIR' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'WORKDAY DIR - SR MKT DIR', {'EMPLOYEE ID'}, {'WORKDAY DIR - SR MKT DIR.EMPLOYEE ID'}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'EXPANDED WORKDAY DIR - SR MKT DIR', 'INDICATOR', EACH IF [#'WORKDAY DIR - SR MKT DIR.EMPLOYEE ID'] IS NULL THEN (IF [JOB_TYP_CDE]<>'001004' THEN 'Y' ELSE 'N') ELSE 'Y'),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'ADDED CUSTOM', EACH ([INDICATOR] = 'Y')),    #'GROUPED ROWS' = TABLE.GROUP(#'FILTERED ROWS', {'SRC_SYS_KEY_TXT', 'NAME'}, {{'COUNT', EACH TABLE.ROWCOUNT(_), INT64.TYPE}, {'JOB CODE', EACH LIST.MIN([JOB_TYP_CDE]), TYPE TEXT}}),    #'MERGED QUERIES1' = TABLE.NESTEDJOIN(#'GROUPED ROWS', {'SRC_SYS_KEY_TXT'}, #'TSID - WORKDAY NAMES', {'EMPLOYEE ID'}, 'TSID - WORKDAY NAMES', JOINKIND.LEFTOUTER),    #'EXPANDED TSID - WORKDAY NAMES' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES1', 'TSID - WORKDAY NAMES', {'WORKDAY NAME'}, {'TSID - WORKDAY NAMES.WORKDAY NAME'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'EXPANDED TSID - WORKDAY NAMES',{{'TSID - WORKDAY NAMES.WORKDAY NAME', 'WORKDAY NAME'}, {'SRC_SYS_KEY_TXT', 'EMPLOYEE ID'}})IN    #'RENAMED COLUMNS

SELECT DISTINCT T1.SALE_HIER_ID, T1.EFF_BEG_TMSP, T1.EFF_END_TMSP, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001004', '001005', '001007', '001011')']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_TMSP', TYPE DATE}, {'EFF_END_TMSP', TYPE DATE}})IN    #'CHANGED TYPE

SELECT A.EMP_ID,        B.TEAM_ID,        B.TEAM_NM,         A.EFF_DT   FROM HUMAN_RESOURCES.EMP_TEAM_ORZN_RLTN_CURR_VW A INNER JOIN         HUMAN_RESOURCES.TEAM_ORZN_CURR_VW B      ON (A.TEAM_ID_SK = B.TEAM_ID_SK)  WHERE B.EFF_STS_CDE = 'A'     AND A.TEAM_MBR_ACTN_CDE <> 'DROP'     AND B.TEAM_PRPS_CDE NOT IN ('COAC','ENSB')    AND A.EFF_DT=(SELECT MAX(AA.EFF_DT)                    FROM HUMAN_RESOURCES.EMP_TEAM_ORZN_RLTN_CURR_VW AA INNER JOIN                          HUMAN_RESOURCES.TEAM_ORZN_CURR_VW BB                       ON (AA.TEAM_ID_SK = BB.TEAM_ID_SK AND A.EMP_ID=AA.EMP_ID)                      WHERE BB.EFF_STS_CDE = 'A'                      AND AA.TEAM_MBR_ACTN_CDE <> 'DROP'                      AND BB.TEAM_PRPS_CDE NOT IN ('COAC','ENSB'))     ORDER BY A.EMP_ID        ']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_DT', TYPE DATE}}),    #'CAPITALIZED EACH WORD' = TABLE.TRANSFORMCOLUMNS(#'CHANGED TYPE',{{'TEAM_NM', TEXT.PROPER, TYPE TEXT}})IN    #'CAPITALIZED EACH WORD

SELECT D.CUST_SK,        A.CUST_ID_NBR,        D.CUST_LGAL_FMT_NM,        D.CUST_GRP_ID_NBR,        E.STP_STS_CDE,        CASE WHEN E.FUT_VLU_INDX_CDE = 'GOLD' THEN 'GOLD'             WHEN E.FUT_VLU_INDX_CDE = 'SILVR' THEN 'SILVER'             WHEN E.FUT_VLU_INDX_CDE = 'BRNZE' THEN 'BRONZE'             WHEN E.FUT_VLU_INDX_CDE IN ('NA','UNK',' ' ) THEN 'UNKNOWN'        END AS FUTUREVALUE,        CASE WHEN A.MBR_TYP_CDE = 'BEN' THEN 'BENEFIT'      WHEN A.MBR_TYP_CDE = 'ASSOC' THEN 'ASSOCIATE'      WHEN A.MBR_TYP_CDE = 'JUV' THEN 'JUVENILE'      WHEN A.MBR_TYP_CDE = 'NON' AND D.CLAS_CUST_RPT_CDE = 'NAOWN' THEN 'NON-MEMBER'      WHEN A.MBR_TYP_CDE = 'NON' AND D.CLAS_CUST_RPT_CDE <> 'NAOWN' THEN 'PROSPECT'        END AS MBRTYPE,        B.EMP_ORZN_ID   FROM MEMBER.CUST_MBR_INFO_CURR_CFDL A INNER JOIN        MEMBER.ITGR_IDVL_ALL_CURR_CFDL D     ON A.ACRT_CUST_SK=D.CUST_SK LEFT JOIN        MEMBER.CNF_CUST_RESID_MAIL_GRP_DIM_CFDL E     ON D.CUST_GRP_SK=E.CUST_GRP_SK INNER JOIN         CLNT_ASMT_DM.CUST_REPR_COMP_RLTN_CURR_CFDL B       -- CLNT_ASMT_DM.CUST_REPR_ASGN_CURR_CFDL B     ON A.ACRT_CUST_SK = B.ACRT_CUST_SK AND        A.MBR_TYP_CDE IN ('BEN','NON','ASSOC','JUV') AND        B.EMP_ORZN_ID LIKE 'TS%' INNER JOIN        MEMBER.CNF_CUSTOMER_DIM_CFDL C     ON B.CUST_ID_NBR = C.CUST_ID_NBR AND        C.CUST_IDVL_DECD_IND = 'N'  WHERE (A.MBR_TYP_CDE IN ('BEN','ASSOC','JUV') OR         A.MBR_TYP_CDE = 'NON' AND D.CLAS_CUST_RPT_CDE = 'NAOWN') ']),    #'REPLACED VALUE' = TABLE.REPLACEVALUE(SOURCE,'','UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'REPLACED VALUE', EACH TRUE),    #'REPLACED VALUE1' = TABLE.REPLACEVALUE(#'FILTERED ROWS',NULL,'UNKNOWN',REPLACER.REPLACEVALUE,{'FUTUREVALUE'}),    #'FILTERED ROWS1' = TABLE.SELECTROWS(#'REPLACED VALUE1', EACH TRUE),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'FILTERED ROWS1', 'CLIENT SERVICE MODEL', EACH IF [FUTUREVALUE] = 'GOLD' AND [STP_STS_CDE] = 'YES' THEN 'A'ELSE IF [FUTUREVALUE] = 'SILVER' AND [STP_STS_CDE] = 'YES' THEN 'B'ELSE IF [FUTUREVALUE] = 'GOLD' AND [STP_STS_CDE] <> 'YES' THEN 'B'ELSE IF [FUTUREVALUE] = 'BRONZE' AND [STP_STS_CDE] = 'YES' THEN 'C'ELSE IF [FUTUREVALUE] = 'SILVER' AND [STP_STS_CDE] <> 'YES' THEN 'C'ELSE IF [FUTUREVALUE] = 'BRONZE' AND [STP_STS_CDE] <> 'YES' THEN 'D'ELSE ' ')IN    #'ADDED CUSTOM

SELECT  
	APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],  
	APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],  
	APPT_FCT.[PERSON DIMENSION SURROGATE KEY],  
	SUM(APPT_FCT.[APPOINTMENT OCCURS]) [APPT_OCCURS],  
	MBR_DIM.[MEMBERSHIP TYPE CODE],  
	MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],  
	APPT_DIM.[APPOINTMENT DATE],  
	APPT_DIM.[APPOINTMENT TYPE CODE],  
	CASE WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('GATHER DATA') THEN 'DISCOVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('TAKE ACTION') THEN 'DELIVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] NOT IN ('GATHER DATA','TAKE ACTION') THEN APPT_DIM.[APPOINTMENT TYPE CODE]        END AS [APPOINTMENT TYPE CODE],        
	CASE WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('GATHER DATA') THEN 'DISCOVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('TAKE ACTION') THEN 'DELIVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] NOT IN ('GATHER DATA','TAKE ACTION') THEN APPT_DIM.[APPOINTMENT TYPE DESCRIPTION]        END AS [APPOINTMENT TYPE DESCRIPTION],   
	CASE WHEN APPT_DIM.[FIELD USER COUNT] <> 0 AND APPT_DIM.[APPOINTMENT TYPE CODE] IN ('CONNECT','GATHER DATA','TAKE ACTION','STRATEGY CALL/MEETING','REVIEW','SERVICE','DISCOVER','DELIVER')    THEN 1    ELSE 0    END [JFW_IND],  DATE_DIM.[CALENDAR YEAR NAME],  DATE_DIM.[CALENDAR YEAR WEEK NUMBER],  DATE_DIM.[CALENDAR WEEK END DATE],  (LEFT(SALE_HIER_DIM.[ORZN_ZONE_CDE],4)) AS RFO,  
	SALE_HIER_DIM.ORZN_ZONE_CDE [MARKET],         
	SALE_HIER_DIM.ORZN_SUB_DEPT_CDE [MVP GROUP],  
	APPT_ORG_HIST.[SOURCE SYSTEM KEY TEXT] [TSID],  
	APPT_ORG_HIST.[ADJUSTED SERVICE DATE],  
	APPT_ORG_HIST.[EMPLOYEE STATUS TYPE DESCRIPTION],  
	APPT_ORG_HIST.[FINANCIAL PROFESSIONAL TENURE] [HISTORICAL FP TENURE],  
	APPT_ORG_HIST.[FINANCIAL PROFESSIONAL TENURE GROUP] [HISTORICAL FP TENURE GROUP],  
	APPT_ORG_HIST.[JOB TYPE CODE] [HISTORICAL JOB TYPE CODE],  
	APPT_ORG_HIST.[JOB TYPE DESCRIPTION] [HISTORICAL JOB TYPE DESCRIPTION]  
FROM ENTERPRISEDATAMART.DM_01.[APPOINTMENT COMBINE FACT] APPT_FCT LEFT JOIN ENTERPRISEDATAMART.DM_01.[MEMBERSHIP TYPE DIMENSION] MBR_DIM  ON (APPT_FCT.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]=MBR_DIM.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]) LEFT JOIN ENTERPRISEDATAMART.DM_01.[APPOINTMENT DIMENSION] APPT_DIM  ON (APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY]=APPT_DIM.[APPOINTMENT DIMENSION SURROGATE KEY]) LEFT JOIN ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM  ON (APPT_DIM.[APPOINTMENT DATE]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] APPT_ORG_HIST     ON ((APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=APPT_ORG_HIST.[ORGANIZATION DIMENSION SURROGATE KEY])     AND (APPT_DIM.[APPOINTMENT DATE] BETWEEN APPT_ORG_HIST.[EFFECTIVE BEGIN DATE] AND APPT_ORG_HIST.[EFFECTIVE END DATE])) LEFT JOIN ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM  ON ((SALE_HIER_DIM.EFF_BEG_DT<=APPT_DIM.[APPOINTMENT DATE])   AND (APPT_DIM.[APPOINTMENT DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))   AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'  AND APPT_ORG_HIST.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])  WHERE   APPT_DIM.[CURRENT ROW INDICATOR] = 'Y'  AND APPT_DIM.[APPOINTMENT CREATE DATE OVER 14 DAYS] = 'N'  AND APPT_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0  AND APPT_FCT.[APPOINTMENT STATUS NAME] <> 'DECLINED'  AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0190','0283','0291','0361','0384','0435','0525','0383')  AND APPT_ORG_HIST.[JOB TYPE CODE] IN ('001000','001001','001002','001003','001004','001005','001006','001007','001011','001505','002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '002030', '002031', '002032', '003100', '003500')  AND APPT_DIM.[EVENT RESULT DESCRIPTION] NOT IN ('NO SHOW','CANCELLED')  AND DATE_DIM.[CALENDAR YEAR NAME] >= YEAR(GETDATE()-10)-2 AND DATE_DIM.[CALENDAR YEAR NAME] <=YEAR(GETDATE()-10)         AND APPT_ORG_HIST.[SOURCE SYSTEM KEY TEXT] NOT IN ('TS06033', 'TS13320', 'TS21623', 'TS22934', 'TS32012', 'TS34394', 'TS34662', 'TS67185')         AND APPT_DIM.[APPOINTMENT TYPE CODE] <> 'UNK'     GROUP BY  APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],  APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],  APPT_FCT.[PERSON DIMENSION SURROGATE KEY],  MBR_DIM.[MEMBERSHIP TYPE CODE],  MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],  APPT_DIM.[APPOINTMENT DATE],  APPT_DIM.[APPOINTMENT TYPE CODE],  APPT_DIM.[APPOINTMENT TYPE DESCRIPTION],  APPT_DIM.[FIELD USER COUNT],  DATE_DIM.[CALENDAR YEAR NAME],  DATE_DIM.[CALENDAR YEAR WEEK NUMBER],  DATE_DIM.[CALENDAR WEEK END DATE],  SALE_HIER_DIM.ORZN_DEPT_CDE,  SALE_HIER_DIM.ORZN_ZONE_CDE,         SALE_HIER_DIM.ORZN_SUB_DEPT_CDE,  APPT_ORG_HIST.[SOURCE SYSTEM KEY TEXT],  APPT_ORG_HIST.[ADJUSTED SERVICE DATE],  APPT_ORG_HIST.[EMPLOYEE STATUS TYPE DESCRIPTION],  APPT_ORG_HIST.[FINANCIAL PROFESSIONAL TENURE],  APPT_ORG_HIST.[FINANCIAL PROFESSIONAL TENURE GROUP],  APPT_ORG_HIST.[DEPARTMENT IDENTIFIER],  APPT_ORG_HIST.[RFO ZONE IDENTIFIER],  APPT_ORG_HIST.[JOB TYPE CODE],  APPT_ORG_HIST.[JOB TYPE DESCRIPTION]  HAVING  SUM(APPT_FCT.[APPOINTMENT OCCURS])>0']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'TSID_MARKET_APPT', EACH [TSID]&'-'&NUMBER.TOTEXT([APPOINTMENT DIMENSION SURROGATE KEY])),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'ADDED CUSTOM',{{'APPOINTMENT DATE', TYPE DATE}, {'CALENDAR WEEK END DATE', TYPE DATE}, {'ADJUSTED SERVICE DATE', TYPE DATE}}),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'CHANGED TYPE',{'PERSON DIMENSION SURROGATE KEY', 'APPT_OCCURS', 'MEMBERSHIP TYPE DESCRIPTION', 'APPOINTMENT TYPE DESCRIPTION', 'CALENDAR YEAR NAME', 'CALENDAR YEAR WEEK NUMBER', 'CALENDAR WEEK END DATE', 'RFO', 'HISTORICAL FP TENURE', 'HISTORICAL FP TENURE GROUP', 'HISTORICAL JOB TYPE DESCRIPTION'})IN    #'REMOVED COLUMNS

(SELECT  SALE_HIER_DIM.[SALE_HIER_DIM_SK], SALE_HIER_DIM.[SALE_HIER_ID], SALE_HIER_DIM.[EFF_BEG_DT], SALE_HIER_DIM.[EFF_END_DT], SALE_HIER_DIM.[CURR_ROW_IND], SALE_HIER_DIM.[ORZN_ZONE_CDE], SALE_HIER_DIM.[ORZN_ZONE_DSCR], SALE_HIER_DIM.[ORZN_DIV_CDE], SALE_HIER_DIM.[ORZN_SUB_DEPT_CDE], ORG_DIM.[EMPLOYEE STATUS TYPE DESCRIPTION], ORG_DIM.[JOB TYPE CODE], CONCAT('CY',SALE_HIER_DIM.[SALE_HIER_ID]) AS 'YEAR-TSID'   FROM ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM LEFT JOIN   ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND (SALE_HIER_DIM.EFF_BEG_DT<=CURRENT_TIMESTAMP) AND (CURRENT_TIMESTAMP<= SALE_HIER_DIM.EFF_END_DT) AND   SALE_HIER_DIM.CURR_ROW_IND = 'Y'))      WHERE SALE_HIER_DIM.CURR_ROW_IND = 'Y' AND  (SALE_HIER_DIM.EFF_BEG_DT<=CURRENT_TIMESTAMP) AND (CURRENT_TIMESTAMP<= SALE_HIER_DIM.EFF_END_DT) AND ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= CURRENT_TIMESTAMP) AND  (CURRENT_TIMESTAMP <= ORG_DIM.[EFFECTIVE END DATE]))) UNION ALL (SELECT  SALE_HIER_DIM.[SALE_HIER_DIM_SK], SALE_HIER_DIM.[SALE_HIER_ID], SALE_HIER_DIM.[EFF_BEG_DT], SALE_HIER_DIM.[EFF_END_DT], SALE_HIER_DIM.[CURR_ROW_IND], SALE_HIER_DIM.[ORZN_ZONE_CDE], SALE_HIER_DIM.[ORZN_ZONE_DSCR], SALE_HIER_DIM.[ORZN_DIV_CDE], SALE_HIER_DIM.[ORZN_SUB_DEPT_CDE], ORG_DIM.[EMPLOYEE STATUS TYPE DESCRIPTION], ORG_DIM.[JOB TYPE CODE], CONCAT('PY',SALE_HIER_DIM.[SALE_HIER_ID]) AS 'YEAR-TSID'   FROM ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM LEFT JOIN   ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND (SALE_HIER_DIM.EFF_BEG_DT<=DATEADD(YEAR,-1,CURRENT_TIMESTAMP)) AND (DATEADD(YEAR,-1,CURRENT_TIMESTAMP)<= SALE_HIER_DIM.EFF_END_DT) AND   SALE_HIER_DIM.CURR_ROW_IND = 'Y'))      WHERE SALE_HIER_DIM.CURR_ROW_IND = 'Y' AND  (SALE_HIER_DIM.EFF_BEG_DT<=DATEADD(YEAR,-1,CAST(CURRENT_TIMESTAMP AS DATE))) AND (DATEADD(YEAR,-1,CAST(CURRENT_TIMESTAMP AS DATE))<= SALE_HIER_DIM.EFF_END_DT) AND ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= DATEADD(YEAR,-1,CAST(CURRENT_TIMESTAMP AS DATE))) AND  (DATEADD(YEAR,-1,CAST(CURRENT_TIMESTAMP AS DATE)) <= ORG_DIM.[EFFECTIVE END DATE])))']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_DT', TYPE DATE}, {'EFF_END_DT', TYPE DATE}})IN    #'CHANGED TYPE

SELECT DISTINCT T1.ORZN_DEPT_CDE AS RFO,            /* TAG_MVP_MKT */           T1.ORZN_ZONE_CDE AS TAG_MVP_MKT,/* MVP_ID */       SUBSTRING(T1.ORZN_ZONE_CDE,1,7) AS MVP_ID,/* ZONE_ID */           RIGHT(RTRIM(T1.ORZN_ZONE_CDE),2) AS ZONE_ID,          T1.SALE_HIER_ID AS TSID,            /* STRT_DT */           T1.EFF_BEG_TMSP,           /* END_DATE */           (CASE WHEN T1.EFF_END_TMSP IS NULL               THEN '12-31-9999'                ELSE T1.EFF_END_TMSP-1           END)AS EFF_END_TMSP       FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1       WHERE SUBSTRING(T1.SALE_HIER_ID,1,2) IN ('DP','TS')          AND T1.CURR_ROW_IND = 'Y'          AND ( T1.EFF_END_TMSP > T1.EFF_BEG_TMSP OR T1.EFF_END_TMSP IS NULL )']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_TMSP', TYPE DATE}, {'EFF_END_TMSP', TYPE DATE}}),    #'DUPLICATED COLUMN' = TABLE.DUPLICATECOLUMN(#'CHANGED TYPE', 'TSID', 'TSID - COPY'),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'DUPLICATED COLUMN',{{'TSID - COPY', 'TSID_TRIMMED'}}),    #'TRIMMED TEXT' = TABLE.TRANSFORMCOLUMNS(#'RENAMED COLUMNS',{{'TSID_TRIMMED', TEXT.TRIM, TYPE TEXT}})IN    #'TRIMMED TEXT

//TODO: EFF_BEG_TMSP 
SELECT DISTINCT T1.ORZN_DEPT_CDE AS RFO,            /* TAG_MVP_MKT */           T1.ORZN_ZONE_CDE AS TAG_MVP_MKT,/* MVP_ID */       SUBSTRING(T1.ORZN_ZONE_CDE,1,7) AS MVP_ID,/* ZONE_ID */           RIGHT(RTRIM(T1.ORZN_ZONE_CDE),2) AS ZONE_ID,          T1.SALE_HIER_ID AS TSID,            /* STRT_DT */           T1.EFF_BEG_TMSP,           /* END_DATE */           (CASE WHEN T1.EFF_END_TMSP IS NULL               THEN '12-31-9999'                ELSE T1.EFF_END_TMSP-1           END)AS EFF_END_TMSP       FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1       WHERE SUBSTRING(T1.SALE_HIER_ID,1,2) IN ('DP','TS')          AND T1.CURR_ROW_IND = 'Y'          AND ( T1.EFF_END_TMSP > T1.EFF_BEG_TMSP OR T1.EFF_END_TMSP IS NULL )']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'EFF_BEG_TMSP', TYPE DATE}, {'EFF_END_TMSP', TYPE DATE}}),    #'DUPLICATED COLUMN' = TABLE.DUPLICATECOLUMN(#'CHANGED TYPE', 'TSID', 'TSID - COPY'),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'DUPLICATED COLUMN',{{'TSID - COPY', 'TSID_TRIMMED'}}),    #'TRIMMED TEXT' = TABLE.TRANSFORMCOLUMNS(#'RENAMED COLUMNS',{{'TSID_TRIMMED', TEXT.TRIM, TYPE TEXT}})IN    #'TRIMMED TEXT

SELECT DISTINCT T1.ORZN_DEPT_CDE AS RFO_CDE, T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, (SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, T3.ORZN_DEPT_DSCR, T3.EMP_ID, T3.EMP_STS_TYP_CDE, T3.TRMN_DT, T3.JOB_TYP_CDE, T3.JOB_TYP_DSCR, T3.EMP_NM, CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END AS MARKET_LEADER FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001002', '001003',/* '001004','001005',*/ '001007', '003500','2598','1356') AND T2.EMP_ID NOT IN('TS62904','TS67022','TS18670') ) T3 ON T1.ORZN_ZONE_CDE = T3.ORZN_ZONE_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' --AND T1.ORZN_ZONE_CDE <> 'UKWN' AND T1.ORZN_DEPT_CDE  <> 'UKWN' ORDER BY T1.ORZN_ZONE_CDE; ']),    #'REMOVE JOB CODE 003500' = TABLE.SELECTROWS(SOURCE, EACH ([JOB_TYP_CDE] <> '003500')),    #'INSERTED TEXT AFTER DELIMITER' = TABLE.ADDCOLUMN(#'REMOVE JOB CODE 003500', 'TEXT AFTER DELIMITER', EACH TEXT.AFTERDELIMITER([MARKET_ID], '-'), TYPE TEXT),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'INSERTED TEXT AFTER DELIMITER',{{'TEXT AFTER DELIMITER', 'MARKET'}}),    #'ADDED CONDITIONAL COLUMN' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS', 'EXPERIENCED ADVISORSORT', EACH IF [MARKET] = '01' THEN 1 ELSE IF [MARKET] = '69' THEN 69 ELSE IF [MARKET] = '79' THEN 79 ELSE IF [MARKET] = '98' THEN 98 ELSE IF [MARKET] = '99' THEN 99 ELSE IF [MARKET] = '59' THEN 59 ELSE 0),      #'ADDED CONDITIONAL COLUMN1' = TABLE.ADDCOLUMN(#'ADDED CONDITIONAL COLUMN', 'EXPERIENCED ADVISOR', EACH IF [MARKET] = '01' THEN 'PMC - MARKET 1' ELSE IF [MARKET] = '69' THEN 'GPA - MARKET 69' ELSE IF [MARKET] = '79' THEN 'GPD - MARKET 79' ELSE IF [MARKET] = '98' THEN 'NPG - MARKET 98' ELSE IF [MARKET] = '99' THEN 'NPG - MARKET 99' ELSE IF [MARKET] = '59' THEN 'PMC - MARKET 59' ELSE 'OTHER ADVISORS'),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'ADDED CONDITIONAL COLUMN1',{{'MARKET', 'MARKET NUMBER'}}),    // ADDED 3/7/24 TO BRING IN SR MARKET LEADER NAMES FROM ZONE DATABASE DESIGN FILE    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS1', {'RFO_ZONE_NM'}, #'ZONE DATABASE DESIGN', {'ORGANIZATION ZONE CODE'}, 'ZONE DATABASE DESIGN', JOINKIND.LEFTOUTER),    #'EXPANDED ZONE DATABASE DESIGN' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'ZONE DATABASE DESIGN', {'LEADER NAME'}, {'ZONE DATABASE DESIGN.LEADER NAME'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'EXPANDED ZONE DATABASE DESIGN',{{'MARKET_LEADER', 'TIW_MARKET_LEADER'}}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS2', 'MARKET_LEADER', EACH IF [ZONE DATABASE DESIGN.LEADER NAME] = NULL THEN [TIW_MARKET_LEADER] ELSE IF [ZONE DATABASE DESIGN.LEADER NAME] <> 'VACANT' THEN [ZONE DATABASE DESIGN.LEADER NAME] ELSE [TIW_MARKET_LEADER])IN    #'ADDED CUSTOM

SELECT TRIM(A.BEN_CTRC_NBR) AS BEN_CTRC_NBR   FROM CONTRACT.CNF_CONTRACT_DIM_DTL_RSTR A,        MEMBER.CUST_CTRC_OWNR_CURR_RSTR B LEFT JOIN        MEMBER.ITGR_IDVL_ALL_CURR_RSTR C      ON B.CUST_ID_NBR=C.CUST_ID_NBR    WHERE A.CURR_ROW_IND='Y'    AND A.CTRC_SK=B.CTRC_SK    AND B.CNRN_OWNR_TYP_CDE='PMOR'    AND A.PROD_PLAN_DSCR='HORIZON INSURANCE'    AND A.CTRC_TRMN_DT IS NULL    AND (PROD_PLAN_CDE IN ('02000','02100') AND        (CTRC_ISS_DT >= DATE('1985-01-01') AND CTRC_ISS_DT <= DATE('1988-02-29')))  UNION ALL SELECT TRIM(A.BEN_CTRC_NBR) AS BEN_CTRC_NBR   FROM CONTRACT.CNF_CONTRACT_DIM_DTL_RSTR A,        MEMBER.CUST_CTRC_OWNR_CURR_RSTR B LEFT JOIN        MEMBER.ITGR_IDVL_ALL_CURR_RSTR C      ON B.CUST_ID_NBR=C.CUST_ID_NBR    WHERE A.CURR_ROW_IND='Y'    AND A.CTRC_SK=B.CTRC_SK    AND B.CNRN_OWNR_TYP_CDE='PMOR'    AND A.PROD_PLAN_DSCR='HORIZON INSURANCE'    AND A.CTRC_TRMN_DT IS NULL    AND (PROD_PLAN_CDE IN ('02000','02100') AND        (CTRC_ISS_DT >= DATE('1985-01-01') AND CTRC_ISS_DT <= DATE('1988-02-29')))']),    #'REMOVED DUPLICATES' = TABLE.DISTINCT(SOURCE)IN    #'REMOVED DUPLICATES

//TODO: EMPLOYEE DISPLAY NAME
SELECT                   REF_FCT.PERS_DIM_SK,                 REF_FCT.REFR_DT,                 SUM(REF_FCT.OCCURS) [REFERRAL_OCCURS],                 DATE_DIM.[CALENDAR YEAR NAME],                 DATE_DIM.[CALENDAR YEAR WEEK NUMBER],                 SALE_HIER_DIM.ORZN_DEPT_CDE,                 SALE_HIER_DIM.ORZN_ZONE_CDE,                 ORG_DIM.[SOURCE SYSTEM KEY TEXT] AS EMP_ID,                 ORG_DIM.[ADJUSTED SERVICE DATE],                 ORG_DIM.[EMPLOYEE STATUS TYPE DESCRIPTION],                 ORG_DIM.[FINANCIAL PROFESSIONAL TENURE],                 ORG_DIM.[FINANCIAL PROFESSIONAL TENURE GROUP],                 ORG_DIM.[DEPARTMENT IDENTIFIER],                 ORG_DIM.[RFO ZONE IDENTIFIER],                 ORG_DIM.[LAST NAME]+', '+ORG_DIM.[FIRST NAME] AS ''EMPLOYEE DISPLAY NAME'',                  ORG_DIM.[JOB TYPE CODE],                 ORG_DIM.[JOB TYPE DESCRIPTION], REF_FCT.REFR_ORZN_DIM_SK, REF_FCT.REFR_PERS_DIM_SK, REF_FCT.EFF_BEG_DT    FROM [ENTERPRISEDATAMART].[DM_01].[REFERRAL_FCT] REF_FCT LEFT JOIN        ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM    ON (REF_FCT.[REFR_DT]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM    ON ((REF_FCT.REFR_ORZN_DIM_SK=ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND        (REF_FCT.REFR_ORZN_DIM_VRSN_NBR=ORG_DIM.[ORGANIZATION DIMENSION VERSION NUMBER])) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM    ON ((SALE_HIER_DIM.EFF_BEG_DT <= REF_FCT.REFR_DT) AND        (REF_FCT.REFR_DT <= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT)) AND                  SALE_HIER_DIM.CURR_ROW_IND = 'Y' AND                  ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])  WHERE REF_FCT.PERS_DIM_SK <> 0   AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0001','0115','0190','0283','0291','0361','0383','0384','0435','0525')   AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '002030', '002031', '002032', '003100', '003500')    OR  ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))  AND DATE_DIM.[CALENDAR YEAR NAME] IN ('2022','2023','2024')  GROUP BY                 REF_FCT.PERS_DIM_SK,                 REF_FCT.REFR_DT,                 DATE_DIM.[CALENDAR YEAR NAME],                 DATE_DIM.[CALENDAR YEAR WEEK NUMBER],                 SALE_HIER_DIM.ORZN_DEPT_CDE,                 SALE_HIER_DIM.ORZN_ZONE_CDE,                 ORG_DIM.[SOURCE SYSTEM KEY TEXT],                 ORG_DIM.[ADJUSTED SERVICE DATE],                 ORG_DIM.[EMPLOYEE STATUS TYPE DESCRIPTION],                 ORG_DIM.[FINANCIAL PROFESSIONAL TENURE],                 ORG_DIM.[FINANCIAL PROFESSIONAL TENURE GROUP],                 ORG_DIM.[DEPARTMENT IDENTIFIER],                 ORG_DIM.[RFO ZONE IDENTIFIER],                 ORG_DIM.[LAST NAME]+', '+ORG_DIM.[FIRST NAME],                 ORG_DIM.[JOB TYPE CODE],                 ORG_DIM.[JOB TYPE DESCRIPTION], REF_FCT.REFR_ORZN_DIM_SK, REF_FCT.REFR_PERS_DIM_SK, REF_FCT.EFF_BEG_DT  HAVING  SUM(REF_FCT.OCCURS) > 0']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'REFR_DT', TYPE DATE}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'CHANGED TYPE', EACH ([REFR_PERS_DIM_SK] <> 0)),    #'SORTED ROWS' = TABLE.BUFFER(TABLE.SORT(#'FILTERED ROWS',{{'EFF_BEG_DT', ORDER.DESCENDING}})),    #'REMOVED DUPLICATES' = TABLE.DISTINCT(#'SORTED ROWS', {'PERS_DIM_SK'}),    #'ADDED INDEX' = TABLE.ADDINDEXCOLUMN(#'REMOVED DUPLICATES', 'REFERRAL KEY', 0, 1, INT64.TYPE)IN    #'ADDED INDEX

SELECT IA_DATES_ITRL.DT_SK,        TF_FIN_CUST_EVT_FCT_CFDL.CTRC_VRSN_NBR,        TF_FIN_CUST_EVT_FCT_CFDL.WRTG_AGT_VRSN_NBR,        TF_FIN_CUST_EVT_FCT_CFDL.FIN_CUST_PNT_STS_CDE,        TF_FIN_CUST_EVT_FCT_CFDL.CUST_AGE,        TF_FIN_CUST_EVT_FCT_CFDL.AGE_CLAS_CDE,        TF_FIN_CUST_EVT_FCT_CFDL.AGE_CLAS_DSCR,        TF_FIN_CUST_EVT_FCT_CFDL.FIN_CUST_PNT_VLU,        CNF_CUSTOMER_DIM_CFDL.CUST_ID_NBR,        CNF_CUSTOMER_DIM_CFDL.CUST_LGAL_FMT_NM,         CNF_CUSTOMER_DIM_CFDL.CUST_BRTH_DT,        CNF_CUSTOMER_DIM_CFDL.MBR_TYP_CDE,        CNF_CUSTOMER_DIM_CFDL.MBR_TYP_DSCR,        CNF_CUSTOMER_DIM_CFDL.RSDL_ST_CDE,        CNF_CONTRACT_DIM_DTL_CFDL.CTRC_ISS_DT,         CNF_CONTRACT_DIM_DTL_CFDL.L5_PLOB_SGRP_CDE,        CNF_CONTRACT_DIM_DTL_CFDL.L5_PLOB_SGRP_DSCR,        CNF_CONTRACT_DIM_DTL_CFDL.L4_PLOB_GRP_CDE,        CNF_CONTRACT_DIM_DTL_CFDL.L4_PLOB_GRP_DSCR,        CNF_CONTRACT_DIM_DTL_CFDL.L3_PROD_LOB_CDE,        CNF_CONTRACT_DIM_DTL_CFDL.L3_PROD_LOB_DSCR,        CNF_CONTRACT_DIM_DTL_CFDL.L2_PROD_CHAR_CDE,        CNF_CONTRACT_DIM_DTL_CFDL.L2_PROD_CHAR_DSCR,        AGT_DIM_CURR_CFDL.PARY_DSPL_2_NM,        AGT_DIM_CURR_CFDL.FRST_NM,        AGT_DIM_CURR_CFDL.MDDL_NM,        AGT_DIM_CURR_CFDL.LST_NM,        AGT_DIM_CURR_CFDL.ADJ_SVC_DT,        AGT_DIM_CURR_CFDL.EMP_ID,        AGT_DIM_CURR_CFDL.EMP_STS_TYP_CDE,        AGT_DIM_CURR_CFDL.EMP_STS_TYP_DSCR,        AGT_DIM_CURR_CFDL.JOB_TYP_CDE,        AGT_DIM_CURR_CFDL.JOB_TYP_DSCR,        AGT_DIM_CURR_CFDL.CURR_ROW_IND,        IA_DATES_ITRL.CAL_DAY_DT,        IA_DATES_ITRL.CAL_MTH_NM,        IA_DATES_ITRL.CAL_MTH_STRT_DT,        IA_DATES_ITRL.CAL_MTH_END_DT,        IA_DATES_ITRL.CAL_YR_QTR_NBR,        IA_DATES_ITRL.CAL_QTR_NM,        IA_DATES_ITRL.CAL_WK_NM,        FIN_CUST_ELIG_DIM_CFDL.FIN_CUST_PNT_RSN_CDE,        FIN_CUST_ELIG_DIM_CFDL.FIN_CUST_PNT_RSN_DSCR,        FIN_CUST_ELIG_DIM_CFDL.CTRC_RLTN_TYP_CDE,        FIN_CUST_ELIG_DIM_CFDL.CTRC_RLTN_TYP_DSCR,        CASE           WHEN (CUST_AGE >= 0) AND (CUST_AGE <= 15) THEN '0-15'           WHEN (CUST_AGE >= 16) AND (CUST_AGE <= 25) THEN '16-25'           WHEN (CUST_AGE >= 26) AND (CUST_AGE <= 35) THEN '26-35'           WHEN (CUST_AGE >= 36) AND (CUST_AGE <= 45) THEN '36-45'           WHEN (CUST_AGE >= 46) AND (CUST_AGE <= 55) THEN '46-55'           WHEN (CUST_AGE >= 56) AND (CUST_AGE <= 65) THEN '56-65'           WHEN (CUST_AGE >= 66) AND (CUST_AGE <= 75) THEN '66-75'           WHEN CUST_AGE > 75 THEN '76+'        END           AS MEMBER_AGE_GROUP,        INTEGER (FLOOR ( (CURRENT DATE - CUST_BRTH_DT) / 10000)) AS MEMBER_AGE,        DTRB_PERF_DATES.DTRB_PERF_RPT_WK_END_DT,        DTRB_PERF_DATES.DTRB_PERF_RPT_WK_NBR,        DTRB_PERF_DATES.DTRB_PERF_RPT_YR_NBR,        DTRB_PERF_DATES.DTRB_PERF_RPT_YR_WK_NBR,        DTRB_PERF_DATES.DTRB_PERF_RPT_WK_TXT,        DTRB_PERF_DATES.DTRB_PERF_RPT_YR_TXT,        DTRB_PERF_DATES.DTRB_PERF_RPT_DAY_TXT,        DTRB_PERF_DATES.DTRB_PERF_RPT_MTH_TXT,        DTRB_PERF_DATES.DTRB_PERF_RPT_QTR_TXT,        SALE_HIER_DIM.SALE_HIER_ID,        SALE_HIER_DIM.EFF_BEG_TMSP,        SALE_HIER_DIM.EFF_END_TMSP,        SALE_HIER_DIM.CURR_ROW_IND,        SALE_HIER_DIM.PRTR_NM,        SALE_HIER_DIM.MANP_NM,        SALE_HIER_DIM.ORZN_ZONE_CDE,        SALE_HIER_DIM.ORZN_ZONE_DSCR,        (LEFT(SALE_HIER_DIM.ORZN_ZONE_CDE,4)) AS ORZN_DEPT_CDE,        SALE_HIER_DIM.ORZN_DEPT_DSCR,        SALE_HIER_DIM.ORZN_DIV_CDE,        SALE_HIER_DIM.ORZN_DIV_DSCR,        SALE_HIER_DIM.ORZN_SUB_DEPT_CDE,        SALE_HIER_DIM.SALE_HIER_DIM_SK    FROM ((((((COMMON.IA_DATES_ITRL IA_DATES_ITRL              INNER JOIN COMMON.DTRB_PERF_DATES DTRB_PERF_DATES                 ON (IA_DATES_ITRL.DT_SK = DTRB_PERF_DATES.DT_SK))             LEFT OUTER JOIN             SALES.TF_FIN_CUST_EVT_FCT_CFDL TF_FIN_CUST_EVT_FCT_CFDL                ON (IA_DATES_ITRL.DT_SK =                       TF_FIN_CUST_EVT_FCT_CFDL.FIN_CUST_CRNG_DT_SK))            RIGHT OUTER JOIN HUMAN_RESOURCES.SALE_HIER_DIM SALE_HIER_DIM               ON (SALE_HIER_DIM.SALE_HIER_DIM_SK =                      TF_FIN_CUST_EVT_FCT_CFDL.SLHR_DIM_CURR_CRNG_AGT_SK))           LEFT OUTER JOIN MEMBER.CNF_CUSTOMER_DIM_CFDL CNF_CUSTOMER_DIM_CFDL              ON (CNF_CUSTOMER_DIM_CFDL.CUST_SK =                     TF_FIN_CUST_EVT_FCT_CFDL.CUST_SK))          LEFT OUTER JOIN HUMAN_RESOURCES.AGT_DIM_CURR_CFDL AGT_DIM_CURR_CFDL             ON (AGT_DIM_CURR_CFDL.AGT_DIM_SK =                    TF_FIN_CUST_EVT_FCT_CFDL.CRNG_AGT_SK))         RIGHT OUTER JOIN SALES.FIN_CUST_ELIG_DIM_CFDL FIN_CUST_ELIG_DIM_CFDL            ON (FIN_CUST_ELIG_DIM_CFDL.FIN_CUST_PNT_ELIG_DIM_SK =                   TF_FIN_CUST_EVT_FCT_CFDL.FIN_CUST_PNT_ELIG_DIM_SK))        LEFT OUTER JOIN        CONTRACT.CNF_CONTRACT_DIM_DTL_CFDL CNF_CONTRACT_DIM_DTL_CFDL           ON     (CNF_CONTRACT_DIM_DTL_CFDL.CTRC_SK =                      TF_FIN_CUST_EVT_FCT_CFDL.CTRC_SK)             AND   (CNF_CONTRACT_DIM_DTL_CFDL.VRSN_NBR =                      TF_FIN_CUST_EVT_FCT_CFDL.CTRC_VRSN_NBR) WHERE     (AGT_DIM_CURR_CFDL.CURR_ROW_IND = 'Y')              AND (SALE_HIER_DIM.CURR_ROW_IND = 'Y')        AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0001','0115','0190','0283','0291','0361','0383','0384','0435','0525','0716')        AND DTRB_PERF_DATES.DTRB_PERF_RPT_YR_NBR IN ('2022','2023','2024')        AND TF_FIN_CUST_EVT_FCT_CFDL.FIN_CUST_PNT_VLU <> 0        ']),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(SOURCE,{{'ADJ_SVC_DT', 'ADJUSTED SERVICE DATE'}, {'AGE_CLAS_CDE', 'AGE CLASS CODE'}, {'AGE_CLAS_DSCR', 'AGE CLASS DESCRIPTION'}, {'CTRC_RLTN_TYP_CDE', 'FINANCIAL CUSTOMER POINT RELATIONSHIP CODE'}, {'CTRC_RLTN_TYP_DSCR', 'FINANCIAL CUSTOMER POINT RELATIONSHIP DESCRIPTION'}, {'CTRC_VRSN_NBR', 'CONTRACT VERSION NUMBER'}, {'CUST_AGE', 'FINANCIAL CUSTOMER AGE'}, {'MEMBER_AGE', 'MEMBER AGE'}, {'EFF_BEG_TMSP', 'EFFECTIVE BEGIN TIMESTAMP'}, {'EFF_END_TMSP', 'EFFECTIVE END TIMESTAMP'}, {'EMP_ID', 'EMPLOYEE IDENTIFIER'}, {'EMP_STS_TYP_CDE', 'EMPLOYEE STATUS TYPE CODE'}, {'EMP_STS_TYP_DSCR', 'EMPLOYEE STATUS TYPE DESCRIPTION'}, {'FIN_CUST_PNT_RSN_CDE', 'FINANCIAL CUSTOMER POINT REASON CODE'}, {'FIN_CUST_PNT_RSN_DSCR', 'FINANCIAL CUSTOMER POINT REASON DESCRIPTION'}, {'FIN_CUST_PNT_STS_CDE', 'FINANCIAL CUSTOMER POINT STATUS CODE'}, {'FIN_CUST_PNT_VLU', 'FINANCIAL CUSTOMER POINT VALUE'}, {'FRST_NM', 'EMPLOYEE FIRST NAME'}, {'JOB_TYP_CDE', 'JOB TYPE CODE'}, {'JOB_TYP_DSCR', 'JOB TYPE DESCRIPTION'}, {'L2_PROD_CHAR_CDE', 'LEVEL 2 PRODUCT CHARACTER CODE'}, {'L2_PROD_CHAR_DSCR', 'LEVEL 2 PRODUCT CHARACTER DESCRIPTION'}, {'L3_PROD_LOB_CDE', 'LEVEL 3 PRODUCT LINE OF BUSINESS CODE'}, {'L3_PROD_LOB_DSCR', 'LEVEL 3 PRODUCT LINE OF BUSINESS DESCRIPTION'}, {'L4_PLOB_GRP_CDE', 'LEVEL 4 PRODUCT LINE OF BUSINESS GROUP CODE'}, {'L4_PLOB_GRP_DSCR', 'LEVEL 4 PRODUCT LINE OF BUSINESS GROUP DESCRIPTION'}, {'L5_PLOB_SGRP_CDE', 'LEVEL 5 PRODUCT LINE OF BUSINESS SUBGROUP CODE'}, {'L5_PLOB_SGRP_DSCR', 'LEVEL 5 PRODUCT LINE OF BUSINESS SUBGROUP DESCRIPTION'}, {'LST_NM', 'EMPLOYEE LAST NAME'}, {'MANP_NM', 'MANAGING PARTNER NAME'}, {'MBR_TYP_CDE', 'MEMBER TYPE CODE'}, {'MBR_TYP_DSCR', 'MEMBER TYPE DESCRIPTION'}, {'ORZN_DEPT_CDE', 'ORGANIZATION DEPARTMENT CODE'}, {'ORZN_DEPT_DSCR', 'ORGANIZATION DEPARTMENT DESCRIPTION'}, {'ORZN_DIV_CDE', 'ORGANIZATION DIVISION CODE'}, {'ORZN_DIV_DSCR', 'ORGANIZATION DIVISION DESCRIPTION'}, {'ORZN_ZONE_CDE', 'ORGANIZATION ZONE CODE'}, {'ORZN_ZONE_DSCR', 'ORGANIZATION ZONE DESCRIPTION'}, {'PARY_DSPL_2_NM', 'ASSIGNED FR'}, {'PRTR_NM', 'PARTNER NAME'}, {'RSDL_ST_CDE', 'RESIDENTIAL STATE CODE'}, {'SALE_HIER_DIM_SK', 'SALES HIERARCHY DIMENSION SURROGATE KEY'}, {'SALE_HIER_ID', 'SALES HIERARCHY IDENTIFIER'}, {'WRTG_AGT_VRSN_NBR', 'WRITING AGENT VERSION NUMBER'}, {'MDDL_NM', 'EMPLOYEE MIDDLE NAME'}, {'CAL_DAY_DT', 'CALENDAR DATE'}, {'CAL_MTH_END_DT', 'CALENDAR MONTH END DATE'}, {'CAL_MTH_STRT_DT', 'CALENDAR MONTH START DATE'}, {'DT_SK', 'DATE SURROGATE KEY'}, {'CURR_ROW_IND', 'CURRENT ROW INDICATOR SALES HIERARCHY'}, {'CURR_ROW_IND2', 'AGENT CURRENT ROW INDICATOR'}, {'MEMBER_AGE_GROUP', 'FINANCIAL CUSTOMER AGE GROUP'}, {'DTRB_PERF_RPT_WK_END_DT', 'DISTRIBUTION PERFORMANCE REPORTING WEEK END DATE'}, {'DTRB_PERF_RPT_WK_NBR', 'DISTRIBUTION PERFORMANCE REPORTING WEEK NUMBER'}, {'DTRB_PERF_RPT_YR_NBR', 'DISTRIBUTION PERFORMANCE REPORTING YEAR NUMBER'}, {'DTRB_PERF_RPT_YR_WK_NBR', 'DISTRIBUTION PERFORMANCE REPORTING YEAR WEEK NUMBER'}}),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'RENAMED COLUMNS',{    'CUST_BRTH_DT', 'CAL_MTH_NM', 'CAL_QTR_NM', 'CAL_WK_NM', 'CAL_YR_QTR_NBR'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'REMOVED COLUMNS',{{'ORGANIZATION DEPARTMENT CODE', 'RFO'}, {'ORGANIZATION ZONE CODE', 'MARKET'}, {'EMPLOYEE IDENTIFIER', 'TS ID'}, {'ORZN_SUB_DEPT_CDE', 'MVP'}})IN    #'RENAMED COLUMNS1

SELECT  TRIM(A.EMP_ID) AS EMP_ID,          A.CURR_ROW_IND,         A.ADJ_SVC_DT,        (DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT) ) / 365.25 AS TENURE                       FROM HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL A    WHERE A.EMP_STS_TYP_CDE IN ('A','I','L','D','T','R')     AND A.CURR_ROW_IND = 'Y'               AND A.ADJ_SVC_DT IS NOT NULL     ORDER BY A.EMP_ID

SELECT DISTINCT        [DEPARTMENT IDENTIFIER] RFO_CODE       ,[DEPARTMENT NAME] RFO_NM       ,CONCAT(TRIM([DEPARTMENT IDENTIFIER]),' - ',[DEPARTMENT NAME]) AS NM       FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0435','0115', '0190',                  '0361', '0384','0291', '0525','0001','0383')         AND [CURRENT ROW INDICATOR] = 'Y'         AND [EFFECTIVE BEGIN DATE] > '1/1/2019'         AND [EFFECTIVE END DATE] = '12/31/9999'']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ADVISOR GROUP', EACH IF([RFO_CODE] = '0383') THEN '0383 - VIRTUAL ADVICE' ELSE TEXT.START([NM],TEXT.LENGTH([NM])-14))IN    #'ADDED CUSTOM

SELECT DISTINCT T1.ORZN_DEPT_CDE AS RFO_CDE, T1.ORZN_ZONE_CDE AS RFO_ZONE_NM, (SUBSTRING(T1.ORZN_ZONE_CDE,6,5)) AS MARKET_ID, T3.ORZN_DEPT_DSCR, TRIM(T3.EMP_ID) AS EMP_ID, T3.EMP_STS_TYP_CDE, T3.TRMN_DT, T3.JOB_TYP_CDE, T3.JOB_TYP_DSCR, T3.EMP_NM, CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END AS MARKET_LEADERS, CONCAT(T1.ORZN_ZONE_CDE,CONCAT('-',CASE WHEN T3.EMP_NM IS NULL THEN 'VACANT' ELSE T3.EMP_NM END)) AS MARKET_LEADER_NAME FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN ( SELECT DISTINCT T1.SALE_HIER_ID, T1.ORZN_ZONE_CDE, T1.ORZN_DEPT_DSCR, T2.ORZN_DEPT_CDE, T2.EMP_ID, T2.EMP_STS_TYP_CDE, T2.TRMN_DT, T2.JOB_TYP_CDE, T2.JOB_TYP_DSCR, T2.EMP_NM FROM SEMANTIC.SALES_HIERARCHY_DIMENSION T1 LEFT JOIN HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL T2 ON T1.SALE_HIER_ID = T2.EMP_ID WHERE T1.CURR_ROW_IND = 'Y' AND T2.EMP_STS_TYP_CDE IN ('A') AND T1.EFF_END_TMSP IS NULL AND T2.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL AND T2.JOB_TYP_CDE IN ('001002', '001003', '001007') ) T3 ON T1.ORZN_ZONE_CDE = T3.ORZN_ZONE_CDE WHERE T1.CURR_ROW_IND = 'Y' AND T1.EFF_END_TMSP IS NULL --AND T1.RFO_ZONE_STS_CDE IN ('A') AND SUBSTRING(T1.ORZN_ZONE_CDE,6,2) <> '00' AND T1.ORZN_DEPT_CDE <> 'UKWN' ORDER BY T1.ORZN_ZONE_CDE']),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(SOURCE, {'EMP_ID'}, #'LEADER EXCEPTIONS', {'TSID'}, 'LEADER EXCEPTIONS', JOINKIND.LEFTOUTER),    #'EXPANDED LEADER EXCEPTIONS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'LEADER EXCEPTIONS', {'TSID'}, {'LEADER EXCEPTIONS.TSID'}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'EXPANDED LEADER EXCEPTIONS', 'GROUP COLUMN', EACH 'TEXT'),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'RFO_CDE', 'MARKET_ID', 'ORZN_DEPT_DSCR', 'EMP_ID', 'EMP_STS_TYP_CDE', 'TRMN_DT', 'JOB_TYP_CDE', 'JOB_TYP_DSCR', 'EMP_NM', 'MARKET_LEADERS'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REMOVED COLUMNS',{{'LEADER EXCEPTIONS.TSID', 'LEADEREXCEPTIONS.TSID'}, {'GROUP COLUMN', 'GROUPCOLUMN'}}),    #'MAKE TABLES' = TABLE.GROUP(#'RENAMED COLUMNS', {'GROUPCOLUMN'}, {{'TABLES', EACH _, TYPE TABLE [RFO_ZONE_NM=NULLABLE TEXT, MARKET_LEADER_NAME=NULLABLE TEXT, LEADEREXCEPTIONS.TSID=NULLABLE TEXT]}}),    #'MAKE TABLES W PREV AND NEXT MKT' = TABLE.ADDCOLUMN(#'MAKE TABLES', 'NEW TABLES', EACH LETPREVMKTLIST = {'0'} & LIST.REMOVELASTN(#'EXPANDED LEADER EXCEPTIONS'[RFO_ZONE_NM],1),NEXTMKTLIST = LIST.REMOVEFIRSTN(#'EXPANDED LEADER EXCEPTIONS'[RFO_ZONE_NM],1) & {'0'},TABLELIST = TABLE.TOCOLUMNS([TABLES]),HEADERS = TABLE.COLUMNNAMES([TABLES]) & {'PREV MKT'} & {'NEXT MKT'},CONCAT = TABLELIST & {PREVMKTLIST} & {NEXTMKTLIST}INTABLE.FROMCOLUMNS(CONCAT, HEADERS)),    #'EXPANDED NEW TABLES' = TABLE.EXPANDTABLECOLUMN(#'MAKE TABLES W PREV AND NEXT MKT', 'NEW TABLES', {'RFO_ZONE_NM', 'MARKET_LEADER_NAME', 'LEADEREXCEPTIONS.TSID', 'GROUPCOLUMN', 'PREV MKT', 'NEXT MKT'}, {'NEW TABLES.RFO_ZONE_NM', 'NEW TABLES.MARKET_LEADER_NAME', 'NEW TABLES.LEADEREXCEPTIONS.TSID', 'NEW TABLES.GROUPCOLUMN', 'NEW TABLES.PREV MKT', 'NEW TABLES.NEXT MKT'}),    #'REMOVED COLUMNS1' = TABLE.REMOVECOLUMNS(#'EXPANDED NEW TABLES',{'GROUPCOLUMN', 'TABLES'}),    #'ADDED REMOVEINDICATOR' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS1', 'REMOVEINDICATOR', EACH IF [NEW TABLES.LEADEREXCEPTIONS.TSID] <> NULL THEN (IF ([NEW TABLES.RFO_ZONE_NM]=[NEW TABLES.PREV MKT] OR [NEW TABLES.RFO_ZONE_NM]=[NEW TABLES.NEXT MKT]) THEN 'YES' ELSE 'NO') ELSE 'NO'),    #'FILTERED ON REMOVEINDICATOR' = TABLE.SELECTROWS(#'ADDED REMOVEINDICATOR', EACH ([REMOVEINDICATOR] = 'NO')),    #'REMOVED OTHER COLUMNS' = TABLE.SELECTCOLUMNS(#'FILTERED ON REMOVEINDICATOR',{'NEW TABLES.MARKET_LEADER_NAME', 'NEW TABLES.RFO_ZONE_NM'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'REMOVED OTHER COLUMNS',{{'NEW TABLES.MARKET_LEADER_NAME', 'MARKET_LEADER_NAME'}, {'NEW TABLES.RFO_ZONE_NM', 'RFO_ZONE_NM'}})IN    #'RENAMED COLUMNS1

SELECT DISTINCT        [DEPARTMENT IDENTIFIER] RFO_CODE       ,[DEPARTMENT NAME] RFO_NM       ,CONCAT(TRIM([DEPARTMENT IDENTIFIER]),'-',[DEPARTMENT NAME]) AS NM       FROM [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION]    WHERE [DEPARTMENT IDENTIFIER] IN ('0283', '0435','0115', '0190',                  '0361', '0384','0291', '0525','0001','0383','0716')         AND [CURRENT ROW INDICATOR] = 'Y'         AND [EFFECTIVE BEGIN DATE] > '1/1/2019'         AND [EFFECTIVE END DATE] = '12/31/9999'

SELECT  A.EMP_ID,          A.JOB_TYP_DSCR,         A.EMP_STS_TYP_CDE,         A.CURR_ROW_IND, A.TRMN_DT,         A.ADJ_SVC_DT,        /* TENURE */         (DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT) ) / 365.25 AS TENURE,         /* TENURE_GROUP */         (CASE WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 1 THEN 'NFR1'                WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) > 1 AND                   ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 2 THEN 'NFR2'              WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) > 2 AND                   ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 3 THEN 'NFR3'               WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) > 3 AND                   ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 4 THEN 'NFR4'               WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) > 4 AND                   ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 5 THEN 'VET5'               WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) > 5 AND                   ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 6 THEN 'VET6'              WHEN ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) > 6 AND                   ((DAYS(CURRENT_DATE)-DAYS(A.ADJ_SVC_DT))/365.25 ) <= 7 THEN 'VET7'                ELSE 'VET8+'          END) AS TENURE_GROUP              FROM HUMAN_RESOURCES.CNF_EMP_DIM_DTL_CURR_CFDL A    WHERE A.EMP_STS_TYP_CDE IN ('A','I','L','D','T','R')     AND A.CURR_ROW_IND = 'Y'               AND (A.JOB_FMLY_CDE LIKE 'FLD%' OR          A.JOB_FMLY_CDE ='SALES' OR          A.TF_JOB_CLAS_CDE ='FAC')     AND A.ORZN_DEPT_CDE NOT IN ('2410','3005','7151','7152',                                 '9150','9134','NA', '4100',                                 '6053','6100','8900')     AND (A.JOB_TYP_CDE IN ('002003','002010','002011','002012','002016','002017','002018','002019',                            '002000','002020','002021','002022','002024','002026','002027',                            '002030','002031','002032','003100','003500','003602',                            '003604','003605','003606','003607','003608') OR           A.ORZN_DEPT_CDE IN ('5405','5407','5408','5409','6100','1701','1702','1703'))    AND A.ADJ_SVC_DT IS NOT NULL     ORDER BY A.EMP_ID']),    #'FILTERED ROWS' = TABLE.SELECTROWS(SOURCE, EACH TRUE),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'FILTERED ROWS',{{'ADJ_SVC_DT', TYPE DATE}, {'TENURE', INT64.TYPE}, {'TRMN_DT', TYPE DATE}}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'CHANGED TYPE', 'TSID FOR MERGE', EACH TEXT.TRIM([EMP_ID]))IN    #'ADDED CUSTOM

