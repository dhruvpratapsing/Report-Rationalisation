import re

def clean_query(query):
    # Remove single-line comments starting with --
    query = re.sub(r'--.*', '', query)
    
    # Remove multi-line comments between /* and */
    query = re.sub(r'/\*.*?\*/', '', query, flags=re.DOTALL)
    
    # Return cleaned query
    return query

def extract_columns_from_where_clause(query):
    # Clean query to remove comments
    query = clean_query(query)

    # Pattern to match columns enclosed in square brackets (e.g., [COLUMN_NAME])
    # The pattern also considers columns that are not necessarily directly followed by an operator (to handle edge cases)
    pattern = r'\[([A-Za-z\s_]+)\]\s*(?:=|>|<|>=|<=|IN|LIKE|IS|BETWEEN|NOT IN)'

    # Search for WHERE clause
    where_clause_start = re.search(r'\bWHERE\b', query, re.IGNORECASE)
    
    if where_clause_start:
        # Extract WHERE clause part of the query
        where_clause = query[where_clause_start.end():]
        
        # Find all column matches using regex
        columns = re.findall(pattern, where_clause, re.IGNORECASE)
        
        # Remove duplicates and return
        return list(set(columns))
    
    return []

# Example complex query
query = """
SELECT 
	PERS_DIM.[SOURCE SYSTEM KEY TEXT] AS THRIVENTID,        
	PERS_DIM.[FIRST NAME] + ' ' + PERS_DIM.[LAST NAME] AS CLIENTNAME,        
	APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],        
	APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],        
	APPT_FCT.[PERSON DIMENSION SURROGATE KEY],        
	SUM(APPT_FCT.[APPOINTMENT OCCURS]) [APPT_OCCURS],       
	MAX(APPT_FCT.[PERSON OCCURS]) [PERSON OCCURS],        
	MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],     
	CASE WHEN APPT_DIM.[FIELD USER COUNT] <> 0 AND APPT_DIM.[APPOINTMENT TYPE CODE] IN ('CONNECT','GATHER DATA','TAKE ACTION','STRATEGY CALL/MEETING','REVIEW','SERVICE','DISCOVER','DELIVER')    THEN 1    ELSE 0     END [JFW_IND],        
	APPT_DIM.[APPOINTMENT DATE],        
	CASE WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('GATHER DATA') THEN 'DISCOVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] IN ('TAKE ACTION') THEN 'DELIVER'             WHEN APPT_DIM.[APPOINTMENT TYPE CODE] NOT IN ('GATHER DATA','TAKE ACTION') THEN APPT_DIM.[APPOINTMENT TYPE DESCRIPTION]        END AS [APPOINTMENT TYPE CODE],        
	DATE_DIM.[CALENDAR YEAR NAME] AS [PERFORMANCE YEAR NAME],        
	ORG_DIM.[SOURCE SYSTEM KEY TEXT] [EMP_ID],        
	ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME] [EMP_NM]    
FROM ENTERPRISEDATAMART.DM_01.[APPOINTMENT COMBINE FACT] APPT_FCT LEFT JOIN         ENTERPRISEDATAMART.DM_01.[PERSON DIMENSION] AS PERS_DIM     ON (APPT_FCT.[PERSON DIMENSION SURROGATE KEY]=PERS_DIM.[PERSON DIMENSION SURROGATE KEY] AND         APPT_FCT.[PERSON DIMENSION VERSION NUMBER] = PERS_DIM.[PERSON DIMENSION VERSION NUMBER]) LEFT JOIN        ENTERPRISEDATAMART.DM_01.[MEMBERSHIP TYPE DIMENSION] MBR_DIM     ON (APPT_FCT.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]=MBR_DIM.[MEMBERSHIP TYPE DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[APPOINTMENT DIMENSION] APPT_DIM     ON (APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY]=APPT_DIM.[APPOINTMENT DIMENSION SURROGATE KEY]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[DATE DIMENSION] DATE_DIM     ON (APPT_DIM.[APPOINTMENT DATE]=DATE_DIM.[CALENDAR DATE DATE]) LEFT JOIN         ENTERPRISEDATAMART.DM_01.[ORGANIZATION DIMENSION] ORG_DIM     ON ((APPT_FCT.[APPOINTMENT ORGANIZATION DIMENSION SURROGATE KEY]=ORG_DIM.[ORGANIZATION DIMENSION SURROGATE KEY]) AND         ((ORG_DIM.[EFFECTIVE BEGIN DATE] <= APPT_DIM.[APPOINTMENT DATE]) AND (APPT_DIM.[APPOINTMENT DATE] <= ORG_DIM.[EFFECTIVE END DATE]))) LEFT JOIN           ENTERPRISEDATAMART.DM_01.[SALE_HIER_DIM] SALE_HIER_DIM     ON ((ORG_DIM.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID] AND  (SALE_HIER_DIM.EFF_BEG_DT<=APPT_DIM.[APPOINTMENT DATE]) AND  (APPT_DIM.[APPOINTMENT DATE]<= SALE_HIER_DIM.EFF_END_DT) AND    SALE_HIER_DIM.CURR_ROW_IND = 'Y'))  WHERE APPT_DIM.[CURRENT ROW INDICATOR] = 'Y'   AND APPT_DIM.[APPOINTMENT CREATE DATE OVER 14 DAYS] = 'N'   AND APPT_FCT.[PERSON DIMENSION SURROGATE KEY] <> 0   AND APPT_FCT.[APPOINTMENT STATUS NAME] <> 'DECLINED'   AND APPT_DIM.[APPOINTMENT TYPE CODE] <> 'UNK'   AND SALE_HIER_DIM.ORZN_DEPT_CDE IN ('0115','0165','0190','0240','0283','0291','0361','0365', '0383','0384','0410','0435','0475','0496','0525','0529','0810')  AND (ORG_DIM.[JOB TYPE CODE] IN ('002000', '002003', '002008', '002010', '002011', '002012', '002016', '002022', '002024', '002025', '002026', '002027', '003100', '003500')   OR  ORG_DIM.[DEPARTMENT IDENTIFIER] IN ('5405','5407','5408','5409','1701','1702','1703','0383'))    AND APPT_DIM.[EVENT RESULT DESCRIPTION] NOT IN ('NO SHOW','CANCELLED')   AND DATE_DIM.[CALENDAR YEAR NAME] IN ('2024')   GROUP BY   APPT_FCT.[WORKER APPOINTMENT ASSOCIATION],   APPT_FCT.[APPOINTMENT DIMENSION SURROGATE KEY],   APPT_FCT.[PERSON DIMENSION SURROGATE KEY],   MBR_DIM.[MEMBERSHIP TYPE DESCRIPTION],   APPT_DIM.[FIELD USER COUNT],   APPT_DIM.[APPOINTMENT DATE],   APPT_DIM.[APPOINTMENT TYPE CODE],   APPT_DIM.[APPOINTMENT TYPE DESCRIPTION],   DATE_DIM.[CALENDAR YEAR NAME],   ORG_DIM.[SOURCE SYSTEM KEY TEXT],   ORG_DIM.[FIRST NAME] + ' ' + ORG_DIM.[LAST NAME],   PERS_DIM.[SOURCE SYSTEM KEY TEXT],   PERS_DIM.[FIRST NAME] + ' ' + PERS_DIM.[LAST NAME]   HAVING  SUM(APPT_FCT.[APPOINTMENT OCCURS]) > 0 ']),    #'FILTERED ROWS1' = TABLE.SELECTROWS(SOURCE, EACH ([WORKER APPOINTMENT ASSOCIATION] = 'OWNER')),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'FILTERED ROWS1', EACH ([APPOINTMENT TYPE CODE] = 'CONNECT') AND ([MEMBERSHIP TYPE DESCRIPTION] <> 'BENEFIT')),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'FILTERED ROWS',{{'APPOINTMENT DATE', TYPE DATE}, {'THRIVENTID', INT64.TYPE}})IN    #'CHANGED TYPE
"""

# Extract columns
extracted_columns = extract_columns_from_where_clause(query)
print("Extracted Columns:", extracted_columns)

