1. SELECT 
 A.[ORGANIZATION DIMENSION SURROGATE KEY]
      ,A.[ORGANIZATION DIMENSION VERSION NUMBER]
      ,A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]
      ,A.[ORGANIZATION LEAD DIMENSION VERSION NUMBER]
      ,A.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY]
      ,A.[PACE PERFORMANCE TARGET VERSION NUMBER]
      ,A.[PROCESS DATE]
	  ,B.[SOURCE SYSTEM KEY TEXT] AS TSID
      ,CONCAT(B.[FIRST NAME],' ',B.[LAST NAME]) AS FP_NAME
      ,B.[JOB TYPE CODE]
      ,CONCAT((LEFT(SALE_HIER_DIM.[ORZN_ZONE_CDE],4)),'-',SALE_HIER_DIM.ORZN_DEPT_DSCR) AS TAG
	  ,SALE_HIER_DIM.ORZN_ZONE_CDE [MARKET]
      ,C.[SOURCE SYSTEM KEY TEXT] AS LEADER_TSID
      ,CONCAT(C.[FIRST NAME],' ',C.[LAST NAME]) AS LEADER_NAME
      ,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END AS [TENURE DATA]
         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) AS MONTH
         --,DATEDIFF(MONTH, [TENURE DATA], DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) +1, 0))) AS EOQ_MONTH
		 ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END) AS EOQ_MONTH
		 --,(DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0))) AS CURRENT_QTR
		 /*,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END AS QUARTER_END*/
		 --,DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)) AS PREVIOUS_QTR
         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) AS EOY_MONTH
         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) - 
         (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) + 
         (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS

       ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) - 1 +
  1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))
  + 1.0*(DAY(DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)), -1)) AS EOY_TENURE

       ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END) - 1 +
  1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))
  + 1.0*(DAY(CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END), -1)) AS EOQ_TENURE

      ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) - 1 +
  1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))
  + 1.0*(DAY(DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)), -1)) AS EOM_TENURE
      ,A.[PRODUCTION DATE]
      ,A.[SNAPSHOT TYPE CODE]
      ,A.[BUSINESS INTERRUPTION DAY VALUE]
      ,A.[LIFE AND HEALTH GRID CREDIT AMOUNT]
      ,A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] AS LH_PACE_TARGET
      ,A.[GRID CREDIT AMOUNT]
      ,A.[PRORATED GRID CREDIT AMOUNT] AS TGR_PACE_TARGET
	  ,A.[NEW MONEY SALES CREDIT AMOUNT]
	  ,A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] AS PACE_TARGET
         ,D.[NEW MONEY SALES CREDIT AMOUNT] AS EOY_TARGET
         ,D.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOY_RANGE_AMT
         ,E.[NEW MONEY SALES CREDIT AMOUNT] AS EOQ_TARGET
         ,E.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOQ_RANGE_AMT
         ,F.[NEW MONEY SALES CREDIT AMOUNT] AS EOM_TARGET
         ,F.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOM_RANGE_AMT
	  ,CASE 
		WHEN (CASE 
            WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N' 
            ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
          END) = 'Y' 
         OR B.[JOB TYPE CODE] = '002010' THEN ''
		WHEN A.[NEW MONEY SALES CREDIT AMOUNT] > A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'ABOVE'
		WHEN A.[NEW MONEY SALES CREDIT AMOUNT] < A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'BELOW'
		ELSE ''
	   END AS ABOVE_BELOW
      ,CASE WHEN (CASE 
            WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N' 
            ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
          END) = 'Y' 
         OR B.[JOB TYPE CODE] = '002010' THEN ''
         WHEN A.[GRID CREDIT AMOUNT] > A.[PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'
         WHEN A.[GRID CREDIT AMOUNT] < A.[PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'
		 ELSE ''
         END AS ABOVE_BELOW_TGR
      ,CASE WHEN (CASE 
            WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N' 
            ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
          END) = 'Y' 
         OR B.[JOB TYPE CODE] = '002010' THEN ''
         WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] > A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'
         WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] < A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'
		 ELSE ''
         END AS ABOVE_BELOW_LH
     ,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'
	     ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
		 END AS [PRIOR ADVISOR EXPERIENCE INDICATOR]
     ,CASE WHEN A.[PROCESS DATE] = MAX_PROCESS_DATE.[MAX PROCESS DATE]THEN 'Y'
         ELSE 'N'
         END AS CURR_WK_IND
  FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A
  INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B
   ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND
       A.[PROCESS DATE]>=B.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=B.[EFFECTIVE END DATE])
  INNER JOIN (SELECT MAX([PROCESS DATE]) [MAX PROCESS DATE] FROM [DM_01].[PACE PERFORMANCE SNAPSHOT FACT]) AS MAX_PROCESS_DATE ON 'A' = 'A'
  INNER JOIN [DM_01].[DATE DIMENSION] DD ON (A.[PROCESS DATE]=DD.[CALENDAR DATE DATE])
   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SALE_HIER_DIM
    ON ((
    (SALE_HIER_DIM.EFF_BEG_DT<=A.[PROCESS DATE])
        OR
        (
        (A.[PROCESS DATE]<(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y'))
        AND
        SALE_HIER_DIM.EFF_BEG_DT=(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y')
        ))
        AND 
        (A.[PROCESS DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))
        AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'
        AND B.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])

  
  
  
  INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] C
   ON (A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]=C.[ORGANIZATION DIMENSION SURROGATE KEY] AND
    A.[PROCESS DATE]>=C.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=C.[EFFECTIVE END DATE])
  LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] D
   ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))=D.[CALENDAR YEAR MONTH NUMBER])
  LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] E
   ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END)=E.[CALENDAR YEAR MONTH NUMBER])
  LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] F
   ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))=F.[CALENDAR YEAR MONTH NUMBER])']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ABOVE/BELOW', EACH IF [JOB TYPE CODE] = '002010' THEN '' ELSE [ABOVE_BELOW]),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ABOVE_BELOW'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS',{'ORGANIZATION DIMENSION SURROGATE KEY', 'ORGANIZATION DIMENSION VERSION NUMBER', 'ORGANIZATION LEAD DIMENSION SURROGATE KEY', 'ORGANIZATION LEAD DIMENSION VERSION NUMBER', 'PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY', 'PACE PERFORMANCE TARGET VERSION NUMBER', 'PROCESS DATE', 'TENURE DATA', 'MONTH', 'EOQ_MONTH', 'EOY_MONTH', 'TENURE_MONTHS', 'EOY_TENURE', 'EOQ_TENURE', 'EOM_TENURE', 'PRODUCTION DATE', 'SNAPSHOT TYPE CODE', 'BUSINESS INTERRUPTION DAY VALUE', 'TSID', 'FP_NAME', 'JOB TYPE CODE', 'TAG', 'MARKET', 'LEADER_TSID', 'LEADER_NAME', 'LIFE AND HEALTH GRID CREDIT AMOUNT', 'LH_PACE_TARGET', 'GRID CREDIT AMOUNT', 'PACE_TARGET', 'EOY_TARGET', 'EOY_RANGE_AMT', 'EOQ_TARGET', 'EOQ_RANGE_AMT', 'EOM_TARGET', 'EOM_RANGE_AMT', 'ABOVE/BELOW', 'ABOVE_BELOW_LH', 'PRIOR ADVISOR EXPERIENCE INDICATOR', 'CURR_WK_IND'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'ABOVE/BELOW', 'ABOVE_BELOW'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE_MONTHS] >= 0),    #'ADDED CONDITIONAL COLUMN' = TABLE.ADDCOLUMN(#'FILTERED ROWS', 'TSL/ASSOC REP', EACH IF [JOB TYPE CODE] = '002022' THEN '002022 - TSL' ELSE IF [JOB TYPE CODE] = '002010' THEN '002010 - ASSOCIATE REP' ELSE NULL),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'ADDED CONDITIONAL COLUMN', 'MVP', EACH TEXT.START([MARKET],7)),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM1', {'TSID'}, #'12_31 PACE EXPORT', {'TSID'}, 'EXPORT', JOINKIND.LEFTOUTER),    #'EXPANDED EXPORT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'EXPORT', {'EOY TARGET', 'ABOVE/BELOW EOY'}, {'EXPORT.EOY TARGET', 'EXPORT.ABOVE/BELOW EOY'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'EXPANDED EXPORT',{{'EXPORT.EOY TARGET', 'EOY PACE TARGET'}, {'EXPORT.ABOVE/BELOW EOY', 'ABOVE/BELOW EOY'}}),    #'MERGED QUERIES1' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS1', {'PROCESS DATE'}, #'WEEK START', {'WEEKLY PROC DT'}, 'WEEK START', JOINKIND.LEFTOUTER),    #'EXPANDED WEEK START' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES1', 'WEEK START', {'WEEK_START_DATE'}, {'WEEK START.WEEK_START_DATE'}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'EXPANDED WEEK START', 'JOINVALUE', EACH DATETIME.TOTEXT ([WEEK START.WEEK_START_DATE], 'MM/DD/YY') & [TSID]),    #'MERGED QUERIES2' = TABLE.NESTEDJOIN(#'ADDED CUSTOM2', {'JOINVALUE'}, OVERRIDES, {'JOIN VALUE'}, 'OVERRIDES', JOINKIND.LEFTOUTER),    #'EXPANDED OVERRIDES' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES2', 'OVERRIDES', {'MARKET'}, {'OVERRIDES.MARKET'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'EXPANDED OVERRIDES',{{'MARKET', 'ORIGINAL MARKET'}}),    #'ADDED CUSTOM3' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS2', 'MARKET', EACH IF [OVERRIDES.MARKET] IS NULL THEN [ORIGINAL MARKET] ELSE [OVERRIDES.MARKET]),    #'MERGED QUERIES3' = TABLE.NESTEDJOIN(#'ADDED CUSTOM3', {'MARKET'}, #'DIRECTOR LIST', {'WORKER_STS_FCT_MKT'}, 'DIRECTOR LIST', JOINKIND.LEFTOUTER),    #'EXPANDED DIRECTOR LIST' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES3', 'DIRECTOR LIST', {'SRC_SYS_KEY_TXT', 'EMP_NM'}, {'DIRECTOR LIST.SRC_SYS_KEY_TXT', 'DIRECTOR LIST.EMP_NM'}),    #'RENAMED COLUMNS3' = TABLE.RENAMECOLUMNS(#'EXPANDED DIRECTOR LIST',{{'DIRECTOR LIST.EMP_NM', 'MARKET DIRECTOR'}, {'DIRECTOR LIST.SRC_SYS_KEY_TXT', 'DIRECTOR TSID'}}),    #'MERGED QUERIES4' = TABLE.NESTEDJOIN(#'RENAMED COLUMNS3', {'TSID'}, #'MARKET DEVELOPERS', {'CORP_EMP_ID_CDE'}, 'MARKET DEVELOPERS', JOINKIND.LEFTOUTER),    #'EXPANDED MARKET DEVELOPERS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES4', 'MARKET DEVELOPERS', {'RDL NAME'}, {'MARKET DEVELOPERS.RDL NAME'})IN    #'EXPANDED MARKET DEVELOPERS


output:
Traceback (most recent call last):
  File "C:\Dhruv\ReportRationalization\sqlmetadata_testing.py", line 145, in <module>
    res = parser.columns
          ^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 207, in columns
    columns_aliases_names=self.columns_aliases_names,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 331, in columns_aliases_names
    self._handle_column_alias_subquery_level_update(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 686, in _handle_column_alias_subquery_level_update
    self._add_to_columns_aliases_subsection(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 752, in _add_to_columns_aliases_subsection
    section = COLUMNS_SECTIONS[keyword]
              ~~~~~~~~~~~~~~~~^^^^^^^^^
KeyError: 'FROM'



2. SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'CAREFORWARD' AS PRODUCT_TABLE FROM CAREFORWARD_REQUEST 

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'DI' AS PRODUCT_TABLE FROM DISABILITY_INCOME_REQUEST 

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'FA' AS PRODUCT_TABLE FROM FIXED_ANNUITY_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'FIA' AS PRODUCT_TABLE FROM FIXED_INDEX_ANNUITY_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'LTC' AS PRODUCT_TABLE FROM LONG_TERM_CARE_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'SPIA DIA' AS PRODUCT_TABLE FROM SPIA_DIA_SETTLEMENT_OPTIONS_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'SURVIVOR WL' AS PRODUCT_TABLE FROM SURVIVOR_WHOLE_LIFE_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'TERM' AS PRODUCT_TABLE FROM TERM_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'UL VUL' AS PRODUCT_TABLE FROM ULVUL_REQUEST WHERE PRODUCT_CODE <> 'VUL19'

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'UL VUL' AS PRODUCT_TABLE FROM ULVUL_REQUEST WHERE PRODUCT_CODE = 'VUL19' AND ILLUSTRATION_REQUEST_SOURCE_SYSTEM_CODE <> 'WINF'




UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'VA' AS PRODUCT_TABLE FROM VARIABLE_ANNUITY_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'WL PLUS' AS PRODUCT_TABLE FROM WHOLE_LIFE_PLUS_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'WL' AS PRODUCT_TABLE FROM WHOLE_LIFE_REQUEST
']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'DATE', TYPE DATE}}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'CHANGED TYPE',{{'PRODUCT_CODE', 'PRODUCT'}, {'DATE', 'DAY'}}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS', 'COUNT', EACH 1),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ILLUSTRATION_CASE_ID', 'PRODUCT_TABLE'}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'REMOVED COLUMNS', 'CUSTOM', EACH IF [DAY]>DATE.FROM(DATE.ENDOFWEEK(DATE.ADDDAYS(DATETIME.LOCALNOW(),-6),DAY.MONDAY)) THEN 'POST LAST SUNDAY' ELSE 'PRE LAST SUNDAY'),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'ADDED CUSTOM2', EACH ([CUSTOM] = 'PRE LAST SUNDAY')),    #'CHANGED TYPE1' = TABLE.TRANSFORMCOLUMNTYPES(#'FILTERED ROWS',{{'COUNT', INT64.TYPE}})IN    #'CHANGED TYPE1

output:
Traceback (most recent call last):
  File "C:\Dhruv\ReportRationalization\sqlmetadata_testing.py", line 54, in <module>
    res = parser.columns
          ^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 207, in columns
    columns_aliases_names=self.columns_aliases_names,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 331, in columns_aliases_names
    self._handle_column_alias_subquery_level_update(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 686, in _handle_column_alias_subquery_level_update
    self._add_to_columns_aliases_subsection(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 752, in _add_to_columns_aliases_subsection
    section = COLUMNS_SECTIONS[keyword]
              ~~~~~~~~~~~~~~~~^^^^^^^^^
KeyError: 'FROM'


3. SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'CAREFORWARD' AS PRODUCT_TABLE FROM CAREFORWARD_REQUEST 

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'DI' AS PRODUCT_TABLE FROM DISABILITY_INCOME_REQUEST 

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'FA' AS PRODUCT_TABLE FROM FIXED_ANNUITY_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'FIA' AS PRODUCT_TABLE FROM FIXED_INDEX_ANNUITY_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'LTC' AS PRODUCT_TABLE FROM LONG_TERM_CARE_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'SPIA DIA' AS PRODUCT_TABLE FROM SPIA_DIA_SETTLEMENT_OPTIONS_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'SURVIVOR WL' AS PRODUCT_TABLE FROM SURVIVOR_WHOLE_LIFE_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'TERM' AS PRODUCT_TABLE FROM TERM_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'UL VUL' AS PRODUCT_TABLE FROM ULVUL_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'VA' AS PRODUCT_TABLE FROM VARIABLE_ANNUITY_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'WL PLUS' AS PRODUCT_TABLE FROM WHOLE_LIFE_PLUS_REQUEST

UNION
SELECT [ILLUSTRATION_CASE_ID], PRODUCT_CODE, CONVERT(DATE,CRET_TMSP) AS DATE, 'WL' AS PRODUCT_TABLE FROM WHOLE_LIFE_REQUEST']),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(SOURCE,{{'DATE', TYPE DATE}}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'CHANGED TYPE',{{'PRODUCT_CODE', 'SQL_PRODUCT'}, {'DATE', 'SQL_DAY'}}),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS', 'SQL_COUNT', EACH 1),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ILLUSTRATION_CASE_ID', 'PRODUCT_TABLE'})IN    #'REMOVED COLUMNS

output:
Traceback (most recent call last):
  File "C:\Dhruv\ReportRationalization\sqlmetadata_testing.py", line 47, in <module>
    res = parser.columns
          ^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 207, in columns
    columns_aliases_names=self.columns_aliases_names,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 331, in columns_aliases_names
    self._handle_column_alias_subquery_level_update(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 686, in _handle_column_alias_subquery_level_update
    self._add_to_columns_aliases_subsection(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 752, in _add_to_columns_aliases_subsection
    section = COLUMNS_SECTIONS[keyword]
              ~~~~~~~~~~~~~~~~^^^^^^^^^
KeyError: 'FROM'


4.
SELECT 
 A.[ORGANIZATION DIMENSION SURROGATE KEY]
      ,A.[ORGANIZATION DIMENSION VERSION NUMBER]
      ,A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]
      ,A.[ORGANIZATION LEAD DIMENSION VERSION NUMBER]
      ,A.[PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY]
      ,A.[PACE PERFORMANCE TARGET VERSION NUMBER]
      ,A.[PROCESS DATE]
	  ,B.[SOURCE SYSTEM KEY TEXT] AS TSID
      ,CONCAT(B.[FIRST NAME],' ',B.[LAST NAME]) AS FP_NAME
      ,B.[JOB TYPE CODE]
      ,CONCAT((LEFT(SALE_HIER_DIM.[ORZN_ZONE_CDE],4)),'-',SALE_HIER_DIM.ORZN_DEPT_DSCR) AS TAG
	  ,SALE_HIER_DIM.ORZN_ZONE_CDE [MARKET]
      ,C.[SOURCE SYSTEM KEY TEXT] AS LEADER_TSID
      ,CONCAT(C.[FIRST NAME],' ',C.[LAST NAME]) AS LEADER_NAME
      ,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END AS [TENURE DATA]
         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) AS MONTH
         --,DATEDIFF(MONTH, [TENURE DATA], DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) +1, 0))) AS EOQ_MONTH
		 ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END) AS EOQ_MONTH
		 --,(DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0))) AS CURRENT_QTR
		 /*,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END AS QUARTER_END*/
		 --,DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)) AS PREVIOUS_QTR
         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) AS EOY_MONTH
         ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, [PROCESS DATE]) - 
         (DATEPART(DD,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)*1.0-1.0)/DAY(EOMONTH(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)) + 
         (DATEPART(DD,[PROCESS DATE])*1.0)/DAY(EOMONTH([PROCESS DATE])) AS TENURE_MONTHS

       ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)) - 1 +
  1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))
  + 1.0*(DAY(DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1)), -1)) AS EOY_TENURE

       ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END) - 1 +
  1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))
  + 1.0*(DAY(CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END), -1)) AS EOQ_TENURE

      ,DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)) - 1 +
  1-1.0*(DAY(CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END)-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END), -1))
  + 1.0*(DAY(DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))-1)/ DAY(DATEADD(M, DATEDIFF(M,-1, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1)), -1)) AS EOM_TENURE
      ,A.[PRODUCTION DATE]
      ,A.[SNAPSHOT TYPE CODE]
      ,A.[BUSINESS INTERRUPTION DAY VALUE]
      ,A.[LIFE AND HEALTH GRID CREDIT AMOUNT]
      ,A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] AS LH_PACE_TARGET
      ,A.[GRID CREDIT AMOUNT]
      ,A.[PRORATED GRID CREDIT AMOUNT] AS TGR_PACE_TARGET
	  ,A.[NEW MONEY SALES CREDIT AMOUNT]
	  ,A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] AS PACE_TARGET
         ,D.[NEW MONEY SALES CREDIT AMOUNT] AS EOY_TARGET
         ,D.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOY_RANGE_AMT
         ,E.[NEW MONEY SALES CREDIT AMOUNT] AS EOQ_TARGET
         ,E.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOQ_RANGE_AMT
         ,F.[NEW MONEY SALES CREDIT AMOUNT] AS EOM_TARGET
         ,F.[NEW MONEY SALES CREDIT RANGE AMOUNT] AS EOM_RANGE_AMT
	  ,CASE 
		WHEN (CASE 
            WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N' 
            ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
          END) = 'Y' 
         OR B.[JOB TYPE CODE] = '002010' THEN ''
		WHEN A.[NEW MONEY SALES CREDIT AMOUNT] > A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'ABOVE'
		WHEN A.[NEW MONEY SALES CREDIT AMOUNT] < A.[PRORATED NEW MONEY SALES CREDIT AMOUNT] THEN 'BELOW'
		ELSE ''
	   END AS ABOVE_BELOW
      ,CASE WHEN (CASE 
            WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N' 
            ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
          END) = 'Y' 
         OR B.[JOB TYPE CODE] = '002010' THEN ''
         WHEN A.[GRID CREDIT AMOUNT] > A.[PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'
         WHEN A.[GRID CREDIT AMOUNT] < A.[PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'
		 ELSE ''
         END AS ABOVE_BELOW_TGR
      ,CASE WHEN (CASE 
            WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N' 
            ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
          END) = 'Y' 
         OR B.[JOB TYPE CODE] = '002010' THEN ''
         WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] > A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'ABOVE'
         WHEN A.[LIFE AND HEALTH GRID CREDIT AMOUNT] < A.[LIFE AND HEALTH PRORATED GRID CREDIT AMOUNT] THEN 'BELOW'
		 ELSE ''
         END AS ABOVE_BELOW_LH
     ,CASE WHEN B.[SOURCE SYSTEM KEY TEXT] = 'TS64454' THEN 'N'
	     ELSE A.[PRIOR ADVISOR EXPERIENCE INDICATOR] 
		 END AS [PRIOR ADVISOR EXPERIENCE INDICATOR]
     ,CASE WHEN A.[PROCESS DATE] = MAX_PROCESS_DATE.[MAX PROCESS DATE]THEN 'Y'
         ELSE 'N'
         END AS CURR_WK_IND
  FROM [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE SNAPSHOT FACT] A
  INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] B
   ON (A.[ORGANIZATION DIMENSION SURROGATE KEY]=B.[ORGANIZATION DIMENSION SURROGATE KEY] AND
       A.[PROCESS DATE]>=B.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=B.[EFFECTIVE END DATE])
  INNER JOIN (SELECT MAX([PROCESS DATE]) [MAX PROCESS DATE] FROM [DM_01].[PACE PERFORMANCE SNAPSHOT FACT]) AS MAX_PROCESS_DATE ON 'A' = 'A'
  INNER JOIN [DM_01].[DATE DIMENSION] DD ON (A.[PROCESS DATE]=DD.[CALENDAR DATE DATE])
   LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SALE_HIER_DIM
    ON ((
    (SALE_HIER_DIM.EFF_BEG_DT<=A.[PROCESS DATE])
        OR
        (
        (A.[PROCESS DATE]<(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y'))
        AND
        SALE_HIER_DIM.EFF_BEG_DT=(SELECT MIN(EFF_BEG_DT) FROM [ENTERPRISEDATAMART].[DM_01].[SALE_HIER_DIM] SUBQ WHERE B.[SOURCE SYSTEM KEY TEXT]=SUBQ.[SALE_HIER_ID] AND SUBQ.CURR_ROW_IND = 'Y')
        ))
        AND 
        (A.[PROCESS DATE]<= DATEADD(DAY,-1,SALE_HIER_DIM.EFF_END_DT))
        AND SALE_HIER_DIM.CURR_ROW_IND = 'Y'
        AND B.[SOURCE SYSTEM KEY TEXT]=SALE_HIER_DIM.[SALE_HIER_ID])

  
  
  
  INNER JOIN [ENTERPRISEDATAMART].[DM_01].[ORGANIZATION DIMENSION] C
   ON (A.[ORGANIZATION LEAD DIMENSION SURROGATE KEY]=C.[ORGANIZATION DIMENSION SURROGATE KEY] AND
    A.[PROCESS DATE]>=C.[EFFECTIVE BEGIN DATE] AND A.[PROCESS DATE]<=C.[EFFECTIVE END DATE])
  LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] D
   ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(YY, DATEDIFF(YY, 0, GETDATE()) + 1, -1))=D.[CALENDAR YEAR MONTH NUMBER])
  LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] E
   ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END,CASE WHEN GETDATE()>DATEFROMPARTS(YEAR(GETDATE()),10,16) THEN (DATEADD (DD, -1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()) + 1, 0)))
		 ELSE DATEADD (DD, +14, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()-15) + 1, 0))
		 END)=E.[CALENDAR YEAR MONTH NUMBER])
  LEFT JOIN [ENTERPRISEDATAMART].[DM_01].[PACE PERFORMANCE TARGET DIMENSION] F
   ON (DATEDIFF(MONTH, CASE WHEN B.[SOURCE SYSTEM KEY TEXT] IN ('TS74049','TS71560','TS77919','TS74642','TS78250','TS75194') THEN B.[ADJUSTED SERVICE DATE] ELSE A.[TENURE DATA] END, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + 1, -1))=F.[CALENDAR YEAR MONTH NUMBER])']),    #'ADDED CUSTOM' = TABLE.ADDCOLUMN(SOURCE, 'ABOVE/BELOW', EACH IF [JOB TYPE CODE] = '002010' THEN '' ELSE [ABOVE_BELOW]),    #'REMOVED COLUMNS' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM',{'ABOVE_BELOW'}),    #'REORDERED COLUMNS' = TABLE.REORDERCOLUMNS(#'REMOVED COLUMNS',{'ORGANIZATION DIMENSION SURROGATE KEY', 'ORGANIZATION DIMENSION VERSION NUMBER', 'ORGANIZATION LEAD DIMENSION SURROGATE KEY', 'ORGANIZATION LEAD DIMENSION VERSION NUMBER', 'PACE PERFORMANCE TARGET DIMENSION SURROGATE KEY', 'PACE PERFORMANCE TARGET VERSION NUMBER', 'PROCESS DATE', 'TENURE DATA', 'MONTH', 'EOQ_MONTH', 'EOY_MONTH', 'TENURE_MONTHS', 'EOY_TENURE', 'EOQ_TENURE', 'EOM_TENURE', 'PRODUCTION DATE', 'SNAPSHOT TYPE CODE', 'BUSINESS INTERRUPTION DAY VALUE', 'TSID', 'FP_NAME', 'JOB TYPE CODE', 'TAG', 'MARKET', 'LEADER_TSID', 'LEADER_NAME', 'LIFE AND HEALTH GRID CREDIT AMOUNT', 'LH_PACE_TARGET', 'GRID CREDIT AMOUNT', 'PACE_TARGET', 'EOY_TARGET', 'EOY_RANGE_AMT', 'EOQ_TARGET', 'EOQ_RANGE_AMT', 'EOM_TARGET', 'EOM_RANGE_AMT', 'ABOVE/BELOW', 'ABOVE_BELOW_LH', 'PRIOR ADVISOR EXPERIENCE INDICATOR', 'CURR_WK_IND'}),    #'RENAMED COLUMNS' = TABLE.RENAMECOLUMNS(#'REORDERED COLUMNS',{{'ABOVE/BELOW', 'ABOVE_BELOW'}}),    #'FILTERED ROWS' = TABLE.SELECTROWS(#'RENAMED COLUMNS', EACH [TENURE_MONTHS] >= 0),    #'ADDED CONDITIONAL COLUMN' = TABLE.ADDCOLUMN(#'FILTERED ROWS', 'TSL/ASSOC REP', EACH IF [JOB TYPE CODE] = '002022' THEN '002022 - TSL' ELSE IF [JOB TYPE CODE] = '002010' THEN '002010 - ASSOCIATE REP' ELSE NULL),    #'ADDED CUSTOM1' = TABLE.ADDCOLUMN(#'ADDED CONDITIONAL COLUMN', 'MVP', EACH TEXT.START([MARKET],7)),    #'MERGED QUERIES' = TABLE.NESTEDJOIN(#'ADDED CUSTOM1', {'TSID'}, #'12_31 PACE EXPORT', {'TSID'}, 'EXPORT', JOINKIND.LEFTOUTER),    #'EXPANDED EXPORT' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES', 'EXPORT', {'EOY TARGET', 'ABOVE/BELOW EOY'}, {'EXPORT.EOY TARGET', 'EXPORT.ABOVE/BELOW EOY'}),    #'RENAMED COLUMNS1' = TABLE.RENAMECOLUMNS(#'EXPANDED EXPORT',{{'EXPORT.EOY TARGET', 'EOY PACE TARGET'}, {'EXPORT.ABOVE/BELOW EOY', 'ABOVE/BELOW EOY'}}),    #'ADDED CUSTOM2' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS1', 'JOINVALUE', EACH DATETIME.TOTEXT ([PROCESS DATE], 'MM/DD/YY') & [TSID]),    #'MERGED QUERIES2' = TABLE.NESTEDJOIN(#'ADDED CUSTOM2', {'JOINVALUE'}, OVERRIDES, {'JOIN VALUE'}, 'OVERRIDES', JOINKIND.LEFTOUTER),    #'EXPANDED OVERRIDES' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES2', 'OVERRIDES', {'MARKET'}, {'OVERRIDES.MARKET'}),    #'RENAMED COLUMNS2' = TABLE.RENAMECOLUMNS(#'EXPANDED OVERRIDES',{{'MARKET', 'ORIGINAL MARKET'}}),    #'ADDED CUSTOM3' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS2', 'MARKET', EACH IF [OVERRIDES.MARKET] IS NULL THEN [ORIGINAL MARKET] ELSE [OVERRIDES.MARKET]),    #'MERGED QUERIES3' = TABLE.NESTEDJOIN(#'ADDED CUSTOM3', {'MARKET'}, #'DIRECTOR LIST', {'WORKER_STS_FCT_MKT'}, 'DIRECTOR LIST', JOINKIND.LEFTOUTER),    #'EXPANDED DIRECTOR LIST' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES3', 'DIRECTOR LIST', {'SRC_SYS_KEY_TXT', 'EMP_NM', 'EFF_BEG_DT'}, {'DIRECTOR LIST.SRC_SYS_KEY_TXT', 'DIRECTOR LIST.EMP_NM', 'DIRECTOR LIST.EFF_BEG_DT'}),    #'RENAMED COLUMNS3' = TABLE.RENAMECOLUMNS(#'EXPANDED DIRECTOR LIST',{{'DIRECTOR LIST.EMP_NM', 'MARKET DIRECTOR'}, {'DIRECTOR LIST.SRC_SYS_KEY_TXT', 'DIRECTOR TSID'},{'DIRECTOR LIST.EFF_BEG_DT', 'MARKET DIRECTOR START DATE'}}),    #'CHANGED TYPE' = TABLE.TRANSFORMCOLUMNTYPES(#'RENAMED COLUMNS3',{{'PROCESS DATE', TYPE DATE}}),    #'ADDED CUSTOM7' = TABLE.ADDCOLUMN(#'CHANGED TYPE', 'JOINVALUE2', EACH [TSID]&'-'&TEXT.UPPER(DATE.TOTEXT([PROCESS DATE],'DDMMMYYYY'))),    #'MERGED QUERIES4' = TABLE.NESTEDJOIN(#'ADDED CUSTOM7', {'JOINVALUE2'}, #'MARKET DEVELOPERS (2)', {'JOINVALUE'}, 'MARKET DEVELOPERS', JOINKIND.LEFTOUTER),    #'EXPANDED MARKET DEVELOPERS' = TABLE.EXPANDTABLECOLUMN(#'MERGED QUERIES4', 'MARKET DEVELOPERS', {'MARKET DEVELOPER START DATE', 'RDL NAME'}, {'MARKET DEVELOPERS.MARKET DEVELOPER START DATE', 'MARKET DEVELOPERS.RDL NAME'}),    #'ADDED CUSTOM4' = TABLE.ADDCOLUMN(#'EXPANDED MARKET DEVELOPERS', 'MARKET DIRECTOR CONDITIONAL', EACH IF [MARKET DIRECTOR START DATE] IS NULL THEN [MARKET DIRECTOR]ELSE IF [PROCESS DATE] < [MARKET DIRECTOR START DATE] THEN NULL ELSE [MARKET DIRECTOR]),    #'ADDED CUSTOM5' = TABLE.ADDCOLUMN(#'ADDED CUSTOM4', 'DIRECTOR TSID CONDITIONAL', EACH IF [MARKET DIRECTOR START DATE] IS NULL THEN [DIRECTOR TSID]ELSE IF [PROCESS DATE] < [MARKET DIRECTOR START DATE] THEN NULL ELSE [DIRECTOR TSID]),    #'REMOVED COLUMNS1' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM5',{'DIRECTOR TSID', 'MARKET DIRECTOR'}),    #'RENAMED COLUMNS4' = TABLE.RENAMECOLUMNS(#'REMOVED COLUMNS1',{{'MARKET DIRECTOR CONDITIONAL', 'MARKET DIRECTOR'}, {'DIRECTOR TSID CONDITIONAL', 'DIRECTOR TSID'}, {'MARKET DEVELOPERS.MARKET DEVELOPER START DATE', 'DEVELOPER BEGIN DATE'}}),    #'ADDED CUSTOM6' = TABLE.ADDCOLUMN(#'RENAMED COLUMNS4', 'MARKET DEVELOPERS.RDL NAME CONDITIONAL', EACH IF [DEVELOPER BEGIN DATE] IS NULL THEN [MARKET DEVELOPERS.RDL NAME]ELSE IF [PROCESS DATE] < [DEVELOPER BEGIN DATE] THEN NULL ELSE [MARKET DEVELOPERS.RDL NAME]),    #'REMOVED COLUMNS2' = TABLE.REMOVECOLUMNS(#'ADDED CUSTOM6',{'MARKET DEVELOPERS.RDL NAME'}),    #'RENAMED COLUMNS5' = TABLE.RENAMECOLUMNS(#'REMOVED COLUMNS2',{{'MARKET DEVELOPERS.RDL NAME CONDITIONAL', 'MARKET DEVELOPERS.RDL NAME'}})IN    #'RENAMED COLUMNS5

output:
Traceback (most recent call last):
  File "C:\Dhruv\ReportRationalization\sqlmetadata_testing.py", line 144, in <module>
    res = parser.columns
          ^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 207, in columns
    columns_aliases_names=self.columns_aliases_names,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 331, in columns_aliases_names
    self._handle_column_alias_subquery_level_update(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 686, in _handle_column_alias_subquery_level_update
    self._add_to_columns_aliases_subsection(token=token)
  File "C:\Users\dhruv.singh\AppData\Local\Programs\Python\Python312\Lib\site-packages\sql_metadata\parser.py", line 752, in _add_to_columns_aliases_subsection
    section = COLUMNS_SECTIONS[keyword]
              ~~~~~~~~~~~~~~~~^^^^^^^^^
KeyError: 'FROM'